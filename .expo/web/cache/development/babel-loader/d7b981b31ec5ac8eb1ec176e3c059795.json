{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\screens\\\\SatisfactionSurvey.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nimport firebase from \"../../../database/firebase\";\nimport { connect } from \"react-redux\";\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\n\nvar SatisfactionSurvey = function SatisfactionSurvey(props) {\n  var _useState = useState({\n    understandingExercises: \"\",\n    applicationUnderstanding: \"\",\n    sentimentPercentage: \"Neutro\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var saveFormReportEvent = function saveFormReportEvent() {\n    var idRecord, res;\n    return _regeneratorRuntime.async(function saveFormReportEvent$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            idRecord = \"\";\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"satisfactionSurvey\").add(_objectSpread(_objectSpread({}, values), {}, {\n              userId: props.user.uid,\n              userName: props.user.information.personal.name,\n              userPhone: props.user.information.personal.phone\n            })));\n\n          case 3:\n            res = _context.sent;\n            idRecord = res.id;\n            props.navigation.navigate(\"Home\");\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    console.warn(\"survey effect\");\n  }, []);\n  return React.createElement(View, {\n    style: styles.Contenedor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.ContainerQuestions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.ContainerQuestion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.Question,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \" \", \"Logro comprender los ejercicios?\", \" \"), React.createElement(TextInput, {\n    value: values.understandingExercises,\n    onChangeText: function onChangeText(text) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        understandingExercises: text\n      }));\n    },\n    style: styles.ContainerAnswer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.ContainerQuestions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.ContainerQuestion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.Question,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \" Entendio la aplicacion?\"), React.createElement(TextInput, {\n    style: styles.ContainerAnswer,\n    value: values.applicationUnderstanding,\n    onChangeText: function onChangeText(text) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        applicationUnderstanding: text\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.ContainerQuestions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.ContainerQuestion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.Question,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Como se siente despu\\xE9s de completar el protocolo?\"), React.createElement(Picker, {\n    selectedValue: values.sentimentPercentage + \"\",\n    style: {\n      height: vmin(15),\n      width: \"100%\"\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        sentimentPercentage: itemValue\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, [\"Mal\", \"Neutro\", \"Excelente\"].map(function (element, index) {\n    return React.createElement(Picker.Item, {\n      key: \"p\" + index,\n      label: element + \"\",\n      value: element + \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    });\n  })))), React.createElement(View, {\n    style: styles.containerButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      saveFormReportEvent();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Registrar Respuestas\"))));\n};\n\nvar MapStateToProps = function MapStateToProps(store) {\n  return {\n    user: store.User.user\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {\n    setUser: function setUser(val) {\n      return dispatch(actionsUser.SET_USER(val));\n    }\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(SatisfactionSurvey);\nvar styles = StyleSheet.create({\n  Contenedor: {\n    backgroundColor: \"white\",\n    justifyContent: \"space-around\",\n    height: \"100%\"\n  },\n  textHeader: {\n    fontSize: vmin(6),\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    width: \"100%\",\n    marginBottom: vmin(5)\n  },\n  ContainerQuestions: {\n    width: \"90%\",\n    margin: \"auto\",\n    height: \"25%\"\n  },\n  ContainerQuestion: {\n    width: \"100%\",\n    height: \"auto\",\n    marginTop: vmin(3)\n  },\n  Question: {\n    fontSize: vmin(5),\n    textAlign: \"left\"\n  },\n  ContainerAnswer: {\n    width: \"100%\",\n    height: vmin(15),\n    borderColor: \"#e4e4e4\",\n    borderWidth: vmin(0.5),\n    marginTop: vmin(2),\n    borderRadius: vmin(4)\n  },\n  containerButton: {\n    height: \"15%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: vmin(2)\n  },\n  button: {\n    backgroundColor: \"#6979F8\",\n    margin: vmin(2),\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/screens/SatisfactionSurvey.tsx"],"names":["React","useState","useEffect","require","vmin","firebase","connect","actionsUser","SatisfactionSurvey","props","understandingExercises","applicationUnderstanding","sentimentPercentage","values","setValues","saveFormReportEvent","idRecord","db","collection","add","userId","user","uid","userName","information","personal","name","userPhone","phone","res","id","navigation","navigate","console","warn","styles","Contenedor","ContainerQuestions","ContainerQuestion","Question","text","ContainerAnswer","height","width","itemValue","itemIndex","map","element","index","containerButton","button","color","MapStateToProps","store","User","MapDispatchToProps","dispatch","setUser","val","SET_USER","StyleSheet","create","backgroundColor","justifyContent","textHeader","fontSize","fontWeight","textAlign","marginBottom","margin","marginTop","borderColor","borderWidth","borderRadius","alignItems","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Picker,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  ScrollView,\r\n  ViewBase,\r\n} from \"react-native\";\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\nimport firebase from \"../../../database/firebase\";\r\n// redux\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\r\n\r\nconst SatisfactionSurvey = (props) => {\r\n  const [values, setValues] = useState({\r\n    understandingExercises: \"\",\r\n    applicationUnderstanding: \"\",\r\n    sentimentPercentage: \"Neutro\",\r\n  });\r\n\r\n  const saveFormReportEvent = async () => {\r\n    let idRecord = \"\";\r\n\r\n    let res = await firebase.db.collection(\"satisfactionSurvey\").add({\r\n      ...values,\r\n      userId: props.user.uid,\r\n      userName: props.user.information.personal.name,\r\n      userPhone: props.user.information.personal.phone,\r\n    });\r\n    idRecord = res.id;\r\n    props.navigation.navigate(\"Home\");\r\n  };\r\n  useEffect(()=>{\r\n    console.warn(\"survey effect\")\r\n  },[])\r\n  return (\r\n    <View style={styles.Contenedor}>\r\n      <View style={styles.ContainerQuestions}>\r\n        <View style={styles.ContainerQuestion}>\r\n          <Text style={styles.Question}>\r\n            {\" \"}\r\n            Logro comprender los ejercicios?{\" \"}\r\n          </Text>\r\n          <TextInput\r\n            value={values.understandingExercises}\r\n            onChangeText={(text) =>\r\n              {setValues({ ...values, understandingExercises: text })}\r\n            }\r\n            style={styles.ContainerAnswer}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.ContainerQuestions}>\r\n        <View style={styles.ContainerQuestion}>\r\n          <Text style={styles.Question}> Entendio la aplicacion?</Text>\r\n          <TextInput\r\n            style={styles.ContainerAnswer}\r\n            value={values.applicationUnderstanding}\r\n            onChangeText={(text) =>\r\n              {setValues({ ...values, applicationUnderstanding: text })}\r\n            }\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.ContainerQuestions}>\r\n        <View style={styles.ContainerQuestion}>\r\n          <Text style={styles.Question}>\r\n            Como se siente después de completar el protocolo?\r\n          </Text>\r\n\r\n          <Picker\r\n            selectedValue={values.sentimentPercentage + \"\"}\r\n            style={{ height: vmin(15), width: \"100%\" }}\r\n            onValueChange={(itemValue, itemIndex) =>\r\n              {setValues({ ...values, sentimentPercentage: itemValue })}\r\n            }\r\n          >\r\n            {[\"Mal\", \"Neutro\", \"Excelente\"].map((element, index) => {\r\n              return (\r\n                <Picker.Item\r\n                  key={\"p\" + index}\r\n                  label={element + \"\"}\r\n                  value={element + \"\"}\r\n                />\r\n              );\r\n            })}\r\n          </Picker>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.containerButton}>\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={() =>{ saveFormReportEvent()}}\r\n        >\r\n          <Text style={{ color: \"white\" }}>Registrar Respuestas</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  return {\r\n    user: store.User.user,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({\r\n  setUser: (val) => dispatch(actionsUser.SET_USER(val)),\r\n});\r\n\r\nexport default connect(MapStateToProps, MapDispatchToProps)(SatisfactionSurvey);\r\n\r\nconst styles = StyleSheet.create({\r\n  Contenedor: {\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"space-around\",\r\n    height: \"100%\",\r\n  },\r\n  textHeader: {\r\n    fontSize: vmin(6),\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n    marginBottom: vmin(5),\r\n  },\r\n  ContainerQuestions: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    height: \"25%\",\r\n  },\r\n  ContainerQuestion: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    marginTop: vmin(3),\r\n  },\r\n  Question: {\r\n    fontSize: vmin(5),\r\n    textAlign: \"left\",\r\n  },\r\n  ContainerAnswer: {\r\n    width: \"100%\",\r\n    height: vmin(15),\r\n    borderColor: \"#e4e4e4\",\r\n    borderWidth: vmin(0.5),\r\n    marginTop: vmin(2),\r\n    borderRadius: vmin(4),\r\n  },\r\n\r\n  containerButton: {\r\n    height: \"15%\",\r\n    width: \"100%\",\r\n    // backgroundColor: \"red\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: vmin(2),\r\n  },\r\n  button: {\r\n    backgroundColor: \"#6979F8\",\r\n    margin: vmin(2),\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}