{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\screens\\\\GeneralInformation.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nimport Download from \"@expo/vector-icons/Ionicons\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport * as FileSystem from \"expo-file-system\";\nimport { connect } from \"react-redux\";\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\nimport { TourGuideZone, TourGuideZoneByPosition, useTourGuideController } from \"rn-tourguide\";\nimport firebase from \"../../../database/firebase\";\nimport { actionsDownload } from \"../../redux/actions/actionsDownload\";\nimport ChargeScreen from \"../Simple/ChargeScreen\";\n\nvar GeneralInformation = function GeneralInformation(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      information = _useState2[0],\n      setInformation = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      CurrentInformation = _useState4[0],\n      setCurrentInformation = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      exists = _useState6[0],\n      setExistence = _useState6[1];\n\n  var _useState7 = useState(props.props.navigation.isFocused()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isFocused = _useState8[0],\n      setIsFocused = _useState8[1];\n\n  var _useState9 = useState(1),\n      _useState10 = _slicedToArray(_useState9, 2),\n      toggledState = _useState10[0],\n      setToggledState = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      pending = _useState12[0],\n      setPending = _useState12[1];\n\n  var _useTourGuideControll = useTourGuideController(),\n      canStart = _useTourGuideControll.canStart,\n      start = _useTourGuideControll.start,\n      stop = _useTourGuideControll.stop,\n      eventEmitter = _useTourGuideControll.eventEmitter,\n      getCurrentStep = _useTourGuideControll.getCurrentStep;\n\n  var handleOnStart = function handleOnStart() {\n    return console.log(\"start\");\n  };\n\n  var handleOnStop = function handleOnStop() {\n    return console.log(\"stop\");\n  };\n\n  var handleOnStepChange = function handleOnStepChange(step) {\n    console.log(\"step--\", step);\n\n    if (step === undefined) {\n      props.updateShowTour1(false), stop;\n    } else {\n      console.log(\"step num=---\", step.order);\n    }\n\n    console.log(\"stepChange\");\n  };\n\n  var getGeneralInformation = function getGeneralInformation() {\n    var snapshot, res;\n    return _regeneratorRuntime.async(function getGeneralInformation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!props.connection) {\n              _context.next = 9;\n              break;\n            }\n\n            console.log(\"propy==\", props.repoIndex);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"generalInfo\").get());\n\n          case 4:\n            snapshot = _context.sent;\n            res = snapshot.docs.map(function (doc) {\n              return doc.data();\n            });\n            setInformation(res);\n            _context.next = 10;\n            break;\n\n          case 9:\n            setInformation(props.generalInfo);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var downloadSection = function downloadSection(title, element, index) {\n    var fileUri, downloadedFile, item;\n    return _regeneratorRuntime.async(function downloadSection$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            fileUri = \"\";\n\n            if (!(element.multimedia !== \"\")) {\n              _context2.next = 8;\n              break;\n            }\n\n            fileUri = \"\" + FileSystem.documentDirectory + (title + index);\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(FileSystem.downloadAsync(element.multimedia, fileUri));\n\n          case 5:\n            downloadedFile = _context2.sent;\n            _context2.next = 9;\n            break;\n\n          case 8:\n            fileUri = \"na\";\n\n          case 9:\n            item = {\n              id: index,\n              amputationLevel: element.amputationLevel,\n              description: element.description,\n              material: element.material,\n              multimedia: fileUri,\n              title: element.title\n            };\n\n            if (!validateExists(title, index)) {\n              props.downloadInfo({\n                title: title,\n                item: item\n              });\n              setExistence(!exists);\n            }\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function findElement(title, index) {\n    var location = [];\n    var tempIds = props.generalInfoIds;\n    var tempInfo = props.generalInfo;\n\n    if (tempIds !== undefined && tempIds.includes(title)) {\n      var modIndex = tempIds.indexOf(title);\n      var modInfo = tempInfo[modIndex];\n      modInfo.content.forEach(function (element, elementIndex) {\n        if (element.id === index) {\n          location.push(modIndex, elementIndex);\n          return;\n        }\n      });\n    }\n\n    return location;\n  }\n\n  var deleteMultimedia = function deleteMultimedia(uri) {\n    return _regeneratorRuntime.async(function deleteMultimedia$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(FileSystem.deleteAsync(FileSystem.documentDirectory + uri));\n\n          case 3:\n            _context3.next = 8;\n            break;\n\n          case 5:\n            _context3.prev = 5;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var deleteInformation = function deleteInformation(title, index) {\n    var location, uri, dlete;\n    return _regeneratorRuntime.async(function deleteInformation$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            location = findElement(title, index);\n            console.warn(\"location----\", location);\n            uri = props.generalInfo[location[0]].content[location[1]].multimedia;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(deleteMultimedia(uri));\n\n          case 5:\n            dlete = _context4.sent;\n            props.deleteInfo(location);\n            setExistence(!exists);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function validateExists(title, index) {\n    var result = false;\n    var tempIds = props.generalInfoIds;\n    var tempInfo = props.generalInfo;\n\n    if (tempIds !== undefined && tempIds.includes(title)) {\n      var modIndex = tempIds.indexOf(title);\n      var modInfo = tempInfo[modIndex];\n      modInfo.content.forEach(function (element) {\n        if (element.id === index) {\n          result = true;\n          return;\n        }\n      });\n    }\n\n    return result;\n  }\n\n  useEffect(function () {\n    var mounted = true;\n\n    if (information.length === 0) {\n      if (mounted) {\n        getGeneralInformation();\n      }\n    }\n\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  useEffect(function () {\n    if (props.showTour1 && props.repoIndex === 0 && canStart) {\n      console.warn(\"in effect if\");\n      start();\n    }\n  }, [canStart]);\n  useEffect(function () {\n    if (eventEmitter !== undefined) {\n      eventEmitter.on(\"start\", handleOnStart);\n      eventEmitter.on(\"stop\", function () {\n        console.warn(\"end\");\n        stop;\n      });\n      eventEmitter.on(\"stepChange\", handleOnStepChange);\n      return function () {\n        eventEmitter.off(\"start\", handleOnStart);\n        eventEmitter.off(\"stop\", handleOnStop);\n        eventEmitter.off(\"stepChange\", handleOnStepChange);\n      };\n    }\n  }, []);\n\n  var NavigationButton = function NavigationButton() {\n    return React.createElement(View, {\n      style: styles.containerNavigationButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        if (CurrentInformation - 1 >= 0) {\n          setCurrentInformation(CurrentInformation - 1);\n        } else if (CurrentInformation === 0) {\n          setCurrentInformation(information.length - 1);\n        }\n      },\n      style: styles.sideButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: [styles.whiteText, {\n        fontSize: vmin(5)\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, \"<\")), React.createElement(View, {\n      style: styles.navigationButtonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.whiteText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, information[CurrentInformation].title)), React.createElement(TouchableOpacity, {\n      style: styles.sideButton,\n      onPress: function onPress() {\n        if (CurrentInformation + 1 < information.length) {\n          setCurrentInformation(CurrentInformation + 1);\n        } else {\n          if (props.navigation) {\n            props.navigation.navigate(\"Home\");\n          } else {\n            setCurrentInformation(0);\n          }\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: [styles.whiteText, {\n        fontSize: vmin(5)\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    }, \">\")));\n  };\n\n  var CardInformation = function CardInformation(title, element, index) {\n    var description;\n\n    function setDescription() {\n      try {\n        description = JSON.parse(element.description);\n      } catch (e) {\n        description = element.description;\n      }\n\n      description = description.split(\"•\");\n    }\n\n    setDescription();\n    var existsInDownloads = validateExists(title, index);\n    var style = {\n      borderRadius: 10,\n      paddingBottom: 15\n    };\n    description.length > 1 ? description.shift() : \"\";\n    return React.createElement(View, {\n      key: \"general\" + index,\n      style: styles.cardInformation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }\n    }, element.title), element.multimedia != \"\" && React.createElement(View, {\n      style: styles.containerImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: element.multimedia\n      },\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        resizeMode: \"contain\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 15\n      }\n    })), React.createElement(View, {\n      style: styles.containerDescription,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }\n    }, description.map(function (text, key_index) {\n      return React.createElement(Text, {\n        key: \"text\" + key_index,\n        style: {\n          fontSize: vmin(4.5),\n          textAlign: \"justify\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }\n      }, \"• \" + text);\n    })), React.createElement(TourGuideZone, {\n      zone: 3,\n      text: \"Para tener acceso a esta información sin conexión a internet pulse aquí para descargar.\",\n      borderRadius: 16,\n      tooltipBottomOffset: 80,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }\n    }, !props.connection || existsInDownloads ? React.createElement(TouchableOpacity, {\n      style: styles.downloadButton,\n      onPress: function onPress() {\n        if (props.connection) {\n          Alert.alert(\"Eliminar \" + element.title, \"¿Está seguro que quiere eliminar la descarga de \" + element.title + \"?\", [{\n            text: \"Cancelar\",\n            style: \"cancel\"\n          }, {\n            text: \"Eliminar\",\n            onPress: function onPress() {\n              return _regeneratorRuntime.async(function onPress$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      deleteInformation(information[CurrentInformation].title, index);\n\n                    case 1:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }\n          }], {\n            cancelable: false\n          });\n        } else {\n          Alert.alert(\"Para eliminar \" + element.title + \" debes estar conectado al internet.\");\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"rgba(52, 152, 219, 1)\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 15\n      }\n    }, \"Descargado\"), React.createElement(MaterialIcons, {\n      name: \"file-download-done\",\n      size: vmin(7),\n      color: \"rgba(52, 152, 219, 1)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 15\n      }\n    })) : !pending ? React.createElement(TouchableOpacity, {\n      onPress: function _callee() {\n        return _regeneratorRuntime.async(function _callee$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                Alert.alert(\"Descargar \" + element.title, \"¿Está seguro que quiere descargar \" + element.title + \"?\", [{\n                  text: \"Cancelar\",\n                  style: \"cancel\"\n                }, {\n                  text: \"Descargar\",\n                  onPress: function onPress() {\n                    return _regeneratorRuntime.async(function onPress$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            setPending(true);\n                            downloadSection(information[CurrentInformation].title, element, index);\n\n                          case 2:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, null, null, null, Promise);\n                  }\n                }], {\n                  cancelable: false\n                });\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      style: styles.downloadButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"rgba(153, 153, 153, 1)\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 15\n      }\n    }, \"Descargar\"), React.createElement(Download, {\n      name: \"md-download-outline\",\n      size: vmin(7),\n      color: \"rgba(153, 153, 153, 1)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 15\n      }\n    })) : React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"rgba(52, 152, 219, 1)\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 15\n      }\n    }, \"Descargando\"), React.createElement(ActivityIndicator, {\n      size: \"small\",\n      color: \"rgba(52, 152, 219, 1)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 15\n      }\n    }))));\n  };\n\n  if (information.length == 0) {\n    if (!props.connection) {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          fontSize: vmin(8),\n          color: \"rgba(153, 153, 153, 1)\",\n          marginTop: \"50%\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }\n      }, \"No hay descargas\"));\n    } else {\n      return React.createElement(View, {\n        style: {\n          justifyContent: \"center\",\n          height: \"100%\",\n          marginTop: \"5%\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 9\n        }\n      }, React.createElement(ChargeScreen, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }\n      }));\n    }\n  } else {\n    var level = \"\";\n    props.props.navigation.getParam(\"amputationLevel\") !== undefined ? level = props.props.navigation.getParam(\"amputationLevel\") : props.user.information.medical.amputationLevel !== undefined ? level = props.user.information.medical.amputationLevel : level = \"\";\n    var leakedInformation = information[CurrentInformation].content.filter(function (element) {\n      if (level === \"\") {\n        console.warn(\"general info return element else\");\n        return element;\n      } else {\n        if (element.amputationLevel === \"\" || element.amputationLevel === level) {\n          return element;\n        }\n      }\n    });\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }\n    }, React.createElement(TourGuideZoneByPosition, {\n      zone: 1,\n      shape: \"rectangle\",\n      text: \"Utilice estos botones para explorar la información dentro del catálogo. Esta información es validada por expertos. Le va a servir de apoyo para el manejo de su amputación y proceso de rehabilitación.\",\n      isTourGuide: true,\n      top: \"-10%\",\n      left: 0,\n      width: \"100%\",\n      height: \"10%\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }\n    }), React.createElement(View, {\n      style: styles.header,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }\n    }, React.createElement(TourGuideZone, {\n      zone: 2,\n      text: \"La informaci\\xF3n esta organizada por categor\\xEDa. Con las flechas de los lados se puede mover por las categor\\xEDas.\",\n      borderRadius: 16,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 13\n      }\n    }, React.createElement(NavigationButton, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 15\n      }\n    }))), React.createElement(ScrollView, {\n      style: styles.body,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 11\n      }\n    }, React.createElement(TourGuideZone, {\n      zone: 4,\n      text: \"Cuando esté sin internet podrá ver la información descargada aquí mismo.\",\n      borderRadius: 16,\n      tooltipBottomOffset: 50,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 13\n      }\n    }, leakedInformation.map(function (element, index) {\n      return CardInformation(information[CurrentInformation].title, element, index);\n    })))));\n  }\n};\n\nvar MapStateToProps = function MapStateToProps(store) {\n  return {\n    connection: store.User.connection,\n    user: store.User.user,\n    repoIndex: store.User.repoIndex,\n    showTour1: store.User.showTour1,\n    generalInfo: store.DownloadReducer.GeneralInfo,\n    generalInfoIds: store.DownloadReducer.GeneralInfoIds\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {\n    setConnection: function setConnection(value) {\n      return dispatch(actionsUser.SET_CONNECTION(value));\n    },\n    updateShowTour1: function updateShowTour1(val) {\n      return dispatch(actionsUser.SHOW_TOUR1(val));\n    },\n    setRepoIndex: function setRepoIndex(val) {\n      return dispatch(actionsUser.SET_REPOINDEX(val));\n    },\n    downloadInfo: function downloadInfo(val) {\n      return dispatch(actionsDownload.ADD_GENERAL_INFO(val));\n    },\n    deleteInfo: function deleteInfo(val) {\n      return dispatch(actionsDownload.REMOVE_GENERAL_INFO(val));\n    }\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(GeneralInformation);\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"white\"\n  },\n  header: {\n    width: \"100%\",\n    height: \"15%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    borderColor: \"rgba(21, 21, 34, 1)\"\n  },\n  body: {\n    width: \"100%\",\n    height: \"85%\"\n  },\n  containerNavigationButton: {\n    width: \"90%\",\n    flexDirection: \"row\",\n    marginTop: vmin(2),\n    height: \"65%\",\n    borderRadius: 10,\n    backgroundColor: \"rgba(105, 121, 248, 1)\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  sideButton: {\n    height: \"100%\",\n    width: \"15%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 10\n  },\n  navigationButtonText: {\n    height: \"70%\",\n    width: \"70%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"rgba(255, 255, 255, 0.3)\",\n    borderLeftWidth: vmin(0.5),\n    borderRightWidth: vmin(0.5)\n  },\n  whiteText: {\n    color: \"white\"\n  },\n  cardInformation: {\n    width: \"100%\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    borderColor: \"rgba(21, 21, 34, 1)\",\n    borderBottomWidth: vmin(0.4),\n    paddingLeft: \"10%\",\n    paddingRight: \"10%\",\n    paddingBottom: \"5%\",\n    marginBottom: \"10%\"\n  },\n  downloadButton: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\"\n  },\n  containerDescription: {\n    marginTop: vmin(3),\n    fontSize: vmin(1),\n    marginBottom: vmin(2)\n  },\n  containerImage: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    height: vmin(70)\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/screens/GeneralInformation.tsx"],"names":["React","useEffect","useState","require","vmin","Download","MaterialIcons","FileSystem","connect","actionsUser","TourGuideZone","TourGuideZoneByPosition","useTourGuideController","firebase","actionsDownload","ChargeScreen","GeneralInformation","props","information","setInformation","CurrentInformation","setCurrentInformation","exists","setExistence","navigation","isFocused","setIsFocused","toggledState","setToggledState","pending","setPending","canStart","start","stop","eventEmitter","getCurrentStep","handleOnStart","console","log","handleOnStop","handleOnStepChange","step","undefined","updateShowTour1","order","getGeneralInformation","connection","repoIndex","db","collection","get","snapshot","res","docs","map","doc","data","generalInfo","downloadSection","title","element","index","fileUri","multimedia","documentDirectory","downloadAsync","downloadedFile","item","id","amputationLevel","description","material","validateExists","downloadInfo","findElement","location","tempIds","generalInfoIds","tempInfo","includes","modIndex","indexOf","modInfo","content","forEach","elementIndex","push","deleteMultimedia","uri","deleteAsync","deleteInformation","warn","dlete","deleteInfo","result","mounted","length","showTour1","on","off","NavigationButton","styles","containerNavigationButton","sideButton","whiteText","fontSize","navigationButtonText","navigate","CardInformation","setDescription","JSON","parse","e","split","existsInDownloads","style","borderRadius","paddingBottom","shift","cardInformation","fontWeight","containerImage","width","height","resizeMode","containerDescription","text","key_index","textAlign","downloadButton","Alert","alert","onPress","cancelable","color","flexDirection","container","marginTop","justifyContent","level","getParam","user","medical","leakedInformation","filter","header","body","MapStateToProps","store","User","DownloadReducer","GeneralInfo","GeneralInfoIds","MapDispatchToProps","dispatch","setConnection","value","SET_CONNECTION","val","SHOW_TOUR1","setRepoIndex","SET_REPOINDEX","ADD_GENERAL_INFO","REMOVE_GENERAL_INFO","StyleSheet","create","backgroundColor","alignItems","borderColor","borderLeftWidth","borderRightWidth","borderBottomWidth","paddingLeft","paddingRight","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Alert,\r\n  ActivityIndicator,\r\n  Image,\r\n} from \"react-native\";\r\n\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\nimport Download from \"react-native-vector-icons/Ionicons\";\r\nimport MaterialIcons from \"react-native-vector-icons/MaterialIcons\";\r\nimport * as FileSystem from \"expo-file-system\";\r\n// redux\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\r\nimport {\r\n  TourGuideZone, // Main wrapper of highlight component\r\n  TourGuideZoneByPosition, // Component to use mask on overlay (ie, position absolute)\r\n  useTourGuideController, // hook to start, etc.\r\n} from \"rn-tourguide\";\r\nimport firebase from \"../../../database/firebase\";\r\nimport { actionsDownload } from \"../../redux/actions/actionsDownload\";\r\nimport SegmentedControl from \"@react-native-segmented-control/segmented-control\";\r\nimport ChargeScreen from \"../Simple/ChargeScreen\";\r\n\r\nconst GeneralInformation = (props) => {\r\n  const [information, setInformation] = useState([]);\r\n  const [CurrentInformation, setCurrentInformation] = useState(0);\r\n  const [exists, setExistence] = useState(false);\r\n  const [isFocused, setIsFocused] = useState(\r\n    props.props.navigation.isFocused()\r\n  );\r\n  const [toggledState, setToggledState] = useState(1);\r\n  const [pending, setPending] = useState(false);\r\n  const {\r\n    canStart, // a boolean indicate if you can start tour guide\r\n    start, // a function to start the tourguide\r\n    stop, // a function  to stopping it\r\n    eventEmitter, // an object for listening some events\r\n    getCurrentStep,\r\n  } = useTourGuideController();\r\n\r\n  const handleOnStart = () => console.log(\"start\");\r\n  const handleOnStop = () => console.log(\"stop\");\r\n  const handleOnStepChange = (step) => {\r\n    console.log(\"step--\", step);\r\n    if (step === undefined) {\r\n      props.updateShowTour1(false), stop;\r\n    } else {\r\n      console.log(\"step num=---\", step.order);\r\n    }\r\n    console.log(`stepChange`);\r\n  };\r\n\r\n  const getGeneralInformation = async () => {\r\n    if (props.connection) {\r\n      console.log(\"propy==\", props.repoIndex);\r\n      const snapshot = await firebase.db.collection(\"generalInfo\").get();\r\n      let res: any = snapshot.docs.map((doc) => doc.data());\r\n      // console.warn(\"======\", res);\r\n      setInformation(res);\r\n    } else {\r\n      //console.warn(\"props-----\", props.generalInfo);\r\n      setInformation(props.generalInfo);\r\n    }\r\n  };\r\n\r\n  const downloadSection = async (title, element: any, index) => {\r\n    let fileUri: string = \"\";\r\n    if (element.multimedia !== \"\") {\r\n      fileUri = `${FileSystem.documentDirectory}${title + index}`;\r\n      const downloadedFile: FileSystem.FileSystemDownloadResult =\r\n        await FileSystem.downloadAsync(element.multimedia, fileUri);\r\n    } else {\r\n      fileUri = \"na\";\r\n    }\r\n    let item = {\r\n      id: index,\r\n      amputationLevel: element.amputationLevel,\r\n      description: element.description,\r\n      material: element.material,\r\n      multimedia: fileUri,\r\n      title: element.title,\r\n    };\r\n    // console.warn(\"paso---\", validateExists(title, index));\r\n    if (!validateExists(title, index)) {\r\n      //  console.warn(\"in if =---\", item);\r\n      props.downloadInfo({ title, item });\r\n      setExistence(!exists);\r\n    }\r\n    //});\r\n  };\r\n  function findElement(title, index) {\r\n    let location: Array<number> = [];\r\n    let tempIds = props.generalInfoIds;\r\n    let tempInfo = props.generalInfo;\r\n    if (tempIds !== undefined && tempIds.includes(title)) {\r\n      const modIndex: number = tempIds.indexOf(title);\r\n      let modInfo = tempInfo[modIndex];\r\n      modInfo.content.forEach((element, elementIndex) => {\r\n        if (element.id === index) {\r\n          location.push(modIndex, elementIndex);\r\n          return;\r\n        }\r\n      });\r\n    }\r\n    return location;\r\n  }\r\n  const deleteMultimedia = async (uri) => {\r\n    try {\r\n      await FileSystem.deleteAsync(FileSystem.documentDirectory + uri);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const deleteInformation = async (title, index) => {\r\n    const location = findElement(title, index);\r\n    console.warn(\"location----\", location);\r\n    const uri = props.generalInfo[location[0]].content[location[1]].multimedia;\r\n    const dlete = await deleteMultimedia(uri);\r\n    props.deleteInfo(location);\r\n    setExistence(!exists);\r\n  };\r\n\r\n  function validateExists(title, index) {\r\n    let result = false;\r\n    let tempIds = props.generalInfoIds;\r\n    let tempInfo = props.generalInfo;\r\n    // console.warn(\"valdiate tiele --\", title, \"---index---\", index)\r\n    //console.warn(\"temp---\", tempInfo)\r\n    if (tempIds !== undefined && tempIds.includes(title)) {\r\n      const modIndex = tempIds.indexOf(title);\r\n      // console.warn(\"index---\", modIndex)\r\n      let modInfo = tempInfo[modIndex];\r\n      // console.warn(\"modinfo---\", modInfo.content)\r\n      modInfo.content.forEach((element) => {\r\n        // console.warn(\"elemente id-- \", element.id)\r\n        if (element.id === index) {\r\n          //console.warn(\"in if\")\r\n          result = true;\r\n          return;\r\n        }\r\n        //   console.warn(\"jumped if\")\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (information.length === 0) {\r\n      //  console.warn(\"exists effect-----\", exists);\r\n      if (mounted) {\r\n        getGeneralInformation();\r\n      }\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.warn(\"second effect-----\", canStart);\r\n  //   if (canStart) {\r\n  //     // 👈 test if you can start otherwise nothing will happen\r\n  //     start();\r\n  //   }\r\n  // }, [canStart]);\r\n\r\n  // useEffect(() => {\r\n  //   console.warn(\"third effect-----\");\r\n  //   eventEmitter.on(\"start\", handleOnStart);\r\n  //   eventEmitter.on(\"stop\", handleOnStop);\r\n  //   eventEmitter.on(\"stepChange\", handleOnStepChange);\r\n\r\n  //   return () => {\r\n  //     eventEmitter.off(\"start\", handleOnStart);\r\n  //     eventEmitter.off(\"stop\", handleOnStop);\r\n  //     eventEmitter.off(\"stepChange\", handleOnStepChange);\r\n  //   };\r\n  // }, []);\r\n  useEffect(() => {\r\n    //\r\n    //console.warn(\"tour-----\", props);\r\n    if (props.showTour1 && props.repoIndex === 0 && canStart) {\r\n      console.warn(\"in effect if\");\r\n      start();\r\n      // console.warn(\"get current\", getCurrentStep())\r\n    }\r\n  }, [canStart]);\r\n\r\n  useEffect(() => {\r\n    //  console.warn(\"third effect-----\");\r\n    if (eventEmitter !== undefined) {\r\n      eventEmitter.on(\"start\", handleOnStart);\r\n      eventEmitter.on(\"stop\", () => {\r\n        console.warn(\"end\");\r\n        stop;\r\n      });\r\n      eventEmitter.on(\"stepChange\", handleOnStepChange);\r\n\r\n      return () => {\r\n        eventEmitter.off(\"start\", handleOnStart);\r\n        eventEmitter.off(\"stop\", handleOnStop);\r\n        eventEmitter.off(\"stepChange\", handleOnStepChange);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const NavigationButton = () => {\r\n    return (\r\n      <View style={styles.containerNavigationButton}>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            if (CurrentInformation - 1 >= 0) {\r\n              setCurrentInformation(CurrentInformation - 1);\r\n            } else if (CurrentInformation === 0) {\r\n              setCurrentInformation(information.length - 1);\r\n            }\r\n          }}\r\n          style={styles.sideButton}\r\n        >\r\n          <Text style={[styles.whiteText, { fontSize: vmin(5) }]}>{\"<\"}</Text>\r\n        </TouchableOpacity>\r\n        <View style={styles.navigationButtonText}>\r\n          <Text style={styles.whiteText}>\r\n            {information[CurrentInformation].title}\r\n          </Text>\r\n        </View>\r\n        <TouchableOpacity\r\n          style={styles.sideButton}\r\n          onPress={() => {\r\n            if (CurrentInformation + 1 < information.length) {\r\n              setCurrentInformation(CurrentInformation + 1);\r\n            } else {\r\n              if (props.navigation) {\r\n                props.navigation.navigate(\"Home\");\r\n              } else {\r\n                setCurrentInformation(0);\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          <Text style={[styles.whiteText, { fontSize: vmin(5) }]}>{\">\"}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const CardInformation = (title, element, index) => {\r\n    let description;\r\n    function setDescription() {\r\n      try {\r\n        description = JSON.parse(element.description);\r\n      } catch (e) {\r\n        description = element.description;\r\n      }\r\n      description = description.split(\"•\");\r\n    }\r\n    setDescription();\r\n\r\n    let existsInDownloads = validateExists(title, index);\r\n    // console.warn(\"exists--------\", exists);\r\n    const style = {\r\n      borderRadius: 10,\r\n      paddingBottom: 15,\r\n    };\r\n\r\n    description.length > 1 ? description.shift() : \"\";\r\n\r\n    return (\r\n      <View key={\"general\" + index} style={styles.cardInformation}>\r\n        <Text style={{ fontWeight: \"bold\" }}>{element.title}</Text>\r\n\r\n          {element.multimedia != \"\" && (\r\n            <View style={styles.containerImage}>\r\n              <Image\r\n                source={{ uri: element.multimedia }}\r\n                style={{ width: \"100%\", height: \"100%\", resizeMode: \"contain\" }}\r\n              />\r\n            </View>\r\n          )}\r\n        <View style={styles.containerDescription}>\r\n          {description.map((text, key_index) => {\r\n            return (\r\n              <Text\r\n                key={\"text\" + key_index}\r\n                style={{ fontSize: vmin(4.5), textAlign: \"justify\" }}\r\n              >\r\n                {\"• \" + text}\r\n              </Text>\r\n            );\r\n          })}\r\n        </View>\r\n        <TourGuideZone\r\n          zone={3}\r\n          text={\r\n            \"Para tener acceso a esta información sin conexión a internet pulse aquí para descargar.\"\r\n          }\r\n          borderRadius={16}\r\n          tooltipBottomOffset={80}\r\n        >\r\n          {!props.connection || existsInDownloads ? (\r\n            <TouchableOpacity\r\n              style={styles.downloadButton}\r\n              onPress={() => {\r\n                // Alert.alert(\" ALert on press \");\r\n                if (props.connection) {\r\n                  Alert.alert(\r\n                    \"Eliminar \" + element.title,\r\n                    \"¿Está seguro que quiere eliminar la descarga de \" +\r\n                      element.title +\r\n                      \"?\",\r\n                    [\r\n                      {\r\n                        text: \"Cancelar\",\r\n                        style: \"cancel\",\r\n                      },\r\n                      {\r\n                        text: \"Eliminar\",\r\n                        onPress: async () => {\r\n                          deleteInformation(\r\n                            information[CurrentInformation].title,\r\n                            index\r\n                          );\r\n                        },\r\n                      },\r\n                    ],\r\n                    { cancelable: false }\r\n                  );\r\n                } else {\r\n                  Alert.alert(\r\n                    \"Para eliminar \" +\r\n                      element.title +\r\n                      \" debes estar conectado al internet.\"\r\n                  );\r\n                }\r\n              }}\r\n            >\r\n              <Text style={{ color: \"rgba(52, 152, 219, 1)\" }}>Descargado</Text>\r\n              <MaterialIcons\r\n                name=\"file-download-done\"\r\n                size={vmin(7)}\r\n                color=\"rgba(52, 152, 219, 1)\"\r\n              />\r\n            </TouchableOpacity>\r\n          ) : !pending ? (\r\n            <TouchableOpacity\r\n              onPress={async () => {\r\n                //Alert.alert(title);\r\n                Alert.alert(\r\n                  \"Descargar \" + element.title,\r\n                  \"¿Está seguro que quiere descargar \" + element.title + \"?\",\r\n                  [\r\n                    {\r\n                      text: \"Cancelar\",\r\n                      style: \"cancel\",\r\n                    },\r\n                    {\r\n                      text: \"Descargar\",\r\n                      onPress: async () => {\r\n                        setPending(true);\r\n                        downloadSection(\r\n                          information[CurrentInformation].title,\r\n                          element,\r\n                          index\r\n                        );\r\n                        // setPending(false);\r\n                        //console.log(\"information--------\", element);\r\n                      },\r\n                    },\r\n                  ],\r\n                  { cancelable: false }\r\n                );\r\n              }}\r\n              style={styles.downloadButton}\r\n            >\r\n              <Text style={{ color: \"rgba(153, 153, 153, 1)\" }}>Descargar</Text>\r\n              <Download\r\n                name=\"md-download-outline\"\r\n                size={vmin(7)}\r\n                color=\"rgba(153, 153, 153, 1)\"\r\n              />\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <View style={{ flexDirection: \"row\" }}>\r\n              <Text style={{ color: \"rgba(52, 152, 219, 1)\" }}>\r\n                Descargando\r\n              </Text>\r\n              <ActivityIndicator size=\"small\" color=\"rgba(52, 152, 219, 1)\" />\r\n            </View>\r\n          )}\r\n        </TourGuideZone>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  if (information.length == 0) {\r\n    if (!props.connection) {\r\n      return (\r\n        <View style={styles.container}>\r\n          <Text\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontSize: vmin(8),\r\n              color: \"rgba(153, 153, 153, 1)\",\r\n              marginTop: \"50%\",\r\n            }}\r\n          >\r\n            No hay descargas\r\n          </Text>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View\r\n          style={{ justifyContent: \"center\", height: \"100%\", marginTop: \"5%\" }}\r\n        >\r\n          <ChargeScreen />\r\n        </View>\r\n      );\r\n    }\r\n  } else {\r\n    // console.warn(\"props====\", props);\r\n    // console.warn(\"current inf-----\", information[CurrentInformation]);\r\n\r\n    let level = \"\";\r\n    props.props.navigation.getParam(\"amputationLevel\") !== undefined\r\n      ? (level = props.props.navigation.getParam(\"amputationLevel\"))\r\n      : props.user.information.medical.amputationLevel !== undefined\r\n      ? (level = props.user.information.medical.amputationLevel)\r\n      : (level = \"\");\r\n    // console.warn(\r\n    //   \"params---------\",\r\n    //   props.props.navigation.getParam(\"amputationLevel\")\r\n    // );\r\n    // console.warn(\r\n    //   \"user info---------\",\r\n    //   props.user.information.medical.amputationLevel\r\n    // );\r\n    let leakedInformation = information[CurrentInformation].content.filter(\r\n      (element) => {\r\n        // console.warn(\"element----\", element);\r\n        // console.warn(\"level-----\", level);\r\n        if (level === \"\") {\r\n          //no amputation level specified\r\n          console.warn(\"general info return element else\");\r\n          return element;\r\n        } else {\r\n          //amputation level registered\r\n          //  console.warn(\"in if -------\", level);\r\n          if (\r\n            element.amputationLevel === \"\" ||\r\n            element.amputationLevel === level\r\n          ) {\r\n            return element;\r\n          }\r\n        }\r\n\r\n        // if (\r\n        //   (props.user.information.role = \"paciente\") ||\r\n        //   props.props.navigation.getParam(\"amputationLevel\") !== undefined\r\n        // ) {\r\n        //   // console.log(\"else\")\r\n        //   let level = \"\";\r\n        //   props.props.navigation.getParam(\"amputationLevel\") !== undefined\r\n        //     ? (level = props.props.navigation.getParam(\"amputationLevel\"))\r\n        //     : (level = props.user.information.medical.amputationLevel);\r\n        //   // console.warn(\"leve----\", level);\r\n        //   return (\r\n        //     element.amputationLevel == \"\" || element.amputationLevel == level\r\n        //   );\r\n        // } else {\r\n        //   console.warn(\"general info return element else\");\r\n        //   return element;\r\n        // }\r\n      }\r\n    );\r\n    return (\r\n      <View>\r\n        <View style={styles.container}>\r\n          <TourGuideZoneByPosition\r\n            zone={1}\r\n            shape={\"rectangle\"}\r\n            text={\r\n              \"Utilice estos botones para explorar la información dentro del catálogo. Esta información es validada por expertos. Le va a servir de apoyo para el manejo de su amputación y proceso de rehabilitación.\"\r\n            }\r\n            isTourGuide\r\n            top={\"-10%\"}\r\n            left={0}\r\n            width={\"100%\"}\r\n            height={\"10%\"}\r\n          />\r\n          <View style={styles.header}>\r\n            {/* <Text style={{ color: \"rgba(34, 34, 34, 1)\" }}>\r\n            Información Básica\r\n          </Text> */}\r\n            {/* <SegmentedControl\r\n              values={[\"Sin Prótesis\", \"Con Prótesis\", \"Ambos\"]}\r\n              selectedIndex={toggledState}\r\n              style={{ height: \"40%\", width: \"90%\", marginTop: \"2%\" }}\r\n              activeFontStyle={{ color: \"#000000\", fontWeight: \"bold\" }}\r\n              onChange={(event) => {\r\n                console.warn(\r\n                  \"index----\",\r\n                  event.nativeEvent.selectedSegmentIndex\r\n                );\r\n                setToggledState(event.nativeEvent.selectedSegmentIndex);\r\n              }}\r\n            /> */}\r\n            <TourGuideZone\r\n              zone={2}\r\n              text=\"La información esta organizada por categoría. Con las flechas de los lados se puede mover por las categorías.\"\r\n              borderRadius={16}\r\n            >\r\n              <NavigationButton />\r\n            </TourGuideZone>\r\n          </View>\r\n\r\n          {/*  </TourGuideZone> */}\r\n          <ScrollView style={styles.body}>\r\n            <TourGuideZone\r\n              zone={4}\r\n              text={\r\n                \"Cuando esté sin internet podrá ver la información descargada aquí mismo.\"\r\n              }\r\n              borderRadius={16}\r\n              tooltipBottomOffset={50}\r\n            >\r\n              {leakedInformation.map((element, index) => {\r\n                return CardInformation(\r\n                  information[CurrentInformation].title,\r\n                  element,\r\n                  index\r\n                );\r\n              })}\r\n            </TourGuideZone>\r\n          </ScrollView>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  //console.warn(\"mappp-----\", store.User.user);\r\n  // console.warn(\"mappp ids-----\", store.DownloadReducer.GeneralInfoIds);\r\n  // console.warn(\"mappp-----\", store.DownloadReducer.GeneralInfo);\r\n  // console.warn(\"mappp ids-----\", store.DownloadReducer.GeneralInfoIds);\r\n  // console.warn(\"show tour1-----\", store.User.showTour1);\r\n  return {\r\n    connection: store.User.connection,\r\n    user: store.User.user,\r\n    repoIndex: store.User.repoIndex,\r\n    showTour1: store.User.showTour1,\r\n    generalInfo: store.DownloadReducer.GeneralInfo,\r\n    generalInfoIds: store.DownloadReducer.GeneralInfoIds,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({\r\n  setConnection: (value) => dispatch(actionsUser.SET_CONNECTION(value)),\r\n  updateShowTour1: (val) => dispatch(actionsUser.SHOW_TOUR1(val)),\r\n  setRepoIndex: (val) => dispatch(actionsUser.SET_REPOINDEX(val)),\r\n  downloadInfo: (val) => dispatch(actionsDownload.ADD_GENERAL_INFO(val)),\r\n  deleteInfo: (val) => dispatch(actionsDownload.REMOVE_GENERAL_INFO(val)),\r\n});\r\nexport default connect(MapStateToProps, MapDispatchToProps)(GeneralInformation);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  header: {\r\n    width: \"100%\",\r\n    height: \"15%\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    borderColor: \"rgba(21, 21, 34, 1)\",\r\n    //  borderBottomWidth: vmin(0.2),\r\n    // backgroundColor: \"green\",\r\n  },\r\n\r\n  body: {\r\n    width: \"100%\",\r\n    height: \"85%\",\r\n    //   backgroundColor: \"pink\"\r\n  },\r\n\r\n  containerNavigationButton: {\r\n    width: \"90%\",\r\n    flexDirection: \"row\",\r\n    marginTop: vmin(2),\r\n    height: \"65%\",\r\n    borderRadius: 10,\r\n    backgroundColor: \"rgba(105, 121, 248, 1)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  sideButton: {\r\n    height: \"100%\",\r\n    width: \"15%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n  },\r\n\r\n  navigationButtonText: {\r\n    height: \"70%\",\r\n    width: \"70%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderColor: \"rgba(255, 255, 255, 0.3)\",\r\n    borderLeftWidth: vmin(0.5),\r\n    borderRightWidth: vmin(0.5),\r\n  },\r\n\r\n  whiteText: {\r\n    color: \"white\",\r\n  },\r\n\r\n  cardInformation: {\r\n    width: \"100%\",\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n    borderColor: \"rgba(21, 21, 34, 1)\",\r\n    borderBottomWidth: vmin(0.4),\r\n    paddingLeft: \"10%\",\r\n    paddingRight: \"10%\",\r\n    paddingBottom: \"5%\",\r\n    marginBottom: \"10%\",\r\n  },\r\n\r\n  downloadButton: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  containerDescription: {\r\n    marginTop: vmin(3),\r\n    fontSize: vmin(1),\r\n    marginBottom: vmin(2),\r\n  },\r\n\r\n  containerImage: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    height: vmin(70),\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}