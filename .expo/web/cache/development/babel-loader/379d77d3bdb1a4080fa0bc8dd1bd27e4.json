{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\Simple\\\\Picker.js\";\nimport React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nexport default function Picker(props) {\n  var _this = this;\n\n  var temp = \"\";\n  var temp2 = \"\";\n  props.initialValue ? temp = props.initialValue : temp = props.placeholder;\n  props.initialIndex ? temp = props.list[props.initialIndex] : temp2 = 0;\n\n  var _React$useState = React.useState(temp),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      show = _React$useState4[0],\n      setShow = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      itemHeight = _React$useState6[0],\n      setItemHeight = _React$useState6[1];\n\n  var height = props.height;\n  var width = props.width;\n  return React.createElement(View, {\n    style: {\n      display: \"flex\",\n      width: width,\n      marginVertical: 5,\n      borderRadius: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    onBackdropPress: function onBackdropPress() {\n      return console.log(\"Pressed\");\n    },\n    visible: show,\n    propagateSwipe: true,\n    onRequestClose: function onRequestClose() {\n      setShow(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: 10,\n      minHeight: \"100%\",\n      alignItems: \"center\",\n      backgroundColor: \"rgba(244,244,244,0.7)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, props.list.map(function (element, index) {\n    return React.createElement(View, {\n      key: element + index,\n      style: {\n        backgroundColor: \"#ffffff\",\n        alignSelf: \"center\",\n        width: \"80%\",\n        height: \"8%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: {\n        height: \"96%\",\n        width: \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      onPress: function onPress() {\n        console.warn(\"clicked====\", element);\n        props.setData(element, index);\n        setValue(element);\n        setShow(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlignVertical: \"center\",\n        marginLeft: \"5%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, element, props.percentajes && element !== \"Seleccionar\" ? \"%\" : \"\"))));\n  }))), React.createElement(View, {\n    style: [styles.container, {\n      height: height\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      minWidth: \"100%\",\n      height: height\n    },\n    disabled: props.disabled ? true : false,\n    onPress: function onPress() {\n      setShow(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"100%\",\n      height: height,\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      height: \"100%\",\n      width: \"90%\",\n      flex: 1,\n      alignSelf: \"stretch\",\n      justifyContent: \"center\",\n      paddingHorizontal: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"left\",\n      textAlignVertical: \"center\",\n      color: \"#000000\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, value, props.percentajes && value !== \"Seleccionar\" ? \"%\" : \"\")), React.createElement(View, {\n    style: {\n      width: \"15%\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    style: {\n      paddingBottom: 8\n    },\n    name: \"sort-down\",\n    color: \"#808080\",\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  })))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    borderColor: \"#e3e3e3\",\n    borderWidth: 1,\n    borderRadius: 4\n  },\n  icons: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n    width: \"100%\",\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/Simple/Picker.js"],"names":["React","Icon","Picker","props","temp","temp2","initialValue","placeholder","initialIndex","list","useState","value","setValue","show","setShow","itemHeight","setItemHeight","height","width","display","marginVertical","borderRadius","console","log","flex","justifyContent","minHeight","alignItems","backgroundColor","map","element","index","alignSelf","warn","setData","textAlignVertical","marginLeft","percentajes","styles","container","minWidth","disabled","flexDirection","paddingHorizontal","textAlign","color","icons","paddingBottom","StyleSheet","create","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { TextInput, View, StyleSheet, Text, Modal,  TouchableOpacity, ScrollView} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\n\r\n\r\nexport default function Picker(props) {\r\n  let temp =\"\"\r\n  let temp2 = \"\"\r\n  props.initialValue ? temp = props.initialValue : temp = props.placeholder\r\n  props.initialIndex ? temp = props.list[props.initialIndex] : temp2 = 0\r\n  const [value, setValue] = React.useState(temp);\r\n  const [show, setShow] = React.useState(false);\r\n  const [itemHeight, setItemHeight] = React.useState(0)\r\n\r\n  // const icon = !visible ? \"eye-slash\" : \"eye\";\r\n  const height = props.height;\r\n  const width = props.width;\r\n\r\n  \r\n  return (\r\n    <View\r\n      style={{\r\n        display: \"flex\",\r\n        width: width,\r\n        marginVertical: 5,\r\n        borderRadius:10,\r\n      }}\r\n    >\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        onBackdropPress={() => console.log(\"Pressed\")}\r\n        visible={show}\r\n        propagateSwipe={true}\r\n        onRequestClose={() => {\r\n          setShow(false);\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius:10,\r\n            minHeight: \"100%\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"rgba(244,244,244,0.7)\",\r\n          }}\r\n        >\r\n          {props.list.map((element, index) => {\r\n            return (\r\n              <View\r\n                key={element + index}\r\n                style={{\r\n                  // position: \"absolute\",\r\n                  backgroundColor: \"#ffffff\",\r\n                  // borderRadius: 20,\r\n                  alignSelf: \"center\",\r\n                  width: \"80%\",\r\n                  height: \"8%\",\r\n                }}\r\n              >\r\n                {/* <ScrollView> */}\r\n                <View\r\n                  style={{\r\n                    height: \"96%\",\r\n                    width: \"100%\",\r\n                   // backgroundColor: \"yellow\",\r\n                  }}\r\n                >\r\n                  <TouchableOpacity\r\n                    style={{\r\n                     // backgroundColor: \"green\",\r\n                      width: \"100%\",\r\n                      justifyContent:\"center\",\r\n                      height: \"100%\",\r\n\r\n                    }}\r\n                    onPress={() => {\r\n                     console.warn(\"clicked====\", element)\r\n                     props.setData(element,index )\r\n                      setValue(element)\r\n                      setShow(false);\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                       textAlignVertical:\"center\", \r\n                       marginLeft:\"5%\",\r\n                      }}\r\n                    >\r\n                      {element}\r\n                      {(props.percentajes && element !==\"Seleccionar\")? \"%\":\"\"}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* </ScrollView> */}\r\n              </View>\r\n            );\r\n          })}\r\n        </View>\r\n      </Modal>\r\n      <View style={[styles.container,{ height:height}]}>\r\n        <TouchableOpacity\r\n          style={{ minWidth: \"100%\", height:height}}\r\n          disabled={props.disabled ? true : false}\r\n          onPress={() => {\r\n            setShow(true);\r\n          }}\r\n        >\r\n          <View style={{ width: \"100%\", height: height, flexDirection: \"row\" }}>\r\n            <View\r\n              style={{\r\n                height: \"100%\",\r\n                width: \"90%\",\r\n\r\n                flex: 1,\r\n                alignSelf: \"stretch\",\r\n                justifyContent: \"center\",\r\n                paddingHorizontal: 10,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  textAlign: \"left\",\r\n                  textAlignVertical: \"center\",\r\n                  color: \"#000000\",\r\n                }}\r\n              >\r\n               {value}{(props.percentajes && value !==\"Seleccionar\")? \"%\":\"\"}</Text>\r\n            </View>\r\n            <View style={{ width: \"15%\", height: \"100%\" }}>\r\n              <View style={styles.icons}>\r\n                <Icon\r\n                  style={{ paddingBottom: 8 }}\r\n                  name={\"sort-down\"}\r\n                  color={\"#808080\"}\r\n                  size={24}\r\n                  \r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width:\"100%\",\r\n  //  alignSelf: \"stretch\",\r\n    borderColor: \"#e3e3e3\",\r\n  //  / minHeight: \"100%\",\r\n    borderWidth: 1,\r\n    //backgroundColor:\"orange\",\r\n    borderRadius: 4,\r\n  },\r\n  icons: {\r\n    //   backgroundColor: \"#e3e3e3\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    borderRadius: 4,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}