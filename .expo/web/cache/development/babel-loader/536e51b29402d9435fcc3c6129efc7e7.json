{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\screens\\\\RegisterCompanion.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"../Simple/Picker\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nimport firebase from \"../../../database/firebase\";\nimport * as yup from \"yup\";\nimport Password from \"../Simple/PasswordTextField\";\nimport ChargeScreen from \"../Simple/ChargeScreen\";\nexport default function RegisterCompanion(props) {\n  var _useState = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    genero: \"\",\n    id: \"\",\n    phone: \"\",\n    validatedEmail: false,\n    patientId: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setdata = _useState2[1];\n\n  var _useState3 = useState({\n    password1: \"\",\n    password2: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwords = _useState4[0],\n      setPasswords = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var schema = yup.object().shape({\n    email: yup.string().required(\"El campo es obligatorio\").email(\"Por favor ingrese un correo válido\"),\n    password: yup.string().required(\"El campo es obligatorio\").max(20, \"No puede contener mas de ${max} letras\").min(6, \"No puede contener menos de ${min} letras\"),\n    name: yup.string().required(\"El campo es obligatorio\").max(30, \"No puede contener mas de ${max} letras\").min(8, \"No puede contener menos de ${min} letras\").matches(/^[^0-9]+$/, \"No puede contener números o símbolos\"),\n    id: yup.string().required(\"El campo es obligatorio\").max(15, \"No puede contener mas de ${max} letras\").min(8, \"No puede contener menos de ${min} letras\"),\n    phone: yup.string().required(\"El campo es obligatorio\").max(12, \"No puede contener mas de ${max} letras\").min(7, \"No puede contener menos de {min} letras\")\n  });\n\n  var signIn = function signIn() {\n    firebase.auth.createUserWithEmailAndPassword(data.email, data.password).then(function _callee(currentUser) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(firebase.db.collection(\"users\").doc(currentUser.user.uid).set({\n                personal: {\n                  name: data.name,\n                  phone: data.phone,\n                  genero: data.genero,\n                  email: data.email,\n                  id: data.id\n                },\n                token: \"\",\n                role: \"companion\"\n              }));\n\n            case 2:\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(linkCompanionReference(currentUser.user.uid));\n\n            case 4:\n              props.navigation.navigate(\"Home\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (error) {\n      if (error.code === \"auth/email-already-in-use\") {\n        Alert.alert(\"Correo ya está en uso\");\n      }\n\n      if (error.code === \"auth/invalid-email\") {\n        Alert.alert(\"Correo inválido!\");\n      }\n\n      console.error(error);\n    });\n  };\n\n  var linkCompanionReference = function linkCompanionReference(companion) {\n    return _regeneratorRuntime.async(function linkCompanionReference$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"users\").doc(data.patientId).update({\n              companionRef: companion\n            }).then(function (e) {\n              return console.log(\"se actualizo\");\n            }).catch(function (e) {\n              return console.log(\"Error actualizar \", e);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var validateEmailExistence = function validateEmailExistence() {\n    var aux, patientId2;\n    return _regeneratorRuntime.async(function validateEmailExistence$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            aux = false;\n            patientId2 = \"\";\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"users\").where(\"companionEmail\", \"==\", data.email).get().then(function (querySnapshot) {\n              querySnapshot.forEach(function (doc) {\n                patientId2 = doc.id;\n                aux = true;\n              });\n            }).catch(function (error) {\n              console.log(\"Error getting documents: \", error);\n            }));\n\n          case 4:\n            if (aux) {\n              setdata(_objectSpread(_objectSpread({}, data), {}, {\n                validatedEmail: true,\n                patientId: patientId2\n              }));\n            } else {\n              Alert.alert(\"Error\", \"No hay paciente vinculado a ese correo.\", [{\n                text: \"OK\",\n                onPress: function onPress() {\n                  props.navigation.navigate(\"Login\");\n                },\n                style: \"cancel\"\n              }], {\n                cancelable: false\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (loading) {\n    return React.createElement(View, {\n      style: {\n        backgroundColor: \"#ffffff\",\n        justifyContent: \"center\",\n        height: \"100%\",\n        width: \"100%\",\n        marginTop: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, React.createElement(ChargeScreen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.textHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, \"Por favor ingrese todos los datos para el registro.\")), React.createElement(ScrollView, {\n      style: styles.scroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.headerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, \"Correo Electr\\xF3nico\"), React.createElement(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(value) {\n        setdata(_objectSpread(_objectSpread({}, data), {}, {\n          email: value\n        }));\n      },\n      value: data.email,\n      keyboardType: \"email-address\",\n      placeholder: \"Dirección de correo electrónico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    })), data.validatedEmail ? React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.headerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, \"Nombre Completo\"), React.createElement(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(value) {\n        setdata(_objectSpread(_objectSpread({}, data), {}, {\n          name: value\n        }));\n      },\n      value: data.name,\n      placeholder: \"Ingrese Nombres y Apellidos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    })), React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.headerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, \"Documento de Identidad\"), React.createElement(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(value) {\n        setdata(_objectSpread(_objectSpread({}, data), {}, {\n          id: value.toString()\n        }));\n      },\n      value: data.id,\n      keyboardType: \"number-pad\",\n      placeholder: \"Tarjeta de Identidad o Cédula\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    })), React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.headerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, \"Tel\\xE9fono\"), React.createElement(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(value) {\n        setdata(_objectSpread(_objectSpread({}, data), {}, {\n          phone: value.toString()\n        }));\n      },\n      value: data.phone,\n      keyboardType: \"phone-pad\",\n      placeholder: \"Número telefónico celular\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    })), React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.headerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, \"Sexo\"), React.createElement(View, {\n      style: [styles.repetitionInputContainer, {\n        borderWidth: 0\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, React.createElement(Picker, {\n      width: \"100%\",\n      height: 40,\n      placeholder: \"Seleccionar\",\n      setData: function setData(itemValue, itemIndex) {\n        setdata(_objectSpread(_objectSpread({}, data), {}, {\n          genero: itemValue.toString()\n        }));\n      },\n      initialValue: \"Seleccionar\",\n      list: [\"Seleccionar\", \"Femenino\", \"Masculino\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }))), React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.headerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, \"Contrase\\xF1a\"), React.createElement(Password, {\n      label: \"Mínimo 8 caracteres\",\n      onChange: function onChange(value) {\n        setdata(_objectSpread(_objectSpread({}, data), {}, {\n          password: value\n        }));\n        setPasswords(_objectSpread(_objectSpread({}, passwords), {}, {\n          password1: value\n        }));\n      },\n      width: \"100%\",\n      height: 40,\n      value: data.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    })), React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.headerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, \"Confirmar Contrase\\xF1a\"), React.createElement(Password, {\n      label: \"Mínimo 8 caracteres\",\n      onChange: function onChange(value) {\n        setPasswords(_objectSpread(_objectSpread({}, passwords), {}, {\n          password2: value\n        }));\n      },\n      height: 40,\n      width: \"100%\",\n      value: passwords.password2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    })), React.createElement(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        if (passwords.password1 == passwords.password2) {\n          schema.validate(data).then(function () {\n            signIn();\n          }).catch(function (err) {\n            Alert.alert(err);\n            console.log(err);\n          });\n        } else {\n          Alert.alert(\"Las contraseñas no coinciden.\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, \"Registrar y Acceder\"))) : React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        margin: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    }, \"\\u26A0\\uFE0F Es necesario confirmar que un paciente haya seleccionado este correo electr\\xF3nico como su acompa\\xF1ante\"), React.createElement(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return validateEmailExistence();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }\n    }, \"Validar correo\")))));\n  }\n}\nvar styles = StyleSheet.create({\n  header: {\n    height: \"10%\",\n    width: \"90%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\"\n  },\n  textHeader: {\n    fontSize: vmin(5)\n  },\n  container: {\n    backgroundColor: \"white\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  containerInput: {\n    height: vmin(25),\n    width: \"90%\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    marginBottom: \"2%\",\n    justifyContent: \"space-evenly\"\n  },\n  headerInput: {\n    width: \"100%\",\n    textAlign: \"left\",\n    fontSize: vmin(4),\n    fontWeight: \"bold\",\n    left: vmin(1.5)\n  },\n  input: {\n    height: \"60%\",\n    width: \"100%\",\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  button: {\n    backgroundColor: \"#6979F8\",\n    width: \"90%\",\n    height: vmin(12),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 5,\n    margin: \"5%\",\n    marginTop: vmin(10),\n    marginBottom: vmin(10)\n  },\n  scroll: {\n    height: \"90%\",\n    width: \"100%\"\n  },\n  repetitionInputContainer: {\n    height: \"50%\",\n    width: \"100%\",\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/screens/RegisterCompanion.tsx"],"names":["React","useState","Picker","require","vmin","firebase","yup","Password","ChargeScreen","RegisterCompanion","props","email","password","name","genero","id","phone","validatedEmail","patientId","data","setdata","password1","password2","passwords","setPasswords","loading","setLoading","schema","object","shape","string","required","max","min","matches","signIn","auth","createUserWithEmailAndPassword","then","currentUser","db","collection","doc","user","uid","set","personal","token","role","linkCompanionReference","navigation","navigate","catch","error","code","Alert","alert","console","companion","update","companionRef","e","log","validateEmailExistence","aux","patientId2","where","get","querySnapshot","forEach","text","onPress","style","cancelable","backgroundColor","justifyContent","height","width","marginTop","styles","container","header","textHeader","scroll","containerInput","headerInput","input","value","toString","repetitionInputContainer","borderWidth","itemValue","itemIndex","button","validate","err","color","margin","StyleSheet","create","alignItems","marginLeft","marginRight","fontSize","marginBottom","textAlign","fontWeight","left","borderColor","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Alert,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport Picker from \"../Simple/Picker\";\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\nimport firebase from \"../../../database/firebase\";\r\nimport * as yup from \"yup\";\r\nimport Password from \"../Simple/PasswordTextField\";\r\nimport ChargeScreen from \"../Simple/ChargeScreen\";\r\n\r\nexport default function RegisterCompanion(props) {\r\n  const [data, setdata] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",   \r\n    genero: \"\",\r\n    id: \"\",\r\n    phone: \"\",\r\n    validatedEmail: false,\r\n    patientId: \"\",\r\n  });\r\n\r\n  const [passwords, setPasswords] = useState({\r\n    password1: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const schema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .required(\"El campo es obligatorio\")\r\n      .email(\"Por favor ingrese un correo válido\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"El campo es obligatorio\")\r\n      .max(20, \"No puede contener mas de ${max} letras\")\r\n      .min(6, \"No puede contener menos de ${min} letras\"),\r\n    name: yup\r\n      .string()\r\n      .required(\"El campo es obligatorio\")\r\n      .max(30, \"No puede contener mas de ${max} letras\")\r\n      .min(8, \"No puede contener menos de ${min} letras\")\r\n      .matches(/^[^0-9]+$/, \"No puede contener números o símbolos\"),\r\n    id: yup\r\n      .string()\r\n      .required(\"El campo es obligatorio\")\r\n      .max(15, \"No puede contener mas de ${max} letras\")\r\n      .min(8, \"No puede contener menos de ${min} letras\"),\r\n    phone: yup\r\n      .string()\r\n      .required(\"El campo es obligatorio\")\r\n      .max(12, \"No puede contener mas de ${max} letras\")\r\n      .min(7, \"No puede contener menos de {min} letras\"),\r\n  });\r\n\r\n  const signIn = () => {\r\n    firebase.auth\r\n      .createUserWithEmailAndPassword(data.email, data.password)\r\n      .then(async (currentUser: any) => {\r\n        // Despues de registrar se crea la referencia del usuario en la tabla Usuarios\r\n        await firebase.db\r\n          .collection(\"users\")\r\n          .doc(currentUser.user.uid)\r\n          .set({\r\n            personal: {\r\n              name: data.name,\r\n              phone: data.phone,\r\n              genero: data.genero,\r\n              email: data.email,\r\n              id: data.id,\r\n            },\r\n            token: \"\",\r\n            role: \"companion\",\r\n          });\r\n        await linkCompanionReference(currentUser.user.uid);\r\n        props.navigation.navigate(\"Home\");\r\n      })\r\n      .catch((error) => {\r\n        if (error.code === \"auth/email-already-in-use\") {\r\n          Alert.alert(\"Correo ya está en uso\");\r\n        }\r\n        if (error.code === \"auth/invalid-email\") {\r\n          Alert.alert(\"Correo inválido!\");\r\n        }\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const linkCompanionReference = async (companion) => {\r\n    await firebase.db\r\n      .collection(\"users\")\r\n      .doc(data.patientId)\r\n      .update({\r\n        companionRef: companion,\r\n      })\r\n      .then((e) => console.log(\"se actualizo\"))\r\n      .catch((e) => console.log(\"Error actualizar \", e));\r\n  };\r\n\r\n  const validateEmailExistence = async () => {\r\n    let aux = false;\r\n    let patientId2 = \"\";\r\n\r\n    await firebase.db\r\n      .collection(\"users\")\r\n      .where(\"companionEmail\", \"==\", data.email)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          patientId2 = doc.id;\r\n          aux = true;\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting documents: \", error);\r\n      });\r\n    if (aux) {\r\n      setdata({\r\n        ...data,\r\n        validatedEmail: true,\r\n        patientId: patientId2,\r\n      });\r\n    } else {\r\n      Alert.alert(\r\n        \"Error\",\r\n        \"No hay paciente vinculado a ese correo.\",\r\n        [\r\n          {\r\n            text: \"OK\",\r\n            onPress: () => {\r\n              props.navigation.navigate(\"Login\");\r\n            },\r\n            style: \"cancel\",\r\n          },\r\n        ],\r\n        { cancelable: false }\r\n      );\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View\r\n        style={{\r\n          backgroundColor: \"#ffffff\",\r\n          justifyContent: \"center\",\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          marginTop: \"5%\",\r\n        }}\r\n      >\r\n        <ChargeScreen />\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.textHeader}>\r\n            Por favor ingrese todos los datos para el registro.\r\n          </Text>\r\n        </View>\r\n        <ScrollView style={styles.scroll}>\r\n          <View style={styles.containerInput}>\r\n            <Text style={styles.headerInput}>Correo Electrónico</Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              onChangeText={(value) => {\r\n                setdata({ ...data, email: value });\r\n              }}\r\n              value={data.email}\r\n              keyboardType={\"email-address\"}\r\n              placeholder={\"Dirección de correo electrónico\"}\r\n            />\r\n          </View>\r\n\r\n          {data.validatedEmail ? (\r\n            <View>\r\n              <View style={styles.containerInput}>\r\n                <Text style={styles.headerInput}>Nombre Completo</Text>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  onChangeText={(value) => {\r\n                    setdata({ ...data, name: value });\r\n                  }}\r\n                  value={data.name}\r\n                  placeholder={\"Ingrese Nombres y Apellidos\"}\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.containerInput}>\r\n                <Text style={styles.headerInput}>Documento de Identidad</Text>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  onChangeText={(value) => {\r\n                    setdata({ ...data, id: value.toString() });\r\n                  }}\r\n                  value={data.id}\r\n                  keyboardType={\"number-pad\"}\r\n                  placeholder={\"Tarjeta de Identidad o Cédula\"}\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.containerInput}>\r\n                <Text style={styles.headerInput}>Teléfono</Text>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  onChangeText={(value) => {\r\n                    setdata({ ...data, phone: value.toString() });\r\n                  }}\r\n                  value={data.phone}\r\n                  keyboardType={\"phone-pad\"}\r\n                  placeholder={\"Número telefónico celular\"}\r\n                />\r\n              </View>\r\n              \r\n        <View style={styles.containerInput}>\r\n          <Text style={styles.headerInput}>Sexo</Text>\r\n\r\n          <View style={[styles.repetitionInputContainer, {borderWidth:0}]}>\r\n          <Picker\r\n                width={\"100%\"}\r\n                height={40}\r\n                placeholder={\"Seleccionar\"}\r\n                setData={(itemValue, itemIndex) =>{\r\n                setdata({ ...data, genero: itemValue.toString() })}\r\n                }\r\n                initialValue={\"Seleccionar\"}\r\n                list={[\"Seleccionar\", \"Femenino\", \"Masculino\"]}\r\n              />\r\n          </View>\r\n        </View>\r\n\r\n              <View style={styles.containerInput}>\r\n                <Text style={styles.headerInput}>Contraseña</Text>\r\n                <Password\r\n                  label={\"Mínimo 8 caracteres\"}\r\n                  onChange={(value) => {\r\n                    setdata({ ...data, password: value });\r\n                    setPasswords({ ...passwords, password1: value });\r\n                  }}\r\n                  width={\"100%\"}\r\n                  height={40}\r\n                  value={data.password}\r\n                />\r\n              </View>\r\n              <View style={styles.containerInput}>\r\n                <Text style={styles.headerInput}>Confirmar Contraseña</Text>\r\n                <Password\r\n                  label={\"Mínimo 8 caracteres\"}\r\n                  onChange={(value) => {\r\n                    setPasswords({ ...passwords, password2: value });\r\n                  }}\r\n                  height={40}\r\n                  width={\"100%\"}\r\n                  value={passwords.password2}\r\n                />\r\n              </View>\r\n\r\n              {/* <View style={styles.containerInput}>\r\n              <Text style={styles.headerInput}>Contraseña</Text>\r\n              <TextInput\r\n                style={styles.input}\r\n                onChangeText={(value) => {\r\n                  setdata({ ...data, password: value });\r\n                  setPasswords({ ...passwords, password1: value });\r\n                }}\r\n                value={data.password}\r\n                placeholder={\"Mínimo 8 caracteres\"}\r\n                secureTextEntry\r\n              />\r\n            </View>\r\n            <View style={styles.containerInput}>\r\n              <Text style={styles.headerInput}>Confirmar Contraseña</Text>\r\n              <TextInput\r\n                style={styles.input}\r\n                onChangeText={(value) => {\r\n                  setPasswords({ ...passwords, password2: value });\r\n                }}\r\n                value={passwords.password2}\r\n                placeholder={\"Mínimo 8 caracteres\"}\r\n                secureTextEntry\r\n              />\r\n            </View> */}\r\n\r\n              <TouchableOpacity\r\n                style={styles.button}\r\n                onPress={() => {\r\n                  if (passwords.password1 == passwords.password2) {\r\n                    schema\r\n                      .validate(data)\r\n                      .then(() => {\r\n                        signIn();\r\n                      })\r\n                      .catch(function (err) {\r\n                        Alert.alert(err);\r\n                        console.log(err);\r\n                      });\r\n                  } else {\r\n                    Alert.alert(\"Las contraseñas no coinciden.\");\r\n                  }\r\n                }}\r\n              >\r\n                <Text style={{ color: \"white\" }}>Registrar y Acceder</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          ) : (\r\n            <View>\r\n              <Text style={{ margin: \"5%\" }}>\r\n                ⚠️ Es necesario confirmar que un paciente haya seleccionado este\r\n                correo electrónico como su acompañante\r\n              </Text>\r\n              <TouchableOpacity\r\n                style={styles.button}\r\n                onPress={() => validateEmailExistence()}\r\n              >\r\n                <Text style={{ color: \"white\" }}>Validar correo</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    height: \"10%\",\r\n    width: \"90%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n  },\r\n  textHeader: {\r\n    fontSize: vmin(5),\r\n  },\r\n\r\n  container: { backgroundColor: \"white\", width: \"100%\", height: \"100%\" },\r\n\r\n  containerInput: {\r\n    height: vmin(25),\r\n    width: \"90%\",\r\n    // backgroundColor: \"tomato\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginBottom: \"2%\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n\r\n  headerInput: {\r\n    width: \"100%\",\r\n    textAlign: \"left\",\r\n    fontSize: vmin(4),\r\n    fontWeight: \"bold\",\r\n    left: vmin(1.5),\r\n  },\r\n\r\n  input: {\r\n    height: \"60%\",\r\n    width: \"100%\",\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n  },\r\n\r\n  button: {\r\n    backgroundColor: \"#6979F8\",\r\n    width: \"90%\",\r\n    height: vmin(12),\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 5,\r\n    margin: \"5%\",\r\n    marginTop: vmin(10),\r\n    marginBottom: vmin(10),\r\n  },\r\n\r\n  scroll: {\r\n    height: \"90%\",\r\n    width: \"100%\",\r\n  },\r\n  repetitionInputContainer: {\r\n    height: \"50%\",\r\n    width: \"100%\",\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}