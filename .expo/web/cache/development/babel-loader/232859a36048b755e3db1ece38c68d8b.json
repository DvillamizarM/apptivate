{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\App.js\";\n\nimport React, { useEffect } from \"react\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { createAppContainer } from \"react-navigation\";\nimport SwitchNavigator from \"./src/navigation/CustomNavigation\";\nimport reducer from \"./src/redux/reducers/reducer\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\nimport { TourGuideProvider } from \"rn-tourguide\";\nimport { LogBox } from \"react-native-web/dist/index\";\nLogBox.ignoreLogs([\"Setting a timer\"]);\nvar persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage,\n  stateReconciler: autoMergeLevel2\n};\nvar persistedReducer = persistReducer(persistConfig, reducer);\nvar store = createStore(persistedReducer, applyMiddleware(thunk));\nvar persistor = persistStore(store);\nvar Navegador = createAppContainer(SwitchNavigator);\n\nvar checkAsync = function checkAsync() {\n  AsyncStorage.getAllKeys(function (err, keys) {\n    AsyncStorage.multiGet(keys, function (error, stores) {\n      stores == null ? void 0 : stores.map(function (result, i, store) {\n        console.log(\"checkAsync------\", [store[i][0]], store[i][1]);\n        return true;\n      });\n    });\n  });\n};\n\nvar App = function App() {\n  var style = {\n    borderRadius: 10\n  };\n  return React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, React.createElement(PersistGate, {\n    loading: null,\n    persistor: persistor,\n    onBeforeLift: checkAsync,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(SafeAreaProvider, {\n    style: {\n      flex: 1,\n      backgroundColor: \"white\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(TourGuideProvider, {\n    androidStatusBarVisible: true,\n    tooltipStyle: style,\n    labels: {\n      previous: \"Anterior\",\n      next: \"Siguiente\",\n      skip: \"Omitir GuÃ­a\",\n      finish: \"Terminar\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, React.createElement(Navegador, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/App.js"],"names":["React","useEffect","thunk","Provider","createStore","applyMiddleware","createAppContainer","SwitchNavigator","reducer","AsyncStorage","SafeAreaProvider","persistStore","persistReducer","PersistGate","autoMergeLevel2","TourGuideProvider","LogBox","ignoreLogs","persistConfig","key","storage","stateReconciler","persistedReducer","store","persistor","Navegador","checkAsync","getAllKeys","err","keys","multiGet","error","stores","map","result","i","console","log","App","style","borderRadius","flex","backgroundColor","width","height","tooltipStyle","labels","previous","next","skip","finish"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,OAAOC,eAAP;AACA,OAAOC,OAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,SACEC,iBADF,QAEO,cAFP;SAGSC,M;AAETA,MAAM,CAACC,UAAP,CAAkB,CAAC,iBAAD,CAAlB;AASA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAEX,YAFW;AAGpBY,EAAAA,eAAe,EAAEP;AAHG,CAAtB;AAMA,IAAMQ,gBAAgB,GAAGV,cAAc,CAACM,aAAD,EAAgBV,OAAhB,CAAvC;AACA,IAAMe,KAAK,GAAGnB,WAAW,CAACkB,gBAAD,EAAmBjB,eAAe,CAACH,KAAD,CAAlC,CAAzB;AACA,IAAMsB,SAAS,GAAGb,YAAY,CAACY,KAAD,CAA9B;AACA,IAAME,SAAS,GAAGnB,kBAAkB,CAACC,eAAD,CAApC;;AAEA,IAAMmB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBjB,EAAAA,YAAY,CAACkB,UAAb,CAAwB,UAACC,GAAD,EAAMC,IAAN,EAAe;AACrCpB,IAAAA,YAAY,CAACqB,QAAb,CAAsBD,IAAtB,EAA4B,UAACE,KAAD,EAAQC,MAAR,EAAmB;AAC7CA,MAAAA,MAAM,QAAN,YAAAA,MAAM,CAAEC,GAAR,CAAY,UAACC,MAAD,EAASC,CAAT,EAAYZ,KAAZ,EAAsB;AAChCa,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,CAACd,KAAK,CAACY,CAAD,CAAL,CAAS,CAAT,CAAD,CAAhC,EAA+CZ,KAAK,CAACY,CAAD,CAAL,CAAS,CAAT,CAA/C;AACA,eAAO,IAAP;AACD,OAHD;AAID,KALD;AAMD,GAPD;AAQD,CATD;;AAWA,IAAMG,GAAG,GAAG,SAANA,GAAM,GAAM;AAUhB,MAAMC,KAAK,GAAG;AACZC,IAAAA,YAAY,EAAE;AADF,GAAd;AAoCA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEjB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,IAAA,YAAY,EAAEE,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AACLe,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,eAAe,EAAE,OAFZ;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILC,MAAAA,MAAM,EAAE;AAJH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,iBAAD;AACE,IAAA,uBAAuB,EAAE,IAD3B;AAEQC,IAAAA,YAAY,EAAEN,KAFtB;AAIIO,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE,UADJ;AAENC,MAAAA,IAAI,EAAE,WAFA;AAGNC,MAAAA,IAAI,EAAE,aAHA;AAINC,MAAAA,MAAM,EAAE;AAJF,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CARF,CALF,CADF,CADF;AAsCD,CApFD;;AAsFA,eAAeZ,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { createAppContainer } from \"react-navigation\";\r\nimport SwitchNavigator from \"./src/navigation/CustomNavigation\";\r\nimport reducer from \"./src/redux/reducers/reducer\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n//import { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\r\n//import * as FileSystem from 'expo-file-system';\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\nimport {\r\n  TourGuideProvider, // Main provider\r\n} from \"rn-tourguide\";\r\nimport { LogBox } from \"react-native\";\r\n\r\nLogBox.ignoreLogs([\"Setting a timer\"]); // ignore specific logs\r\n// import NavigatorService from \"./services/navigator.js\";\r\n// import tour from \"./services/tour.js\";\r\n// import {\r\n//   useTourGuideController, // hook to start, etc.\r\n// } from \"rn-tourguide\";\r\n\r\n//LogBox.ignoreLogs([\"Setting a timer\"]); // ignore specific logs\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: AsyncStorage,\r\n  stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\nconst store = createStore(persistedReducer, applyMiddleware(thunk));\r\nconst persistor = persistStore(store);\r\nconst Navegador = createAppContainer(SwitchNavigator);\r\n\r\nconst checkAsync = () => {\r\n  AsyncStorage.getAllKeys((err, keys) => {\r\n    AsyncStorage.multiGet(keys, (error, stores) => {\r\n      stores?.map((result, i, store) => {\r\n        console.log(\"checkAsync------\", [store[i][0]], store[i][1]);\r\n        return true;\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nconst App = () => {\r\n//   const { canStart, start, eventEmitter } = useTourGuideController();\r\n//   const [step, setStep] = useState(0);\r\n//  const handleOnStart = () => console.log(\"start\");\r\n//   const handleOnStepChange = (step) => {\r\n//     // if (step.order === 6) {\r\n//     //   setIndex(1)\r\n//     // }\r\n//     console.log(`stepChange`);\r\n//   };\r\n  const style = {\r\n    borderRadius: 10,\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.warn(\"use effect app 1\")\r\n  //   if (canStart && NavigatorService.getCurrentRoute() !== null) {\r\n  //     console.warn(\"passed both state and navigator\")\r\n  //     start();\r\n  //   }\r\n  // }, [canStart, NavigatorService.getCurrentRoute()]); // we change this\r\n\r\n  // useEffect(() => {\r\n  //   console.warn(\"use effect app 2\")\r\n  //   // we add this hook\r\n  //  // eventEmitter.on(\"stepChange\", () => {});\r\n\r\n  //  if(eventEmitter!== undefined){   \r\n  //   eventEmitter.on(\"start\", handleOnStart);\r\n  //   eventEmitter.on('stepChange', step => {\r\n  //     const s = step?step.order:0\r\n  //        console.log(`tutorial step ${s}`);\r\n  //        setStep(s)\r\n  //   })\r\n  //    eventEmitter.on(\"stop\", () => {\r\n  //     // // When the tour for that screen ends, navigate to the next screen if it exists.\r\n  //     // const nextScreen = tour[NavigatorService.getCurrentRoute()];\r\n  //     // if (nextScreen) {\r\n  //     //   NavigatorService.navigate(nextScreen);\r\n  //     // }\r\n  //   });\r\n  //   return () => eventEmitter.off(\"*\", null);\r\n  //  }\r\n    \r\n  // }, [eventEmitter]);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate\r\n        loading={null}\r\n        persistor={persistor}\r\n        onBeforeLift={checkAsync}\r\n      >\r\n        <SafeAreaProvider\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: \"white\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <TourGuideProvider\r\n            androidStatusBarVisible={true}\r\n            {...{ tooltipStyle: style }}\r\n            {...{\r\n              labels: {\r\n                previous: \"Anterior\",\r\n                next: \"Siguiente\",\r\n                skip: \"Omitir GuÃ­a\",\r\n                finish: \"Terminar\",\r\n              },\r\n            }}\r\n          >\r\n            <Navegador\r\n              // ref={(navigatorRef) => {\r\n              //   console.warn(\"ref---\",navigatorRef)\r\n              //   NavigatorService.setContainer(navigatorRef);\r\n              // }}\r\n            />\r\n          </TourGuideProvider>\r\n        </SafeAreaProvider>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}