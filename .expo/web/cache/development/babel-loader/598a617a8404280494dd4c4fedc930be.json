{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\screens\\\\SatisfactionSurvey.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nimport firebase from \"../../../database/firebase\";\nimport { connect } from \"react-redux\";\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\nimport { Slider } from \"react-native-range-slider-expo\";\n\nvar SatisfactionSurvey = function SatisfactionSurvey(props) {\n  var _useState = useState({\n    understandingExercises: 0,\n    sentimentPercentage: 0,\n    appUX: 0,\n    openContent: \"\",\n    openApp: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var saveFormReportEvent = function saveFormReportEvent() {\n    var idRecord, res;\n    return _regeneratorRuntime.async(function saveFormReportEvent$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            idRecord = \"\";\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"satisfactionSurvey\").add(_objectSpread(_objectSpread({}, values), {}, {\n              userId: props.user.uid,\n              userName: props.user.information.personal.name,\n              userPhone: props.user.information.personal.phone\n            })));\n\n          case 3:\n            res = _context.sent;\n            idRecord = res.id;\n            props.navigation.navigate(\"Home\");\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    console.warn(\"survey effect\");\n  }, []);\n  return React.createElement(View, {\n    style: styles.Contenedor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      minHeight: \"100%\"\n    },\n    contentContainerStyle: {\n      marginTop: \"5%\",\n      paddingBottom: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"90%\",\n      marginLeft: \"5%\",\n      padding: 5,\n      borderRadius: 10,\n      backgroundColor: \"rgba(225, 126, 62, 0.4)\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: vmin(4.5),\n      textAlign: \"justify\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Gracias por tomarte el tiempo de dejar tu retroalimetaci\\xF3n. Tus comentarios son muy valiosos para la mejora constante de la app.\")), React.createElement(View, {\n    style: styles.containerInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.sliderTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: vmin(4.5)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"\\xBFC\\xF3mo califica la facilidad de comprensi\\xF3n de los ejercicios y animaciones?\")), React.createElement(View, {\n    style: styles.sliderContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, React.createElement(Slider, {\n    min: 1,\n    max: 5,\n    step: 1,\n    valueOnChange: function valueOnChange(value) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        understandingExercises: value\n      }));\n    },\n    initialValue: values.understandingExercises,\n    knobColor: \"#6979F8\",\n    valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n    inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n    outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.resultSlider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Valor: \", values.understandingExercises))), React.createElement(View, {\n    style: styles.containerInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.sliderTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: vmin(4.5)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"\\xBFC\\xF3mo califica su experiencia usando la aplicaci\\xF3n?\")), React.createElement(View, {\n    style: styles.sliderContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, React.createElement(Slider, {\n    min: 1,\n    max: 5,\n    step: 1,\n    valueOnChange: function valueOnChange(value) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        appUX: value\n      }));\n    },\n    initialValue: values.appUX,\n    knobColor: \"#6979F8\",\n    valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n    inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n    outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.resultSlider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Valor: \", values.appUX))), React.createElement(View, {\n    style: styles.containerInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.sliderTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: vmin(4.5)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"\\xBFC\\xF3mo se siente despu\\xE9s de completar el plan de rehabilitaci\\xF3n?\")), React.createElement(View, {\n    style: styles.sliderContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, React.createElement(Slider, {\n    min: 1,\n    max: 5,\n    step: 1,\n    valueOnChange: function valueOnChange(value) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        sentimentPercentage: value\n      }));\n    },\n    initialValue: values.sentimentPercentage,\n    knobColor: \"#6979F8\",\n    valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n    inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n    outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.resultSlider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Valor: \", values.sentimentPercentage))), React.createElement(View, {\n    style: [styles.containerInput, {\n      height: \"15%\",\n      marginTop: \"5%\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: vmin(4.5)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Sugerencias sobre la informaci\\xF3n y contenido de la aplicaci\\xF3n\"), React.createElement(TextInput, {\n    style: [styles.repetitionInputContainer, {\n      height: \"70%\"\n    }],\n    multiline: true,\n    placeholder: \"Por favor ingresa tu opini\\xF3n y sugerencias sobre la informaci\\xF3n que encontraste dentro de la aplicaci\\xF3n.\",\n    onChangeText: function onChangeText(value) {\n      return setValues(_objectSpread(_objectSpread({}, values), {}, {\n        openContent: value\n      }));\n    },\n    value: values.openContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: [styles.containerInput, {\n      height: \"15%\",\n      marginTop: \"5%\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: vmin(4.5)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"Sugerencias sobre el dise\\xF1o, estructura y funciones de la aplicaci\\xF3n\"), React.createElement(TextInput, {\n    style: [styles.repetitionInputContainer, {\n      height: \"70%\"\n    }],\n    multiline: true,\n    placeholder: \"Por favor ingresa tu opini\\xF3n y sugerencias con respecto a tu experiencia usando la aplicaci\\xF3n.\",\n    onChangeText: function onChangeText(value) {\n      return setValues(_objectSpread(_objectSpread({}, values), {}, {\n        openApp: value\n      }));\n    },\n    value: values.openApp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.containerButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      saveFormReportEvent();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \"Registrar Respuestas\"))), React.createElement(View, {\n    style: {\n      height: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar MapStateToProps = function MapStateToProps(store) {\n  return {\n    user: store.User.user\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {\n    setUser: function setUser(val) {\n      return dispatch(actionsUser.SET_USER(val));\n    }\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(SatisfactionSurvey);\nvar styles = StyleSheet.create({\n  Contenedor: {\n    backgroundColor: \"white\",\n    height: \"100%\"\n  },\n  textHeader: {\n    fontSize: vmin(6),\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    width: \"100%\",\n    marginBottom: vmin(5)\n  },\n  ContainerQuestions: {\n    width: \"90%\",\n    margin: \"auto\",\n    height: \"25%\"\n  },\n  containerInput: {\n    height: \"20%\",\n    width: \"90%\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    marginTop: vmin(1),\n    marginBottom: \"3%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  ContainerQuestion: {\n    width: \"100%\",\n    height: \"auto\",\n    marginTop: vmin(3)\n  },\n  Question: {\n    fontSize: vmin(5),\n    textAlign: \"left\"\n  },\n  repetitionInputContainer: {\n    height: \"30%\",\n    width: \"100%\",\n    borderColor: \"rgba(25, 25, 25, 0.56)\",\n    borderBottomWidth: 1,\n    borderRadius: 5,\n    fontSize: vmin(4.5)\n  },\n  ContainerAnswer: {\n    width: \"100%\",\n    height: vmin(15),\n    borderColor: \"#e4e4e4\",\n    borderWidth: vmin(0.5),\n    marginTop: vmin(2),\n    borderRadius: vmin(4)\n  },\n  sliderContainer: {\n    height: vmin(16),\n    width: \"100%\",\n    marginLeft: \"2%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  resultSlider: {\n    width: \"32%\",\n    height: \"25%\",\n    backgroundColor: \"rgba(105, 121, 248, 0.5)\",\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: \"-8%\"\n  },\n  sliderTitle: {\n    height: \"55%\",\n    width: \"90%\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  containerButton: {\n    height: \"8%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button: {\n    backgroundColor: \"#6979F8\",\n    margin: vmin(2),\n    width: \"90%\",\n    borderRadius: 10,\n    height: \"80%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/screens/SatisfactionSurvey.tsx"],"names":["React","useState","useEffect","require","vmin","firebase","connect","actionsUser","Slider","SatisfactionSurvey","props","understandingExercises","sentimentPercentage","appUX","openContent","openApp","values","setValues","saveFormReportEvent","idRecord","db","collection","add","userId","user","uid","userName","information","personal","name","userPhone","phone","res","id","navigation","navigate","console","warn","styles","Contenedor","minHeight","marginTop","paddingBottom","width","marginLeft","padding","borderRadius","backgroundColor","fontSize","textAlign","containerInput","sliderTitle","sliderContainer","value","resultSlider","height","repetitionInputContainer","containerButton","button","color","MapStateToProps","store","User","MapDispatchToProps","dispatch","setUser","val","SET_USER","StyleSheet","create","textHeader","fontWeight","marginBottom","ContainerQuestions","margin","marginRight","justifyContent","alignItems","ContainerQuestion","Question","borderColor","borderBottomWidth","ContainerAnswer","borderWidth","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Picker,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  ScrollView,\r\n  ViewBase,\r\n} from \"react-native\";\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\nimport firebase from \"../../../database/firebase\";\r\n// redux\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\r\nimport { Slider } from \"react-native-range-slider-expo\";\r\n\r\nconst SatisfactionSurvey = (props) => {\r\n  const [values, setValues] = useState({\r\n    understandingExercises: 0,\r\n    sentimentPercentage: 0,\r\n    appUX: 0,\r\n    openContent: \"\",\r\n    openApp: \"\",\r\n  });\r\n\r\n  const saveFormReportEvent = async () => {\r\n    let idRecord = \"\";\r\n\r\n    let res = await firebase.db.collection(\"satisfactionSurvey\").add({\r\n      ...values,\r\n      userId: props.user.uid,\r\n      userName: props.user.information.personal.name,\r\n      userPhone: props.user.information.personal.phone,\r\n    });\r\n    idRecord = res.id;\r\n    props.navigation.navigate(\"Home\");\r\n  };\r\n  useEffect(() => {\r\n    console.warn(\"survey effect\");\r\n  }, []);\r\n  return (\r\n    <View style={styles.Contenedor}>\r\n      <ScrollView\r\n        style={{ minHeight: \"100%\" }}\r\n        contentContainerStyle={{ marginTop: \"5%\", paddingBottom: 200, }}\r\n      >\r\n        <View style={{width:\"90%\", marginLeft:\"5%\", padding: 5, borderRadius:10, backgroundColor: \"rgba(225, 126, 62, 0.4)\"}}>\r\n        <Text style={{fontSize:vmin(4.5), textAlign:\"justify\"}}>\r\n              Gracias por tomarte el tiempo de dejar tu retroalimetación. Tus\r\n              comentarios son muy valiosos para la mejora constante de la app.\r\n            </Text>\r\n        </View>\r\n        {/* <View style={{marginTop:\"5%\",height:\"100%\", backgroundColor:\"yellow\"}}> */}\r\n        <View style={styles.containerInput}>\r\n          \r\n          <View style={styles.sliderTitle}>\r\n            <Text style={{ fontSize: vmin(4.5) }}>\r\n              ¿Cómo califica la facilidad de comprensión de los ejercicios y\r\n              animaciones?\r\n            </Text>\r\n          </View>\r\n          <View style={styles.sliderContainer}>\r\n            <Slider\r\n              min={1}\r\n              max={5}\r\n              step={1}\r\n              valueOnChange={(value) => {\r\n                setValues({ ...values, understandingExercises: value });\r\n              }}\r\n              initialValue={values.understandingExercises}\r\n              knobColor=\"#6979F8\"\r\n              valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n              inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n              outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n            />\r\n          </View>\r\n          <View style={styles.resultSlider}>\r\n            <Text style={{}}>Valor: {values.understandingExercises}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.containerInput}>\r\n          <View style={styles.sliderTitle}>\r\n            <Text style={{ fontSize: vmin(4.5) }}>\r\n              ¿Cómo califica su experiencia usando la aplicación?\r\n            </Text>\r\n          </View>\r\n          <View style={styles.sliderContainer}>\r\n            <Slider\r\n              min={1}\r\n              max={5}\r\n              step={1}\r\n              valueOnChange={(value) => {\r\n                setValues({ ...values, appUX: value });\r\n              }}\r\n              initialValue={values.appUX}\r\n              knobColor=\"#6979F8\"\r\n              valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n              inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n              outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n            />\r\n          </View>\r\n          <View style={styles.resultSlider}>\r\n            <Text style={{}}>Valor: {values.appUX}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.containerInput}>\r\n          <View style={styles.sliderTitle}>\r\n            <Text style={{ fontSize: vmin(4.5) }}>\r\n              ¿Cómo se siente después de completar el plan de rehabilitación?\r\n            </Text>\r\n          </View>\r\n          <View style={styles.sliderContainer}>\r\n            <Slider\r\n              min={1}\r\n              max={5}\r\n              step={1}\r\n              valueOnChange={(value) => {\r\n                setValues({ ...values, sentimentPercentage: value });\r\n              }}\r\n              initialValue={values.sentimentPercentage}\r\n              knobColor=\"#6979F8\"\r\n              valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n              inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n              outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n            />\r\n          </View>\r\n          <View style={styles.resultSlider}>\r\n            <Text style={{}}>Valor: {values.sentimentPercentage}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        <View\r\n          style={[styles.containerInput, { height: \"15%\", marginTop: \"5%\" }]}\r\n        >\r\n          <Text style={{ fontSize: vmin(4.5) }}>\r\n            Sugerencias sobre la información y contenido de la aplicación\r\n          </Text>\r\n          <TextInput\r\n            style={[styles.repetitionInputContainer, { height: \"70%\" }]}\r\n            multiline={true}\r\n            placeholder=\"Por favor ingresa tu opinión y sugerencias sobre la información que encontraste dentro de la aplicación.\"\r\n            onChangeText={(value) =>\r\n              setValues({ ...values, openContent: value })\r\n            }\r\n            value={values.openContent}\r\n          />\r\n        </View>\r\n\r\n        <View\r\n          style={[styles.containerInput, { height: \"15%\", marginTop: \"5%\" }]}\r\n        >\r\n          <Text style={{ fontSize: vmin(4.5) }}>\r\n            Sugerencias sobre el diseño, estructura y funciones de la aplicación\r\n          </Text>\r\n          <TextInput\r\n            style={[styles.repetitionInputContainer, { height: \"70%\" }]}\r\n            multiline={true}\r\n            placeholder=\"Por favor ingresa tu opinión y sugerencias con respecto a tu experiencia usando la aplicación.\"\r\n            onChangeText={(value) =>\r\n              setValues({ ...values, openApp: value })\r\n            }\r\n            value={values.openApp}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.containerButton}>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {\r\n              saveFormReportEvent();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"white\" }}>Registrar Respuestas</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={{ height: 100 }} />\r\n        {/* </View> */}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  return {\r\n    user: store.User.user,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({\r\n  setUser: (val) => dispatch(actionsUser.SET_USER(val)),\r\n});\r\n\r\nexport default connect(MapStateToProps, MapDispatchToProps)(SatisfactionSurvey);\r\n\r\nconst styles = StyleSheet.create({\r\n  Contenedor: {\r\n    backgroundColor: \"white\",\r\n    // justifyContent: \"space-around\",\r\n    height: \"100%\",\r\n    // flexGrow:1,\r\n  },\r\n  textHeader: {\r\n    fontSize: vmin(6),\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n    marginBottom: vmin(5),\r\n  },\r\n  ContainerQuestions: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    height: \"25%\",\r\n  },\r\n  containerInput: {\r\n    height: \"20%\",\r\n    width: \"90%\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginTop: vmin(1),\r\n    marginBottom: \"3%\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    // backgroundColor: \"green\",\r\n  },\r\n  ContainerQuestion: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    marginTop: vmin(3),\r\n  },\r\n  Question: {\r\n    fontSize: vmin(5),\r\n    textAlign: \"left\",\r\n  },\r\n\r\n  repetitionInputContainer: {\r\n    height: \"30%\",\r\n    width: \"100%\",\r\n    borderColor: \"rgba(25, 25, 25, 0.56)\",\r\n    borderBottomWidth: 1,\r\n    borderRadius: 5,\r\n    fontSize: vmin(4.5),\r\n  },\r\n  ContainerAnswer: {\r\n    width: \"100%\",\r\n    height: vmin(15),\r\n    borderColor: \"#e4e4e4\",\r\n    borderWidth: vmin(0.5),\r\n    marginTop: vmin(2),\r\n    borderRadius: vmin(4),\r\n  },\r\n  sliderContainer: {\r\n    height: vmin(16),\r\n    width: \"100%\",\r\n    marginLeft: \"2%\",\r\n    //paddingTop: 4,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    //backgroundColor: \"salmon\",\r\n  },\r\n  resultSlider: {\r\n    width: \"32%\",\r\n    height: \"25%\",\r\n    backgroundColor: \"rgba(105, 121, 248, 0.5)\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: \"-8%\",\r\n  },\r\n  sliderTitle: {\r\n    height: \"55%\",\r\n    width: \"90%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  containerButton: {\r\n    height: \"8%\",\r\n    width: \"100%\",\r\n    // backgroundColor: \"red\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    //padding: vmin(2),\r\n  },\r\n  button: {\r\n    backgroundColor: \"#6979F8\",\r\n    margin: vmin(2),\r\n    width: \"90%\",\r\n    borderRadius: 10,\r\n    height: \"80%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}