{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\PublicUser\\\\UpdateInfo.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nimport firebase from \"../../../database/firebase\";\nimport UpdateMedicalData from \"../Functional/UpdateMedicalData\";\nimport UpdatePersonalData from \"../Functional/UpdatePersonalData\";\nexport default function UpdateInfo(props) {\n  var _this = this;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      navigationPosition = _useState2[0],\n      setnavigationPosition = _useState2[1];\n\n  var navigationTitles = [\"Datos Personales\", \"Datos Médicos\"];\n  console.log(\"props in update---\", props);\n\n  var NavigationButton = function NavigationButton() {\n    return React.createElement(View, {\n      style: navigationButtonStyles.containerNavigationButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        if (navigationPosition - 1 >= 0) {\n          setnavigationPosition(navigationPosition - 1);\n        } else {\n          setnavigationPosition(navigationTitles.length - 1);\n        }\n      },\n      style: navigationButtonStyles.sideButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: [navigationButtonStyles.whiteText, {\n        fontSize: vmin(5)\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"<\")), React.createElement(View, {\n      style: navigationButtonStyles.navigationButtonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: navigationButtonStyles.whiteText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, navigationTitles[navigationPosition])), React.createElement(TouchableOpacity, {\n      style: navigationButtonStyles.sideButton,\n      onPress: function onPress() {\n        if (navigationPosition + 1 < navigationTitles.length) {\n          setnavigationPosition(navigationPosition + 1);\n        } else {\n          setnavigationPosition(0);\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: [navigationButtonStyles.whiteText, {\n        fontSize: vmin(5)\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \">\")));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"100%\",\n      height: \"8%\",\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      alignItems: \"center\",\n      borderBottomColor: \"rgba(214, 212, 210,1)\",\n      marginTop: \"10%\",\n      borderBottomWidth: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"14%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      props.navigation.navigate(\"Home\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: vmin(7),\n      fontWeight: \"bold\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"<\"))), React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\",\n      width: \"50%\",\n      alignItems: \"center\",\n      fontSize: vmin(5)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Editar Perfil\"), React.createElement(TouchableOpacity, {\n    style: styles.button2,\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              Alert.alert(\"Cerrar Sesión\", \"¿Está seguro que quiere cerrar sesión? \", [{\n                text: \"Cancelar\",\n                onPress: function onPress() {},\n                style: \"cancel\"\n              }, {\n                text: \"Cerrar Sesión\",\n                onPress: function onPress() {\n                  return _regeneratorRuntime.async(function onPress$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _regeneratorRuntime.awrap(firebase.auth.signOut().then(function () {\n                            AsyncStorage.getAllKeys().then(function (keys) {\n                              return AsyncStorage.multiRemove(keys);\n                            }).then(function () {\n                              return props.navigation.navigate(\"Login\");\n                            });\n                          }));\n\n                        case 2:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                }\n              }], {\n                cancelable: false\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Cerrar Sesi\\xF3n\"))), props.navigation.state.params.check.check ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }) : React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, NavigationButton()), React.createElement(ScrollView, {\n    style: styles.scroll,\n    contentContainerStyle: styles.scrollContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, navigationPosition == 0 ? React.createElement(UpdatePersonalData, {\n    props: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }) : React.createElement(UpdateMedicalData, {\n    props: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  header: {\n    height: \"10%\",\n    width: \"90%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  button2: {\n    backgroundColor: \"rgba(199, 0, 57,1)\",\n    width: \"30%\",\n    height: \"70%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.29,\n    shadowRadius: 4.65,\n    elevation: 7\n  },\n  scroll: {\n    height: \"100%\",\n    width: \"100%\"\n  },\n  scrollContent: {\n    paddingBottom: 0\n  }\n});\nvar navigationButtonStyles = StyleSheet.create({\n  containerNavigationButton: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    height: \"80%\",\n    borderRadius: 10,\n    backgroundColor: \"rgba(105, 121, 248, 1)\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  sideButton: {\n    height: \"100%\",\n    width: \"15%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 10\n  },\n  navigationButtonText: {\n    height: \"70%\",\n    width: \"70%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"rgba(255, 255, 255, 0.3)\",\n    borderLeftWidth: vmin(0.5),\n    borderRightWidth: vmin(0.5)\n  },\n  whiteText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/PublicUser/UpdateInfo.tsx"],"names":["AsyncStorage","React","useState","require","vmin","firebase","UpdateMedicalData","UpdatePersonalData","UpdateInfo","props","navigationPosition","setnavigationPosition","navigationTitles","console","log","NavigationButton","navigationButtonStyles","containerNavigationButton","length","sideButton","whiteText","fontSize","navigationButtonText","styles","container","width","height","flexDirection","justifyContent","alignItems","borderBottomColor","marginTop","borderBottomWidth","navigation","navigate","fontWeight","textAlign","button2","Alert","alert","text","onPress","style","auth","signOut","then","getAllKeys","keys","multiRemove","cancelable","color","state","params","check","header","scroll","scrollContent","StyleSheet","create","marginLeft","marginRight","flex","backgroundColor","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","paddingBottom","borderColor","borderLeftWidth","borderRightWidth"],"mappings":"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","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Alert,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\nimport firebase from \"../../../database/firebase\";\r\n\r\nimport UpdateMedicalData from \"../Functional/UpdateMedicalData\";\r\nimport UpdatePersonalData from \"../Functional/UpdatePersonalData\";\r\n\r\nexport default function UpdateInfo(props) {\r\n  const [navigationPosition, setnavigationPosition] = useState(0);\r\n  const navigationTitles = [\"Datos Personales\", \"Datos Médicos\"];\r\n  console.log(\"props in update---\", props);\r\n  const NavigationButton = () => {\r\n    return (\r\n      <View style={navigationButtonStyles.containerNavigationButton}>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            if (navigationPosition - 1 >= 0) {\r\n              setnavigationPosition(navigationPosition - 1);\r\n            } else {\r\n              setnavigationPosition(navigationTitles.length - 1);\r\n            }\r\n          }}\r\n          style={navigationButtonStyles.sideButton}\r\n        >\r\n          <Text\r\n            style={[navigationButtonStyles.whiteText, { fontSize: vmin(5) }]}\r\n          >\r\n            {\"<\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <View style={navigationButtonStyles.navigationButtonText}>\r\n          <Text style={navigationButtonStyles.whiteText}>\r\n            {navigationTitles[navigationPosition]}\r\n          </Text>\r\n        </View>\r\n        <TouchableOpacity\r\n          style={navigationButtonStyles.sideButton}\r\n          onPress={() => {\r\n            if (navigationPosition + 1 < navigationTitles.length) {\r\n              setnavigationPosition(navigationPosition + 1);\r\n            } else {\r\n              setnavigationPosition(0);\r\n            }\r\n          }}\r\n        >\r\n          <Text\r\n            style={[navigationButtonStyles.whiteText, { fontSize: vmin(5) }]}\r\n          >\r\n            {\">\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"8%\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-around\",\r\n          alignItems: \"center\",\r\n          borderBottomColor: \"rgba(214, 212, 210,1)\",\r\n          marginTop: \"10%\",\r\n          borderBottomWidth: 1,\r\n        }}\r\n      >\r\n        <View style={{ width: \"14%\" }}>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              props.navigation.navigate(\"Home\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vmin(7),\r\n                fontWeight: \"bold\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              {\"<\"}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <Text\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            width: \"50%\",\r\n            alignItems: \"center\",\r\n            fontSize: vmin(5),\r\n          }}\r\n        >\r\n          Editar Perfil\r\n        </Text>\r\n        <TouchableOpacity\r\n          style={styles.button2}\r\n          onPress={async () => {\r\n            //  props.navigation.navigate(\"Login\");\r\n            // await firebase.auth.signOut();\r\n            Alert.alert(\r\n              \"Cerrar Sesión\",\r\n              \"¿Está seguro que quiere cerrar sesión? \",\r\n              [\r\n                {\r\n                  text: \"Cancelar\",\r\n                  onPress: () => {},\r\n                  style: \"cancel\",\r\n                },\r\n                {\r\n                  text: \"Cerrar Sesión\",\r\n                  onPress: async () => {\r\n                    await firebase.auth.signOut().then(() => {\r\n                      AsyncStorage.getAllKeys()\r\n                        .then((keys) => AsyncStorage.multiRemove(keys))\r\n                        .then(() => props.navigation.navigate(\"Login\"));\r\n                    });\r\n                  },\r\n                },\r\n              ],\r\n              { cancelable: false }\r\n            );\r\n          }}\r\n        >\r\n          <Text style={{ color: \"white\" }}>Cerrar Sesión</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      {props.navigation.state.params.check.check ? (\r\n        <View></View>\r\n      ) : (\r\n        <View style={styles.header}>{NavigationButton()}</View>\r\n      )}\r\n\r\n      <ScrollView\r\n        style={styles.scroll}\r\n        contentContainerStyle={styles.scrollContent}\r\n      >\r\n        {navigationPosition == 0 ? (\r\n          <UpdatePersonalData props={props} />\r\n        ) : (\r\n          <UpdateMedicalData props={props} />\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    height: \"10%\",\r\n    width: \"90%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  button2: {\r\n    backgroundColor: \"rgba(199, 0, 57,1)\",\r\n    width: \"30%\",\r\n    height: \"70%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowOpacity: 0.29,\r\n    shadowRadius: 4.65,\r\n\r\n    elevation: 7,\r\n  },\r\n  scroll: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  scrollContent: {\r\n    paddingBottom: 0,\r\n  },\r\n});\r\n\r\nconst navigationButtonStyles = StyleSheet.create({\r\n  containerNavigationButton: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    height: \"80%\",\r\n    borderRadius: 10,\r\n    backgroundColor: \"rgba(105, 121, 248, 1)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  sideButton: {\r\n    height: \"100%\",\r\n    width: \"15%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n  },\r\n\r\n  navigationButtonText: {\r\n    height: \"70%\",\r\n    width: \"70%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderColor: \"rgba(255, 255, 255, 0.3)\",\r\n    borderLeftWidth: vmin(0.5),\r\n    borderRightWidth: vmin(0.5),\r\n  },\r\n\r\n  whiteText: {\r\n    color: \"white\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}