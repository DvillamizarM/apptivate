{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\screens\\\\Ejercicios.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { connect } from \"react-redux\";\nimport EjercicioInactivo from \"../cards/EjercicioInactivo\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nimport StepIndicator from \"react-native-step-indicator\";\nimport firebase from \"../../../database/firebase\";\nimport Logo from \"../Simple/Logo\";\nimport ChargeScreen from \"../Simple/ChargeScreen\";\n\nvar Ejercicios = function (_React$Component) {\n  _inherits(Ejercicios, _React$Component);\n\n  var _super = _createSuper(Ejercicios);\n\n  function Ejercicios(props) {\n    var _this;\n\n    _classCallCheck(this, Ejercicios);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      currentPosition: 0,\n      exercises: [],\n      setup: {},\n      currentExercise: 0,\n      loading: false\n    };\n\n    _this.getExercise = function _callee(phase) {\n      var exercises, setup, dbRef, doc, exerciseList, protocolType, exerciseVales, result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.warn(\"props-----\", _this.props);\n\n              _this.setState({\n                loading: true\n              });\n\n              exercises = [];\n              setup = {};\n              dbRef = \"\";\n              doc = \"\";\n              exerciseList = [];\n              protocolType = _this.props.user.information.medical.amputationLevel;\n              protocolType == \"PreprotÃ©sico\" ? protocolType = \"preprotesico\" : protocolType = \"protesico\";\n              _context.t0 = phase;\n              _context.next = _context.t0 === 0 ? 12 : _context.t0 === 1 ? 18 : _context.t0 === 2 ? 24 : _context.t0 === 3 ? 35 : _context.t0 === 4 ? 41 : 47;\n              break;\n\n            case 12:\n              dbRef = firebase.db.collection(\"protocol\").doc(protocolType).collection(\"basic\").doc(\"warmup\");\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(dbRef.get());\n\n            case 15:\n              doc = _context.sent;\n              exerciseList = doc.data();\n              return _context.abrupt(\"break\", 47);\n\n            case 18:\n              dbRef = firebase.db.collection(\"protocol\").doc(protocolType).collection(\"basic\").doc(\"stretch\");\n              _context.next = 21;\n              return _regeneratorRuntime.awrap(dbRef.get());\n\n            case 21:\n              doc = _context.sent;\n              exerciseList = doc.data();\n              return _context.abrupt(\"break\", 47);\n\n            case 24:\n              dbRef = firebase.db.collection(\"protocol\").doc(protocolType).collection(\"week1\").doc(\"setup\");\n              _context.next = 27;\n              return _regeneratorRuntime.awrap(dbRef.get());\n\n            case 27:\n              doc = _context.sent;\n              setup = doc.data();\n              dbRef = firebase.db.collection(\"protocol\").doc(protocolType).collection(\"week1\").doc(\"active\");\n              _context.next = 32;\n              return _regeneratorRuntime.awrap(dbRef.get());\n\n            case 32:\n              doc = _context.sent;\n              exerciseList = doc.data();\n              return _context.abrupt(\"break\", 47);\n\n            case 35:\n              dbRef = firebase.db.collection(\"protocol\").doc(protocolType).collection(\"basic\").doc(\"stretch\");\n              _context.next = 38;\n              return _regeneratorRuntime.awrap(dbRef.get());\n\n            case 38:\n              doc = _context.sent;\n              exerciseList = doc.data();\n              return _context.abrupt(\"break\", 47);\n\n            case 41:\n              dbRef = firebase.db.collection(\"protocol\").doc(protocolType).collection(\"basic\").doc(\"cooldown\");\n              _context.next = 44;\n              return _regeneratorRuntime.awrap(dbRef.get());\n\n            case 44:\n              doc = _context.sent;\n              exerciseList = doc.data();\n              return _context.abrupt(\"break\", 47);\n\n            case 47:\n              console.log(\"exercises son >>>>>>>>>\", Object.values(exerciseList));\n              exerciseVales = Object.values(exerciseList);\n              _context.next = 51;\n              return _regeneratorRuntime.awrap(_this.basicPhaseExercises(exerciseVales));\n\n            case 51:\n              result = _context.sent;\n              console.warn(\"Los ejercicios esperados son: \", result);\n\n              _this.setState({\n                exercises: result,\n                setup: _this.updateSetup(setup),\n                loading: false\n              });\n\n            case 54:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getExerciseOffline = function (phase) {\n      _this.setState({\n        loading: true\n      });\n\n      console.log(\"offflien phase---\", phase);\n      var exerciseList = [];\n      var setup = {};\n      var downloadedExercises = _this.props.ExerciseRoutine;\n\n      if (downloadedExercises !== undefined) {\n        console.warn(\"dowlonad-----\", downloadedExercises);\n        downloadedExercises.map(function (exercisess, index) {\n          if (index === phase) {\n            console.warn(\"conoled----\", exercisess.collection[0].exerciseCollection);\n            console.warn(\"map resutl----\", exercisess);\n            var currentList = exercisess.collection[0].exerciseCollection;\n            console.warn(\"ucrueen--\", currentList);\n            currentList.map(function (current, index) {\n              var temp = {\n                routinePhase: current.data.routinePhase,\n                gif: current.gif,\n                description: current.data.description,\n                voz: current.voz,\n                activeTime: current.data.activeTime\n              };\n\n              if (current.data.series !== undefined) {\n                setup = {\n                  series: current.data.series,\n                  repetitions: current.data.repetitions,\n                  restTimeMin: current.data.restTimeMin,\n                  restTimeSec: current.data.restTimeSec\n                };\n              }\n\n              exerciseList.push(temp);\n            });\n          }\n        });\n\n        _this.setState({\n          exercises: exerciseList,\n          setup: _this.updateSetup(setup),\n          loading: false\n        });\n      }\n    };\n\n    _this.basicPhaseExercises = function _callee4(exercises) {\n      var promises;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              promises = exercises.map(function _callee2(Item) {\n                var numItem;\n                return _regeneratorRuntime.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return _regeneratorRuntime.awrap(Item.get());\n\n                      case 2:\n                        numItem = _context2.sent;\n                        return _context2.abrupt(\"return\", numItem);\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n              return _context4.abrupt(\"return\", new Promise(function _callee3(resolve, reject) {\n                var numItems;\n                return _regeneratorRuntime.async(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return _regeneratorRuntime.awrap(Promise.all(promises));\n\n                      case 2:\n                        numItems = _context3.sent;\n                        resolve(numItems.map(function (e) {\n                          return e.data();\n                        }));\n\n                      case 4:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.componentDidMount = function () {\n      BackHandler.addEventListener('hardwareBackPress', _this.handleBackButton);\n      console.warn(\"conectiononoo====\", _this.props.connection);\n\n      if (_this.props.connection) {\n        console.warn(\"if---- didmount\");\n\n        _this.getExercise(_this.state.currentPosition);\n      } else {\n        console.warn(\"else---- didmount\");\n\n        _this.getExerciseOffline(_this.state.currentPosition);\n      }\n    };\n\n    _this.changeCurrentExercise = function () {\n      if (_this.state.currentExercise + 1 > _this.state.exercises.length - 1) {\n        _this.changeCurrentPhase();\n      } else {\n        _this.setState({\n          currentExercise: _this.state.currentExercise + 1\n        });\n      }\n    };\n\n    _this.changeCurrentPhase = function () {\n      if (_this.state.currentPosition > 4) {\n        _this.props.navigation.navigate(\"EndRoutine\", {\n          props: _this.props,\n          routineIsNotOver: false\n        });\n      } else {\n        if (_this.state.currentPosition + 1 == 5) {\n          _this.props.navigation.navigate(\"EndRoutine\", {\n            routineIsNotOver: false\n          });\n        }\n\n        _this.setState({\n          currentPosition: _this.state.currentPosition + 1,\n          exercises: [],\n          setup: {},\n          currentExercise: 0,\n          loading: false\n        });\n\n        _this.props.connection ? _this.getExercise(_this.state.currentPosition + 1) : _this.getExerciseOffline(_this.state.currentPosition + 1);\n      }\n    };\n\n    _this.confirmationFinishRoutine = function () {\n      Alert.alert(\"EstÃ¡s seguro de que quieres terminar la rutina? \", \"Si cancelas la rutina perderÃ¡s el progreso de este dÃ­a. \", [{\n        text: \"Regresar\",\n        onPress: function onPress() {},\n        style: \"cancel\"\n      }, {\n        text: \"Cancelar Rutina\",\n        onPress: function onPress() {\n          _this.props.navigation.navigate(\"EndRoutine\", {\n            routineIsNotOver: true\n          });\n        }\n      }], {\n        cancelable: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Ejercicios, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      BackHandler.removeEventListener('hardwareBackPress', this.handleBackButton);\n    }\n  }, {\n    key: \"handleBackButton\",\n    value: function handleBackButton() {\n      ToastAndroid.show('EstÃ¡s en una rutina por favor utiliza el botÃ³n rojo de Abandonar Rutina si quieres salir.', ToastAndroid.SHORT);\n      return true;\n    }\n  }, {\n    key: \"updateSetup\",\n    value: function updateSetup(setup) {\n      var _this$props$navigatio = this.props.navigation.state.params,\n          repetitionAmount = _this$props$navigatio.repetitionAmount,\n          restTimeMin = _this$props$navigatio.restTimeMin,\n          restTimeSec = _this$props$navigatio.restTimeSec;\n      var newSetup = {};\n      var aux = parseInt(setup.repetitions);\n\n      if (aux) {\n        console.log(\"if------\", repetitionAmount);\n        newSetup.repetitions = Math.round(repetitionAmount / 100 * aux);\n        console.log(\"after set if------\", repetitionAmount);\n      } else {\n        console.log(\"else\");\n        newSetup.repetitions = Math.round(repetitionAmount / 100);\n      }\n\n      newSetup.restTimeMin = restTimeMin;\n      newSetup.restTimeSec = restTimeSec;\n      newSetup.series = setup.series;\n      console.log(\"setup---\", setup.repetitions, \"  |||| newSetup rep--- \", newSetup.repetitions);\n      return newSetup;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var labels = [\"Calentar\", \"Estirar\", \"Activar\", \"Estirar\", \"Enfriar\"];\n      var customStyles = {\n        stepIndicatorSize: vmin(6),\n        currentStepIndicatorSize: vmin(7),\n        separatorStrokeWidth: 2,\n        currentStepStrokeWidth: 3,\n        stepStrokeCurrentColor: \"rgba(105,121,248,1)\",\n        stepStrokeWidth: 3,\n        stepStrokeFinishedColor: \"rgba(64,64,64,1)\",\n        stepStrokeUnFinishedColor: \"#CDD2FD\",\n        separatorFinishedColor: \"rgba(64,64,64,1)\",\n        separatorUnFinishedColor: \"#aaaaaa\",\n        stepIndicatorFinishedColor: \"rgba(64,64,64,1)\",\n        stepIndicatorUnFinishedColor: \"#CDD2FD\",\n        stepIndicatorCurrentColor: \"rgba(105,121,248,1)\",\n        stepIndicatorLabelFontSize: vmin(3),\n        currentStepIndicatorLabelFontSize: vmin(3),\n        stepIndicatorLabelCurrentColor: \"white\",\n        stepIndicatorLabelFinishedColor: \"#CDD2FD\",\n        stepIndicatorLabelUnFinishedColor: \"#aaaaaa\",\n        labelColor: \"#999999\",\n        labelSize: vmin(3),\n        currentStepLabelColor: \"black\"\n      };\n\n      if (this.state.exercises[this.state.currentExercise] == undefined || this.state.loading) {\n        return React.createElement(View, {\n          style: {\n            justifyContent: \"center\",\n            height: \"100%\",\n            marginTop: \"5%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 16\n          }\n        }, React.createElement(ChargeScreen, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 86\n          }\n        }));\n      } else {\n        console.log(\"changnee----\", Object.values(this.state.exercises));\n        return React.createElement(View, {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: {\n            height: \"5%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }\n        }, \"\")), React.createElement(View, {\n          style: {\n            width: \"100%\",\n            height: \"8%\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            borderBottomColor: \"rgba(214, 212, 210,1)\",\n            borderBottomWidth: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 11\n          }\n        }, React.createElement(Logo, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 11\n          }\n        }), React.createElement(Text, {\n          style: {\n            marginLeft: \"5%\",\n            fontSize: vmin(5),\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }\n        }, \"Rutina\"), React.createElement(TouchableOpacity, {\n          style: [styles.button2, {\n            marginLeft: \"20%\"\n          }],\n          onPress: function onPress() {\n            Alert.alert(\"Abandonar rutina\", \"Â¿Esta segur@ que quiere abandonar la rutina? Se va a perder todo el progreso que lleva hasta el momento.\", [{\n              text: \"Cancelar\"\n            }, {\n              text: \"ABANDONAR\",\n              onPress: function onPress() {\n                return _this2.props.navigation.navigate(\"EndRoutine\", {\n                  routineIsNotOver: true\n                });\n              }\n            }], {\n              cancelable: false\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }\n        }, \"Abandonar Rutina\"))), React.createElement(View, {\n          style: {\n            width: \"100%\",\n            height: \"90%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.screenContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.containerSteps,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }\n        }, React.createElement(StepIndicator, {\n          customStyles: customStyles,\n          currentPosition: this.state.currentPosition,\n          labels: labels,\n          stepCount: 5,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 17\n          }\n        })), React.createElement(View, {\n          style: styles.containerCard,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }\n        }, console.warn(\"sfdfg\", this.state.exercises[this.state.currentExercise]), React.createElement(EjercicioInactivo, {\n          key: \"ejercicio\" + this.state.currentExercise,\n          indicator: this.state.currentExercise + 1 + \" de \" + this.state.exercises.length,\n          setup: this.state.setup,\n          exercise: this.state.exercises[this.state.currentExercise],\n          changeCurrentExercise: this.changeCurrentExercise,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 17\n          }\n        })))));\n      }\n    }\n  }]);\n\n  return Ejercicios;\n}(React.Component);\n\nvar MapStateToProps = function MapStateToProps(store) {\n  console.warn(\"exercise [rpos======= \", store.DownloadReducer.ExerciseRoutine);\n  console.warn(\"user [rpos======= \", store.User.user);\n  return {\n    user: store.User.user,\n    connection: store.User.connection,\n    ExerciseRoutine: store.DownloadReducer.ExerciseRoutine\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {};\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Ejercicios);\nvar styles = StyleSheet.create({\n  screenContainer: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"white\"\n  },\n  containerSteps: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    height: \"12%\",\n    justifyContent: \"center\"\n  },\n  containerCard: {\n    height: \"88%\"\n  },\n  containerButton: {\n    height: \"10%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: vmin(2)\n  },\n  button: {\n    backgroundColor: \"#6979F8\",\n    margin: vmin(2),\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button2: {\n    backgroundColor: \"rgba(199, 0, 57,1)\",\n    width: \"40%\",\n    height: \"70%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.29,\n    shadowRadius: 4.65,\n    elevation: 7\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/screens/Ejercicios.tsx"],"names":["React","connect","EjercicioInactivo","require","vmin","StepIndicator","firebase","Logo","ChargeScreen","Ejercicios","props","state","currentPosition","exercises","setup","currentExercise","loading","getExercise","phase","console","warn","setState","dbRef","doc","exerciseList","protocolType","user","information","medical","amputationLevel","db","collection","get","data","log","Object","values","exerciseVales","basicPhaseExercises","result","updateSetup","getExerciseOffline","downloadedExercises","ExerciseRoutine","undefined","map","exercisess","index","exerciseCollection","currentList","current","temp","routinePhase","gif","description","voz","activeTime","series","repetitions","restTimeMin","restTimeSec","push","promises","Item","numItem","Promise","resolve","reject","all","numItems","e","componentDidMount","BackHandler","addEventListener","handleBackButton","connection","changeCurrentExercise","length","changeCurrentPhase","navigation","navigate","routineIsNotOver","confirmationFinishRoutine","Alert","alert","text","onPress","style","cancelable","removeEventListener","ToastAndroid","show","SHORT","params","repetitionAmount","newSetup","aux","parseInt","Math","round","labels","customStyles","stepIndicatorSize","currentStepIndicatorSize","separatorStrokeWidth","currentStepStrokeWidth","stepStrokeCurrentColor","stepStrokeWidth","stepStrokeFinishedColor","stepStrokeUnFinishedColor","separatorFinishedColor","separatorUnFinishedColor","stepIndicatorFinishedColor","stepIndicatorUnFinishedColor","stepIndicatorCurrentColor","stepIndicatorLabelFontSize","currentStepIndicatorLabelFontSize","stepIndicatorLabelCurrentColor","stepIndicatorLabelFinishedColor","stepIndicatorLabelUnFinishedColor","labelColor","labelSize","currentStepLabelColor","justifyContent","height","marginTop","width","backgroundColor","flexDirection","alignItems","borderBottomColor","borderBottomWidth","marginLeft","fontSize","fontWeight","styles","button2","color","screenContainer","containerSteps","containerCard","Component","MapStateToProps","store","DownloadReducer","User","MapDispatchToProps","dispatch","StyleSheet","create","borderRadius","containerButton","padding","button","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ScrollView,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Button,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  Alert,\r\n  BackHandler,\r\n  ToastAndroid,\r\n} from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Dispatch } from \"redux\";\r\nimport EjercicioInactivo from \"../cards/EjercicioInactivo\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\n\r\ninterface Props {}\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\n\r\nimport StepIndicator from \"react-native-step-indicator\";\r\nimport firebase from \"../../../database/firebase\";\r\nimport Logo from \"../Simple/Logo\";\r\nimport ChargeScreen from \"../Simple/ChargeScreen\";\r\n\r\nclass Ejercicios extends React.Component<Props> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    currentPosition: 0,\r\n    exercises: [],\r\n    setup: {},\r\n    currentExercise: 0,\r\n    loading: false,\r\n  };\r\n\r\ncomponentWillUnmount() {\r\n    BackHandler.removeEventListener('hardwareBackPress', this.handleBackButton);\r\n}\r\n\r\nhandleBackButton() {\r\n    ToastAndroid.show('EstÃ¡s en una rutina por favor utiliza el botÃ³n rojo de Abandonar Rutina si quieres salir.', ToastAndroid.SHORT);\r\n    return true;\r\n}\r\n\r\n  // var messageRef = db.collection('rooms').doc('roomA')\r\n  // .collection('messages').doc('message1');\r\n  getExercise = async (phase) => {\r\n    console.warn(\"props-----\", this.props)\r\n    this.setState({ loading: true });\r\n    let exercises = [];\r\n    let setup = {};\r\n    let dbRef: any = \"\";\r\n    let doc = \"\";\r\n    let exerciseList = [];\r\n    let protocolType = this.props.user.information.medical.amputationLevel;\r\n    protocolType == \"PreprotÃ©sico\"\r\n      ? (protocolType = \"preprotesico\")\r\n      : (protocolType = \"protesico\");\r\n    switch (phase) {\r\n      case 0:\r\n        dbRef = firebase.db\r\n          .collection(\"protocol\")\r\n          .doc(protocolType)\r\n          .collection(\"basic\")\r\n          .doc(\"warmup\");\r\n        doc = await dbRef.get();\r\n        exerciseList = doc.data();\r\n        break;\r\n      case 1:\r\n        dbRef = firebase.db\r\n          .collection(\"protocol\")\r\n          .doc(protocolType)\r\n          .collection(\"basic\")\r\n          .doc(\"stretch\");\r\n        doc = await dbRef.get();\r\n        exerciseList = doc.data();\r\n        break;\r\n      case 2:\r\n        //setup\r\n        dbRef = firebase.db\r\n          .collection(\"protocol\")\r\n          .doc(protocolType)\r\n          .collection(\"week1\")\r\n          .doc(\"setup\");\r\n        doc = await dbRef.get();\r\n        setup = doc.data();\r\n        //exercise\r\n        dbRef = firebase.db\r\n          .collection(\"protocol\")\r\n          .doc(protocolType)\r\n          .collection(\"week1\")\r\n          .doc(\"active\");\r\n        doc = await dbRef.get();\r\n        exerciseList = doc.data();\r\n        break;\r\n\r\n      case 3:\r\n        dbRef = firebase.db\r\n          .collection(\"protocol\")\r\n          .doc(protocolType)\r\n          .collection(\"basic\")\r\n          .doc(\"stretch\");\r\n        doc = await dbRef.get();\r\n        exerciseList = doc.data();\r\n        break;\r\n\r\n      case 4:\r\n        dbRef = firebase.db\r\n          .collection(\"protocol\")\r\n          .doc(protocolType)\r\n          .collection(\"basic\")\r\n          .doc(\"cooldown\");\r\n        doc = await dbRef.get();\r\n        exerciseList = doc.data();\r\n        break;\r\n    }\r\n\r\n    console.log(\"exercises son >>>>>>>>>\", Object.values(exerciseList));\r\n\r\n    let exerciseVales = Object.values(exerciseList);\r\n\r\n    let result = await this.basicPhaseExercises(exerciseVales);\r\n\r\n    console.warn(\"Los ejercicios esperados son: \", result);\r\n\r\n    this.setState({\r\n      exercises: result,\r\n      setup: this.updateSetup(setup),\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  getExerciseOffline = (phase) => {\r\n    this.setState({ loading: true });\r\n    console.log(\"offflien phase---\", phase);\r\n    let exerciseList: any = [];\r\n    let setup: any = {};\r\n    let downloadedExercises = this.props.ExerciseRoutine;\r\n    if (downloadedExercises !== undefined) {\r\n      console.warn(\"dowlonad-----\", downloadedExercises);\r\n      downloadedExercises.map((exercisess, index) => {\r\n        if (index === phase) {\r\n          console.warn(\r\n            \"conoled----\",\r\n            exercisess.collection[0].exerciseCollection\r\n          );\r\n          console.warn(\"map resutl----\", exercisess);\r\n          let currentList = exercisess.collection[0].exerciseCollection;\r\n          console.warn(\"ucrueen--\", currentList);\r\n          currentList.map((current, index) => {\r\n            let temp = {\r\n              routinePhase: current.data.routinePhase,\r\n              gif: current.gif,\r\n              description: current.data.description,\r\n              voz: current.voz,\r\n              activeTime: current.data.activeTime,\r\n            };\r\n            if (current.data.series !== undefined) {\r\n              setup = {\r\n                series: current.data.series,\r\n                repetitions: current.data.repetitions,\r\n                restTimeMin: current.data.restTimeMin,\r\n                restTimeSec: current.data.restTimeSec,\r\n              };\r\n            }\r\n            exerciseList.push(temp);\r\n          });\r\n          //   exerciseList = {\r\n          //     routinePhase: current.data.routinePhase,\r\n          //     gif: current.gif,\r\n          //     description: current.data.description,\r\n          //     voz: current.data.voz,\r\n          //     activeTime: current.data.activeTime\r\n          // }\r\n          //  exerciseList=exerciseCollection;\r\n          // exerciseCollection.map((exercise, index)=>{\r\n          //   if(index===day){\r\n          //     exerciseList = exercise\r\n          //   }\r\n          // })\r\n        }\r\n      });\r\n\r\n      this.setState({\r\n        exercises: exerciseList,\r\n        // setup:setup ,\r\n        setup: this.updateSetup(setup),\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n  basicPhaseExercises = async (exercises) => {\r\n    const promises = exercises.map(async (Item) => {\r\n      const numItem = await Item.get();\r\n      return numItem;\r\n    });\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n      const numItems = await Promise.all(promises);\r\n      resolve(numItems.map((e) => e.data()));\r\n    });\r\n  };\r\n\r\n  updateSetup(setup) {\r\n    const { repetitionAmount, restTimeMin, restTimeSec } =\r\n      this.props.navigation.state.params;\r\n    let newSetup = {};\r\n    let aux = parseInt(setup.repetitions);\r\n    if (aux) {\r\n      console.log(\"if------\", repetitionAmount);\r\n      newSetup.repetitions = Math.round((repetitionAmount / 100) * aux);\r\n      console.log(\"after set if------\", repetitionAmount);\r\n    } else {\r\n      console.log(\"else\");\r\n      newSetup.repetitions = Math.round(repetitionAmount / 100);\r\n    }\r\n    newSetup.restTimeMin = restTimeMin;\r\n    newSetup.restTimeSec = restTimeSec;\r\n    newSetup.series = setup.series;\r\n    console.log(\r\n      \"setup---\",\r\n      setup.repetitions,\r\n      \"  |||| newSetup rep--- \",\r\n      newSetup.repetitions\r\n    );\r\n    return newSetup;\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    \r\n    BackHandler.addEventListener('hardwareBackPress', this.handleBackButton);\r\n    console.warn(\"conectiononoo====\", this.props.connection);\r\n    if (this.props.connection) {\r\n      console.warn(\"if---- didmount\");\r\n      this.getExercise(this.state.currentPosition);\r\n    } else {\r\n      console.warn(\"else---- didmount\");\r\n      this.getExerciseOffline(this.state.currentPosition);\r\n    }\r\n  };\r\n\r\n  changeCurrentExercise = () => {\r\n    if (this.state.currentExercise + 1 > this.state.exercises.length - 1) {\r\n      this.changeCurrentPhase();\r\n    } else {\r\n      this.setState({ currentExercise: this.state.currentExercise + 1 });\r\n    }\r\n  };\r\n\r\n  changeCurrentPhase = () => {\r\n    if (this.state.currentPosition > 4) {\r\n      this.props.navigation.navigate(\"EndRoutine\", { props: this.props, routineIsNotOver: false, });\r\n    } else {\r\n      if (this.state.currentPosition + 1 == 5) {\r\n        this.props.navigation.navigate(\"EndRoutine\", {\r\n          routineIsNotOver: false,\r\n        });\r\n      }\r\n      this.setState({\r\n        currentPosition: this.state.currentPosition + 1,\r\n        exercises: [],\r\n        setup: {},\r\n        currentExercise: 0,\r\n        loading: false,\r\n      });\r\n      this.props.connection\r\n        ? this.getExercise(this.state.currentPosition + 1)\r\n        : this.getExerciseOffline(this.state.currentPosition + 1);\r\n    }\r\n  };\r\n\r\n  confirmationFinishRoutine = () => {\r\n    Alert.alert(\r\n      \"EstÃ¡s seguro de que quieres terminar la rutina? \",\r\n      \"Si cancelas la rutina perderÃ¡s el progreso de este dÃ­a. \",\r\n      [\r\n        {\r\n          text: \"Regresar\",\r\n          onPress: () => {},\r\n          style: \"cancel\",\r\n        },\r\n        {\r\n          text: \"Cancelar Rutina\",\r\n          onPress: () => {\r\n            \r\n            this.props.navigation.navigate(\"EndRoutine\", {\r\n              routineIsNotOver: true,\r\n            });\r\n          },\r\n        },\r\n      ],\r\n      { cancelable: false }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const labels = [\"Calentar\", \"Estirar\", \"Activar\", \"Estirar\", \"Enfriar\"];\r\n    const customStyles = {\r\n      stepIndicatorSize: vmin(6),\r\n      currentStepIndicatorSize: vmin(7),\r\n      separatorStrokeWidth: 2,\r\n      currentStepStrokeWidth: 3,\r\n      stepStrokeCurrentColor: \"rgba(105,121,248,1)\", //borde seleccionado\r\n      stepStrokeWidth: 3,\r\n      stepStrokeFinishedColor: \"rgba(64,64,64,1)\",\r\n      stepStrokeUnFinishedColor: \"#CDD2FD\", // morado\r\n      separatorFinishedColor: \"rgba(64,64,64,1)\",\r\n      separatorUnFinishedColor: \"#aaaaaa\",\r\n      stepIndicatorFinishedColor: \"rgba(64,64,64,1)\",\r\n      stepIndicatorUnFinishedColor: \"#CDD2FD\", //Gris\r\n      stepIndicatorCurrentColor: \"rgba(105,121,248,1)\", //morado\r\n      stepIndicatorLabelFontSize: vmin(3),\r\n      currentStepIndicatorLabelFontSize: vmin(3),\r\n      stepIndicatorLabelCurrentColor: \"white\", // label dentro de la bolita\r\n      stepIndicatorLabelFinishedColor: \"#CDD2FD\", //Gris\r\n      stepIndicatorLabelUnFinishedColor: \"#aaaaaa\",\r\n      labelColor: \"#999999\",\r\n      labelSize: vmin(3),\r\n      currentStepLabelColor: \"black\", // color de la label de abajo\r\n    };\r\n\r\n    if (\r\n      this.state.exercises[this.state.currentExercise] == undefined ||\r\n      this.state.loading\r\n    ) {\r\n      return  (<View style={{justifyContent:\"center\",height:\"100%\", marginTop:\"5%\"}}><ChargeScreen/></View>);\r\n    } else {\r\n      console.log(\"changnee----\", Object.values(this.state.exercises));\r\n      return (\r\n        <View\r\n          style={{ width: \"100%\", height: \"100%\", backgroundColor: \"white\" }}\r\n        >\r\n          <View style={{ height: \"5%\" }}>\r\n            <Text>{\"\"}</Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"8%\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-start\",\r\n              alignItems: \"center\",\r\n              borderBottomColor: \"rgba(214, 212, 210,1)\",\r\n              borderBottomWidth: 1,\r\n            }}\r\n          >\r\n          <Logo/>\r\n            <Text\r\n              style={{\r\n                marginLeft: \"5%\",\r\n                fontSize:vmin(5),\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              Rutina\r\n            </Text>\r\n            <TouchableOpacity\r\n              style={[styles.button2,{\r\n                marginLeft: \"20%\",}]}\r\n              onPress={() => {\r\n                //this.confirmationFinishRoutine();\r\n                Alert.alert(\r\n                  \"Abandonar rutina\",\r\n                  \"Â¿Esta segur@ que quiere abandonar la rutina? Se va a perder todo el progreso que lleva hasta el momento.\",\r\n                  [\r\n                    {\r\n                      text: \"Cancelar\",\r\n                    },\r\n                    {\r\n                      text: \"ABANDONAR\",\r\n                      onPress: () =>\r\n                        this.props.navigation.navigate(\"EndRoutine\", {\r\n                          routineIsNotOver: true,\r\n                        }),\r\n                    },\r\n                  ],\r\n                  { cancelable: false }\r\n                );\r\n              }}\r\n            >\r\n              <Text style={{ color: \"white\" }}>Abandonar Rutina</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View style={{ width: \"100%\", height: \"90%\" }}>\r\n            <View style={styles.screenContainer}>\r\n              <View style={styles.containerSteps}>\r\n                <StepIndicator\r\n                  customStyles={customStyles}\r\n                  currentPosition={this.state.currentPosition}\r\n                  labels={labels}\r\n                  stepCount={5}\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.containerCard}>\r\n                {console.warn(\r\n                  \"sfdfg\",\r\n                  this.state.exercises[this.state.currentExercise]\r\n                )}\r\n                <EjercicioInactivo\r\n                  key={\"ejercicio\" + this.state.currentExercise}\r\n                  indicator={`${this.state.currentExercise + 1} de ${\r\n                    this.state.exercises.length\r\n                  }`}\r\n                  setup={this.state.setup}\r\n                  exercise={this.state.exercises[this.state.currentExercise]}\r\n                  changeCurrentExercise={this.changeCurrentExercise}\r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  console.warn(\"exercise [rpos======= \", store.DownloadReducer.ExerciseRoutine);\r\n  console.warn(\"user [rpos======= \", store.User.user);\r\n  return {\r\n    user: store.User.user,\r\n    connection: store.User.connection,\r\n    ExerciseRoutine: store.DownloadReducer.ExerciseRoutine,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({});\r\nexport default connect(MapStateToProps, MapDispatchToProps)(Ejercicios);\r\n\r\nconst styles = StyleSheet.create({\r\n  screenContainer: { width: \"100%\", height: \"100%\", backgroundColor: \"white\" },\r\n  // header: {\r\n  //   width: \"100%\",\r\n  //   alignItems: \"center\",\r\n  //   backgroundColor: \"peru\",\r\n  //   height: \"7%\",\r\n  //   justifyContent: \"center\",\r\n  // },\r\n  // title: {\r\n  //   textAlign: \"center\",\r\n  //   fontWeight: \"bold\",\r\n  // },\r\n  containerSteps: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    height: \"12%\",\r\n    justifyContent: \"center\",\r\n    // alignItems: \"center\",\r\n  },\r\n  containerCard: {\r\n    height: \"88%\",\r\n  },\r\n  containerButton: {\r\n    height: \"10%\",\r\n    width: \"100%\",\r\n    // backgroundColor: \"red\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: vmin(2),\r\n  },\r\n  button: {\r\n    backgroundColor: \"#6979F8\",\r\n    margin: vmin(2),\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  button2: {\r\n    backgroundColor: \"rgba(199, 0, 57,1)\",\r\n    width: \"40%\",\r\n    height: \"70%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowOpacity: 0.29,\r\n    shadowRadius: 4.65,\r\n\r\n    elevation: 7,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}