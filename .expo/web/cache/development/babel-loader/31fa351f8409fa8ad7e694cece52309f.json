{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\screens\\\\Repository.tsx\";\n\nimport * as React from \"react\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { TabView, TabBar } from \"react-native-tab-view\";\nimport ScalableText from \"react-native-text\";\nimport { connect } from \"react-redux\";\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\nimport GeneralInformation from \"./GeneralInformation\";\nimport ExerciseRoutine from \"../cards/ExerciseRoutine\";\nimport Limiting from \"../cards/Limiting\";\n\nvar FirstRoute = function FirstRoute(props) {\n  return React.createElement(GeneralInformation, {\n    props: props,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 31\n    }\n  });\n};\n\nvar SecondRoute = function SecondRoute(props) {\n  return React.createElement(Limiting, {\n    props: props,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 32\n    }\n  });\n};\n\nvar ThirdRoute = function ThirdRoute(props) {\n  return React.createElement(ExerciseRoutine, {\n    props: props,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 31\n    }\n  });\n};\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nfunction Repository(props) {\n  var _this2 = this;\n\n  var layout = useWindowDimensions();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      activate = _React$useState4[0],\n      setActivation = _React$useState4[1];\n\n  var _React$useState5 = React.useState([{\n    key: \"first\",\n    title: \"General\"\n  }, {\n    key: \"second\",\n    title: \"Restricciones\"\n  }, {\n    key: \"third\",\n    title: \"Rutina de Ejercicios\"\n  }]),\n      _React$useState6 = _slicedToArray(_React$useState5, 1),\n      routes = _React$useState6[0];\n\n  var renderScene = function renderScene(_ref) {\n    var route = _ref.route;\n\n    switch (route.key) {\n      case \"first\":\n        return React.createElement(GeneralInformation, {\n          props: props,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 16\n          }\n        });\n\n      case \"second\":\n        return React.createElement(Limiting, {\n          props: props,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 16\n          }\n        });\n\n      case \"third\":\n        return React.createElement(ExerciseRoutine, {\n          props: props,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 16\n          }\n        });\n\n      default:\n        return null;\n    }\n  };\n\n  React.useEffect(function () {\n    props.setRepoIndex(index);\n  }, [index, props.showTour1, props.showTour2, props.showTour3]);\n  return React.createElement(TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    swipeEnabled: true,\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    lazy: true,\n    initialLayout: {\n      width: layout.width,\n      height: layout.height\n    },\n    renderTabBar: function renderTabBar(props) {\n      return React.createElement(TabBar, _extends({}, props, {\n        renderLabel: function renderLabel(_ref2) {\n          var route = _ref2.route,\n              color = _ref2.color;\n          return React.createElement(ScalableText, {\n            style: {\n              color: \"#6979F8\",\n              margin: 4,\n              fontSize: vmin(3.8),\n              textAlign: \"center\"\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }\n          }, route.title);\n        },\n        indicatorStyle: {\n          backgroundColor: \"#6979F8\"\n        },\n        style: {\n          backgroundColor: \"white\"\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  });\n}\n\nvar MapStateToProps = function MapStateToProps(store) {\n  return {\n    repoIndex: store.User.repoIndex,\n    showTour1: store.User.showTour1,\n    showTour2: store.User.showTour2,\n    showTour3: store.User.showTour3\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {\n    setRepoIndex: function setRepoIndex(val) {\n      return dispatch(actionsUser.SET_REPOINDEX(val));\n    }\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Repository);","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/screens/Repository.tsx"],"names":["React","TabView","TabBar","ScalableText","connect","actionsUser","GeneralInformation","ExerciseRoutine","Limiting","FirstRoute","props","SecondRoute","ThirdRoute","require","vmin","Repository","layout","useWindowDimensions","useState","index","setIndex","activate","setActivation","key","title","routes","renderScene","route","useEffect","setRepoIndex","showTour1","showTour2","showTour3","width","height","color","margin","fontSize","textAlign","backgroundColor","MapStateToProps","store","repoIndex","User","MapDispatchToProps","dispatch","val","SET_REPOINDEX"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  View,\r\n  useWindowDimensions,\r\n  Text,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { TabView, SceneMap, TabBar } from \"react-native-tab-view\";\r\nimport ScalableText from \"react-native-text\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\r\n\r\nimport GeneralInformation from \"./GeneralInformation\";\r\n\r\nimport ExerciseRoutine from \"../cards/ExerciseRoutine\";\r\n\r\nimport Limiting from \"../cards/Limiting\";\r\n\r\n//const FirstRoute = (props) => <> </>;\r\nconst FirstRoute = (props) => <GeneralInformation props={props} />;\r\n\r\nconst SecondRoute = (props) => <Limiting props={props} />;\r\n\r\nconst ThirdRoute = (props) => <ExerciseRoutine props={props} />;\r\n\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\n\r\nfunction Repository(props) {\r\n  const layout = useWindowDimensions();\r\n\r\n  const [index, setIndex] = React.useState(0);\r\n  const [activate, setActivation] = React.useState(true);\r\n  const [routes] = React.useState([\r\n    { key: \"first\", title: \"General\" },\r\n    { key: \"second\", title: \"Restricciones\" },\r\n    { key: \"third\", title: \"Rutina de Ejercicios\" },\r\n  ]);\r\n  const renderScene = ({ route }) => {\r\n    switch (route.key) {\r\n      case \"first\":\r\n        return <GeneralInformation props={props} />;\r\n      case \"second\":\r\n        return <Limiting props={props} />;\r\n      case \"third\":\r\n        return <ExerciseRoutine props={props} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // console.warn(\"repo useeffect-?!!!-\");\r\n    props.setRepoIndex(index);\r\n    //setActivation\r\n  }, [index, props.showTour1, props.showTour2, props.showTour3]);\r\n  // console.warn(\"repo ====\", props.repoIndex)\r\n  return (\r\n    <TabView\r\n      navigationState={{ index, routes }}\r\n      swipeEnabled={true}\r\n      renderScene={renderScene}\r\n      onIndexChange={setIndex}\r\n      lazy={true}\r\n      initialLayout={{ width: layout.width, height: layout.height }}\r\n      // style={{ backgroundColor: \"red\", height: 20 }}\r\n      renderTabBar={(props) => (\r\n        <TabBar\r\n          {...props}\r\n          renderLabel={({ route, color }) => (\r\n            <ScalableText\r\n              style={{\r\n                color: \"#6979F8\",\r\n                margin: 4,\r\n                fontSize: vmin(3.8),\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              {route.title}\r\n            </ScalableText>\r\n          )}\r\n          indicatorStyle={{ backgroundColor: \"#6979F8\" }}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            // alignItems: \"center\",\r\n            // justifyContent: \"center\",\r\n            // height:vmin(15)\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n  // return (\r\n  //   <View style={{ width: \"100%\", height: \"100%\" }}>\r\n  //     <View\r\n  //       style={{\r\n  //         width: \"100%\",\r\n  //         height: \"8%\",\r\n  //         flexDirection: \"row\",\r\n  //         backgroundColor: \"white\",\r\n  //       }}\r\n  //     >\r\n  //       <TouchableOpacity\r\n  //         style={{\r\n  //           width: \"33%\",\r\n  //           height: \"100%\",\r\n  //           alignItems: \"center\",\r\n  //           justifyContent: \"center\",\r\n  //         }}\r\n  //         onPress={() => setIndex(0)}\r\n  //       >\r\n  //         <Text>General</Text>\r\n  //       </TouchableOpacity>\r\n\r\n  //       <TouchableOpacity\r\n  //         style={{\r\n  //           width: \"33%\",\r\n  //           height: \"100%\",\r\n  //           alignItems: \"center\",\r\n  //           justifyContent: \"center\",\r\n  //         }}\r\n  //         onPress={() => setIndex(1)}\r\n  //       >\r\n  //         <Text>Rutina de Ejercicios</Text>\r\n  //       </TouchableOpacity>\r\n\r\n  //       <TouchableOpacity\r\n  //         style={{\r\n  //           width: \"33%\",\r\n  //           height: \"100%\",\r\n  //           alignItems: \"center\",\r\n  //           justifyContent: \"center\",\r\n  //         }}\r\n  //         onPress={() => setIndex(2)}\r\n  //       >\r\n  //         <Text>Limitantes</Text>\r\n  //       </TouchableOpacity>\r\n  //     </View>\r\n\r\n  //     <View style={{ width: \"100%\", height: \"98%\", flexDirection: \"row\" }}>\r\n  //       {index == 0 ? (\r\n  //         <GeneralInformation />\r\n  //       ) : index == 1 ? (\r\n  //         <ExerciseRoutine />\r\n  //       ) : (\r\n  //         <Limiting />\r\n  //       )}\r\n  //     </View>\r\n  //   </View>\r\n  // );\r\n}\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  // console.warn(\"mappp-----\", store.DownloadReducer.GeneralInfo);\r\n  // console.warn(\"mappp ids-----\", store.DownloadReducer.GeneralInfoIds);\r\n  return {\r\n    repoIndex: store.User.repoIndex,\r\n    showTour1: store.User.showTour1,\r\n    showTour2: store.User.showTour2,\r\n    showTour3: store.User.showTour3,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({\r\n  setRepoIndex: (val) => dispatch(actionsUser.SET_REPOINDEX(val)),\r\n});\r\nexport default connect(MapStateToProps, MapDispatchToProps)(Repository);\r\n"]},"metadata":{},"sourceType":"module"}