{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\screens\\\\ScheduleRoutines.tsx\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Picker from \"../Simple/Picker\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nimport { connect } from \"react-redux\";\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\nimport { actionsNotifications } from \"../../redux/actions/actionsNotifications\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport * as Notifications from \"expo-notifications\";\n\nfunction realDay(dayNumber) {\n  switch (dayNumber) {\n    case 0:\n      return \"Domingo\";\n\n    case 1:\n      return \"Lunes\";\n\n    case 2:\n      return \"Martes\";\n\n    case 3:\n      return \"Miercoles\";\n\n    case 4:\n      return \"Jueves\";\n\n    case 5:\n      return \"Viernes\";\n\n    case 6:\n      return \"Sabado\";\n  }\n}\n\nfunction dayConverter(dayIndex) {\n  var today = new Date();\n  today.setDate(today.getDate() + (dayIndex - 1 - today.getDay() + 7) % 7 + 1);\n  return today;\n}\n\nfunction timeConverter(time, ampm) {\n  var splitTime = time.split(\":\");\n  var hour = parseInt(splitTime[0]);\n  var minute = parseInt(splitTime[1]);\n  if (ampm == \"PM\") hour += 12;\n  var date = new Date();\n  date.setHours(hour - 1);\n  date.setMinutes(minute);\n  return date;\n}\n\nfunction scheduleDates(exerciseList) {\n  var dates = [];\n  exerciseList.forEach(function (exercise) {\n    var day = exercise.weekDay;\n    var time = exercise.hour;\n    var ampm = exercise.ampm;\n    var convertedDay = dayConverter(day);\n    var convertedTime = timeConverter(time, ampm);\n    var date = new Date();\n    date.setFullYear(convertedDay.getFullYear());\n    date.setMonth(convertedDay.getMonth());\n    date.setDate(convertedDay.getDate());\n    date.setHours(convertedTime.getHours());\n    date.setMinutes(convertedTime.getMinutes());\n    date.setSeconds(0);\n    dates.push(date);\n  });\n  return dates;\n}\n\nvar printPendingNotifications = function printPendingNotifications() {\n  return _regeneratorRuntime.async(function printPendingNotifications$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Notifications.getAllScheduledNotificationsAsync().then(function (notifications) {\n            console.warn(\"Number of scheduled notifications =\", notifications.length);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar ScheduleRoutines = function ScheduleRoutines(props) {\n  var activeDay = props.user.information.control.activeDay;\n  var activeWeek = parseInt(props.user.information.control.activeWeek.replace(/\\D/g, \"\"));\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      validObject = _useState2[0],\n      setValidObject = _useState2[1];\n\n  var fillValidObject = function fillValidObject() {\n    var validAux = {};\n    props.scheduledRoutines[0].exerciseList.forEach(function (exercise, index) {\n      if (activeDay <= index) {\n        var _objectSpread2;\n\n        var dayId = \"day\" + index;\n        var hourId = \"hour\" + index;\n        var ampmId = \"ampm\" + index;\n        validAux = _objectSpread(_objectSpread({}, validAux), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, dayId, exercise.weekDay), _defineProperty(_objectSpread2, hourId, exercise.hour), _defineProperty(_objectSpread2, ampmId, exercise.ampm), _objectSpread2));\n      }\n    });\n    console.warn(\"valid----\", validAux);\n    return validAux;\n  };\n\n  var filledSchedule = fillValidObject();\n  useEffect(function () {\n    console.warn(\"use effect -----\");\n    setValidObject(filledSchedule);\n    console.warn(\"ampmnkeffect-=---\", validObject[\"ampm\" + 3]);\n  }, []);\n  useEffect(function () {}, [validObject]);\n\n  var toggleKeepProgramming = function toggleKeepProgramming() {\n    var _useState3 = useState(props.scheduledRoutines[0].persist),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isEnabled = _useState4[0],\n        setIsEnabled = _useState4[1];\n\n    var toggleSwitch = function toggleSwitch() {\n      var titulo = !isEnabled ? \"Mantener Notifications\" : \"Deshabilitar\";\n      var message = !isEnabled ? \"Sí acepta esta acción se van a programar todas las notificaciones de las semanas que faltan de su entrenamiento.\" : \"Sí acepta esta acción se cancelan todas las notifiaciones y solo quedarán las que estan pendientes para la semana actual\";\n\n      if (Object.values(validObject).includes(-1) || Object.values(validObject).includes(\"--\") || Object.values(validObject).includes(\"Seleccionar\")) {\n        printPendingNotifications();\n        console.log(\"alert\");\n        Alert.alert(\"Por favor seleccione todos los campos\");\n      } else {\n        Alert.alert(titulo, message, [{\n          text: \"Cancelar\"\n        }, {\n          text: \"Aceptar\",\n          onPress: function onPress() {\n            setIsEnabled(function (previousState) {\n              return !previousState;\n            });\n            props.disableNotification(false);\n\n            if (!isEnabled) {\n              props.persistNotification(true);\n              var promise = new Promise(function (resolve, reject) {\n                resolve(scheduleAllNotifications(scheduleDates(props.scheduledRoutines[0].exerciseList)));\n              });\n              promise.then(function () {\n                console.warn(\" if promise then\");\n                printPendingNotifications();\n              });\n            } else {\n              props.persistNotification(false);\n              var validIds = 5 - activeDay;\n              var remove = props.scheduledNotifications.flat();\n              var keep = remove.splice(0, validIds);\n              var myPromise = new Promise(function (resolve, reject) {\n                console.warn(\"remove \", remove, \" keep \", keep);\n                resolve(cancelAllNotification(remove.flat()));\n              });\n              myPromise.then(function () {\n                console.warn(\"else promise then\");\n                printPendingNotifications();\n                props.setNotificationId(keep.flat());\n              });\n            }\n          }\n        }], {\n          cancelable: false\n        });\n      }\n    };\n\n    return React.createElement(View, {\n      style: KeepProgrammingStyles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, React.createElement(Switch, {\n      trackColor: {\n        false: \"#767577\",\n        true: \"#81b0ff\"\n      },\n      thumbColor: \"#f4f3f4\",\n      ios_backgroundColor: \"#3e3e3e\",\n      onValueChange: toggleSwitch,\n      value: props.scheduledRoutines[0].persist,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var toggleDisableProgramming = function toggleDisableProgramming() {\n    var _useState5 = useState(props.scheduledRoutines[0].disable),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isEnabled = _useState6[0],\n        setIsEnabled = _useState6[1];\n\n    var toggleSwitch = function toggleSwitch() {\n      var titulo = !isEnabled ? \"Deshabilitar Notifications\" : \"Reactivar Notifications\";\n      var message = !isEnabled ? \"Sí acepta esta acción se van a cancelar todas las notificaciones guardadas\" : \"Sí acepta esta acción automáticamente se le programan las notificaciones pendientes de la semana\";\n      Alert.alert(titulo, message, [{\n        text: \"Cancelar\"\n      }, {\n        text: \"Aceptar\",\n        onPress: function onPress() {\n          setIsEnabled(function (previousState) {\n            return !previousState;\n          });\n          props.persistNotification(false);\n\n          if (!isEnabled) {\n            props.disableNotification(true);\n            cancelAllNotification(props.scheduledNotifications.flat());\n          } else {\n            if (Object.values(validObject).includes(-1) || Object.values(validObject).includes(\"--\") || Object.values(validObject).includes(\"Seleccionar\")) {\n              printPendingNotifications();\n              console.log(\"alert\");\n              Alert.alert(\"Por favor seleccione todos los campos\");\n            } else {\n              props.disableNotification(false);\n              scheduleRoutineReminder(scheduleDates(props.scheduledRoutines[0].exerciseList), activeWeek);\n            }\n          }\n\n          console.warn(\"disable====\", props.scheduledRoutines[0].disable, \"///\", isEnabled);\n        }\n      }], {\n        cancelable: false\n      });\n    };\n\n    return React.createElement(View, {\n      style: KeepProgrammingStyles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 7\n      }\n    }, React.createElement(Switch, {\n      trackColor: {\n        false: \"#767577\",\n        true: \"#81b0ff\"\n      },\n      thumbColor: \"#f4f3f4\",\n      ios_backgroundColor: \"#3e3e3e\",\n      onValueChange: toggleSwitch,\n      value: props.scheduledRoutines[0].disable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var handleLocalNotification = function handleLocalNotification() {\n    return _regeneratorRuntime.async(function handleLocalNotification$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            try {\n              Notifications.setNotificationHandler({\n                handleNotification: function handleNotification() {\n                  return _regeneratorRuntime.async(function handleNotification$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          return _context2.abrupt(\"return\", {\n                            shouldShowAlert: true,\n                            shouldPlaySound: false,\n                            shouldSetBadge: false\n                          });\n\n                        case 1:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                }\n              });\n            } catch (error) {\n              console.warn(\"handler error ---\", error);\n            }\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var cancelAllNotification = function cancelAllNotification(ids) {\n    var _iterator, _step, element;\n\n    return _regeneratorRuntime.async(function cancelAllNotification$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.warn(\"cancel ids---------\", ids.flat());\n            _context4.prev = 1;\n            _iterator = _createForOfIteratorHelperLoose(ids.flat());\n\n          case 3:\n            if ((_step = _iterator()).done) {\n              _context4.next = 15;\n              break;\n            }\n\n            element = _step.value;\n            _context4.prev = 5;\n            _context4.next = 8;\n            return _regeneratorRuntime.awrap(Notifications.cancelScheduledNotificationAsync(element));\n\n          case 8:\n            _context4.next = 13;\n            break;\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](5);\n            console.warn(\"canceleerError-----\", _context4.t0);\n\n          case 13:\n            _context4.next = 3;\n            break;\n\n          case 15:\n            props.clearNotificationIds();\n            _context4.next = 21;\n            break;\n\n          case 18:\n            _context4.prev = 18;\n            _context4.t1 = _context4[\"catch\"](1);\n            console.warn(\"cancelationError---------\", _context4.t1);\n\n          case 21:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[1, 18], [5, 10]], Promise);\n  };\n\n  var scheduleRoutineReminder = function scheduleRoutineReminder(dates, week) {\n    var scheduledRoutineNotificationId, ids, weekAux, trigger, _iterator2, _step2, element;\n\n    return _regeneratorRuntime.async(function scheduleRoutineReminder$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            ids = [];\n            dates = dates.flat();\n            weekAux = parseInt(week);\n            handleLocalNotification();\n            trigger = new Date(Date.now() + 1 * 60 * 1000);\n            _iterator2 = _createForOfIteratorHelperLoose(dates);\n\n          case 6:\n            if ((_step2 = _iterator2()).done) {\n              _context5.next = 21;\n              break;\n            }\n\n            element = _step2.value;\n\n            if (!(dates.indexOf(element) >= activeDay || weekAux > activeWeek)) {\n              _context5.next = 19;\n              break;\n            }\n\n            _context5.prev = 9;\n            _context5.next = 12;\n            return _regeneratorRuntime.awrap(Notifications.scheduleNotificationAsync({\n              content: {\n                title: \"ALERTA: Rutina Pendiente\",\n                body: \"Esta recibiendo esta notificación porque tiene una rutina programada para dentro de una hora.\",\n                data: {\n                  data: \"goes here\"\n                }\n              },\n              trigger: element\n            }));\n\n          case 12:\n            scheduledRoutineNotificationId = _context5.sent;\n            ids.push(scheduledRoutineNotificationId);\n            _context5.next = 19;\n            break;\n\n          case 16:\n            _context5.prev = 16;\n            _context5.t0 = _context5[\"catch\"](9);\n            console.warn(\"schedulerError-----\", _context5.t0);\n\n          case 19:\n            _context5.next = 6;\n            break;\n\n          case 21:\n            console.warn(\"ids---------\", ids);\n            if (ids.length > 0) props.setNotificationId(ids.flat());\n\n          case 23:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[9, 16]], Promise);\n  };\n\n  var scheduleAllNotifications = function scheduleAllNotifications(dates) {\n    var newDates, allDates, nextWeek, active, i;\n    return _regeneratorRuntime.async(function scheduleAllNotifications$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            newDates = dates;\n            allDates = [];\n            nextWeek = parseInt(\"\" + (activeWeek + 1));\n            active = props.scheduledNotifications.length == 0 ? activeWeek : nextWeek;\n            console.warn(\"active Week in schedule all   ++++++++\", active, \"length of scheduled notifs ++++\", props.scheduledNotifications.length);\n\n            if (props.scheduledNotifications.length < 2) {\n              for (i = active; i <= 10; i++) {\n                newDates.forEach(function (element, index) {\n                  var newDate = new Date();\n                  newDate.setDate(element.getDate() + 7);\n                  newDates[index] = newDate;\n                });\n                allDates.push(newDates);\n              }\n\n              scheduleRoutineReminder(allDates, nextWeek);\n            }\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var exerciseListComponent = function exerciseListComponent(exerciseList) {\n    return exerciseList.map(function (exercise, index) {\n      var img = exercise.img;\n      var day = exercise.day;\n      var hour = \"\";\n      var dayId = \"day\" + index;\n      var hourId = \"hour\" + index;\n      var ampmId = \"ampm\" + index;\n      var active = exercise.active;\n\n      if (activeDay <= index) {\n        return React.createElement(View, {\n          key: index + \"e\",\n          style: {\n            height: vmin(45),\n            width: \"100%\",\n            marginBottom: \"3%\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: OverviewExerciseStyles.sectionRight,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: pickerStyles.containerInput,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontWeight: \"bold\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }\n        }, \"D\\xEDa \", index + 1), React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            width: \"90%\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"30%\",\n            marginBottom: \"3%\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            marginRight: \"3%\",\n            width: \"15%\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 19\n          }\n        }, \"D\\xEDa\"), React.createElement(View, {\n          style: pickerStyles.repetitionInputContainer,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 19\n          }\n        }, React.createElement(Picker, {\n          width: \"100%\",\n          height: 40,\n          placeholder: \"Seleccionar\",\n          setData: function setData(itemValue, itemIndex) {\n            props.scheduledRoutines[0].exerciseList[index].weekDay;\n            props.setWeekDay({\n              index: index,\n              weekDay: itemIndex\n            });\n            setValidObject(_objectSpread(_objectSpread({}, validObject), {}, _defineProperty({}, dayId, itemIndex)));\n            console.warn(\"picker on set====\", validObject[\"day\" + index]);\n          },\n          initialIndex: props.scheduledRoutines[0].exerciseList[index].weekDay,\n          list: [\"Seleccionar\", \"Domingo\", \"Lunes\", \"Martes\", \"Miercoles\", \"Jueves\", \"Viernes\", \"Sabado\"],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 21\n          }\n        }))), React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            width: \"90%\",\n            marginTop: \"5%\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"30%\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: {\n            marginRight: \"3%\",\n            width: \"15%\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 19\n          }\n        }, \"Hora\"), React.createElement(Picker, {\n          width: \"40%\",\n          height: 40,\n          placeholder: \"--\",\n          setData: function setData(itemValue, itemIndex) {\n            props.setHour({\n              index: index,\n              hour: itemValue\n            });\n            setValidObject(_objectSpread(_objectSpread({}, validObject), {}, _defineProperty({}, hourId, itemValue)));\n            console.warn(\"time----\", props.scheduledRoutines[0].exerciseList[index]);\n          },\n          initialValue: props.scheduledRoutines[0].exerciseList[index].hour,\n          list: [\"--\", \"00:00\", \"00:30\", \"01:00\", \"01:30\", \"02:00\", \"02:30\", \"03:00\", \"03:30\", \"04:00\", \"04:30\", \"05:00\", \"05:30\", \"06:00\", \"06:30\", \"07:00\", \"07:30\", \"08:00\", \"08:30\", \"09:00\", \"09:30\", \"10:00\", \"10:30\", \"11:00\", \"11:30\", \"12:00\", \"12:30\"],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 21\n          }\n        }), React.createElement(Picker, {\n          width: \"40%\",\n          height: 40,\n          placeholder: \"--\",\n          setData: function setData(itemValue, itemIndex) {\n            console.warn(\"setDat-----\", itemValue);\n            props.setAmPm({\n              index: index,\n              ampm: itemValue\n            });\n            setValidObject(_objectSpread(_objectSpread({}, validObject), {}, _defineProperty({}, ampmId, itemValue)));\n            console.warn(\"ampmn-=---\", validObject[\"ampm\" + index]);\n          },\n          initialValue: props.scheduledRoutines[0].exerciseList[index].ampm,\n          list: [\"--\", \"AM\", \"PM\"],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 21\n          }\n        })))));\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 5\n    }\n  }, console.log(\"props\", props), React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      height: \"30%\",\n      width: \"100%\",\n      marginBottom: \"2%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 1,\n    style: {\n      fontStyle: \"italic\",\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 11\n    }\n  }, \"Programar alarmas de las rutinas para la semana.\")), React.createElement(View, {\n    style: styles.rowContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.columnContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.toggleTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 13\n    }\n  }, \"Desactivar programaci\\xF3n\"), toggleDisableProgramming()), React.createElement(View, {\n    style: styles.columnContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.toggleTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 13\n    }\n  }, \"Mantener programaci\\xF3n\"), toggleKeepProgramming()))), React.createElement(ScrollView, {\n    style: styles.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }\n  }, props.scheduledRoutines.map(function (week, index) {\n    console.log(\"-------> \", index);\n    return React.createElement(View, {\n      key: \"id__\" + index,\n      style: {\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: \"bold\",\n        fontStyle: \"italic\",\n        marginTop: \"2%\",\n        marginBottom: \"2%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 15\n      }\n    }, \"Semana \", activeWeek), React.createElement(View, {\n      style: {\n        width: \"95%\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 15\n      }\n    }, exerciseListComponent(week.exerciseList)));\n  })), React.createElement(View, {\n    style: styles.footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      console.warn(\"validArray----\", validObject);\n\n      if (Object.values(validObject).includes(-1) || Object.values(validObject).includes(\"--\") || Object.values(validObject).includes(\"Seleccionar\")) {\n        printPendingNotifications();\n        console.log(\"alert\");\n        Alert.alert(\"Por favor seleccione todos los campos\");\n      } else {\n        cancelAllNotification(props.scheduledNotifications);\n        props.disableNotification(false);\n        props.persistNotification(false);\n        scheduleRoutineReminder(scheduleDates(props.scheduledRoutines[0].exerciseList), activeWeek);\n        props.navigation.navigate(\"ProfileScreen\");\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 11\n    }\n  }, \"Guardar\"))));\n};\n\nvar MapStateToProps = function MapStateToProps(store) {\n  console.warn(\"scheduledRoutines-----\", store.NotificationReducer);\n  return {\n    user: store.User.user,\n    activityControlNotificationId: store.NotificationReducer.activityControlNotificationId,\n    scheduledRoutines: store.NotificationReducer.scheduledRoutines,\n    scheduledNotifications: store.NotificationReducer.scheduledNotificationIds\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {\n    setUser: function setUser(val) {\n      return dispatch(actionsUser.SET_USER(val));\n    },\n    setActivityControlNotificationId: function setActivityControlNotificationId(val) {\n      return dispatch(actionsNotifications.NOTIFICATION_ACTIVITY_CONTROL(val));\n    },\n    setScheduledRoutines: function setScheduledRoutines(val) {\n      return dispatch(actionsNotifications.NOTIFICATION_SCHEDULED_ROUTINES(val));\n    },\n    setWeekDay: function setWeekDay(val) {\n      return dispatch(actionsNotifications.UPDATE_WEEK_DAY(val));\n    },\n    setHour: function setHour(val) {\n      return dispatch(actionsNotifications.UPDATE_TIME(val));\n    },\n    setAmPm: function setAmPm(val) {\n      return dispatch(actionsNotifications.UPDATE_AMPM(val));\n    },\n    setNotificationId: function setNotificationId(val) {\n      return dispatch(actionsNotifications.UPDATE_NOTIFICATION_ID(val));\n    },\n    clearNotificationIds: function clearNotificationIds(val) {\n      return dispatch(actionsNotifications.CLEAR_NOTIFICATION_ID(val));\n    },\n    disableNotification: function disableNotification(val) {\n      return dispatch(actionsNotifications.DISABLE_NOTIFICATIONS(val));\n    },\n    persistNotification: function persistNotification(val) {\n      return dispatch(actionsNotifications.PERSIST_NOTIFICATIONS(val));\n    }\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(ScheduleRoutines);\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"white\"\n  },\n  header: {\n    width: \"100%\",\n    height: \"13%\",\n    borderColor: \"rgba(21, 21, 34, 1)\",\n    borderBottomWidth: vmin(0.4),\n    alignItems: \"center\"\n  },\n  body: {\n    width: \"100%\",\n    height: \"75%\"\n  },\n  footer: {\n    width: \"100%\",\n    height: \"9%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button: {\n    backgroundColor: \"#6979F8\",\n    width: \"90%\",\n    height: \"90%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\"\n  },\n  rowContainer: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    backgroundColor: \"#f5f5f5\",\n    height: \"50%\"\n  },\n  columnContainer: {\n    width: \"50%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  toggleTitle: {\n    fontWeight: \"bold\",\n    fontSize: vmin(3)\n  }\n});\nvar OverviewExerciseStyles = StyleSheet.create({\n  container: {\n    width: vmin(24),\n    height: vmin(44),\n    marginRight: vmin(2)\n  },\n  containerTexts: {\n    width: \"100%\",\n    height: \"20%\"\n  },\n  title: {\n    fontSize: vmin(3),\n    fontWeight: \"bold\"\n  },\n  subtitle: {\n    fontSize: vmin(2.5),\n    color: \"#666666\"\n  },\n  imageContainer: {\n    overflow: \"hidden\",\n    width: \"100%\",\n    height: \"80%\",\n    borderRadius: 13,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.29,\n    shadowRadius: 4.65,\n    elevation: 7\n  },\n  sectionLeft: {\n    height: \"100%\",\n    width: \"30%\"\n  },\n  sectionRight: {\n    height: \"100%\",\n    alignItems: \"center\",\n    width: \"100%\"\n  }\n});\nvar pickerStyles = StyleSheet.create({\n  groupPickerContainer: {\n    height: \"35%\",\n    width: \"90%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    marginTop: vmin(1),\n    marginBottom: vmin(1)\n  },\n  timeContainer: {\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5,\n    height: \"100%\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    paddingTop: 6,\n    justifyContent: \"space-around\",\n    width: \"48%\"\n  },\n  textInput: {\n    width: \"100%\",\n    textAlign: \"center\"\n  },\n  containerInput: {\n    height: \"70%\",\n    width: \"100%\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  repetitionInputContainer: {\n    height: \"120%\",\n    width: \"80%\",\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderRadius: 5\n  }\n});\nvar KeepProgrammingStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/screens/ScheduleRoutines.tsx"],"names":["React","useState","useEffect","Picker","require","vmin","connect","actionsUser","actionsNotifications","ScrollView","Notifications","realDay","dayNumber","dayConverter","dayIndex","today","Date","setDate","getDate","getDay","timeConverter","time","ampm","splitTime","split","hour","parseInt","minute","date","setHours","setMinutes","scheduleDates","exerciseList","dates","forEach","exercise","day","weekDay","convertedDay","convertedTime","setFullYear","getFullYear","setMonth","getMonth","getHours","getMinutes","setSeconds","push","printPendingNotifications","getAllScheduledNotificationsAsync","then","notifications","console","warn","length","ScheduleRoutines","props","activeDay","user","information","control","activeWeek","replace","validObject","setValidObject","fillValidObject","validAux","scheduledRoutines","index","dayId","hourId","ampmId","filledSchedule","toggleKeepProgramming","persist","isEnabled","setIsEnabled","toggleSwitch","titulo","message","Object","values","includes","log","Alert","alert","text","onPress","previousState","disableNotification","persistNotification","promise","Promise","resolve","reject","scheduleAllNotifications","validIds","remove","scheduledNotifications","flat","keep","splice","myPromise","cancelAllNotification","setNotificationId","cancelable","KeepProgrammingStyles","container","false","true","toggleDisableProgramming","disable","scheduleRoutineReminder","handleLocalNotification","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","error","ids","element","cancelScheduledNotificationAsync","clearNotificationIds","week","weekAux","trigger","now","indexOf","scheduleNotificationAsync","content","title","body","data","scheduledRoutineNotificationId","newDates","allDates","nextWeek","active","i","newDate","exerciseListComponent","map","img","height","width","marginBottom","alignItems","justifyContent","OverviewExerciseStyles","sectionRight","pickerStyles","containerInput","fontWeight","flexDirection","marginRight","repetitionInputContainer","itemValue","itemIndex","setWeekDay","marginTop","setHour","setAmPm","styles","header","fontStyle","textAlign","rowContainer","columnContainer","toggleTitle","footer","button","navigation","navigate","color","MapStateToProps","store","NotificationReducer","User","activityControlNotificationId","scheduledNotificationIds","MapDispatchToProps","dispatch","setUser","val","SET_USER","setActivityControlNotificationId","NOTIFICATION_ACTIVITY_CONTROL","setScheduledRoutines","NOTIFICATION_SCHEDULED_ROUTINES","UPDATE_WEEK_DAY","UPDATE_TIME","UPDATE_AMPM","UPDATE_NOTIFICATION_ID","CLEAR_NOTIFICATION_ID","DISABLE_NOTIFICATIONS","PERSIST_NOTIFICATIONS","StyleSheet","create","backgroundColor","borderColor","borderBottomWidth","marginLeft","fontSize","containerTexts","subtitle","imageContainer","overflow","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","sectionLeft","groupPickerContainer","timeContainer","borderWidth","paddingTop","textInput","flex"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  Image,\r\n  Alert,\r\n  TouchableOpacity,\r\n  Switch,\r\n} from \"react-native\";\r\nimport yup from \"yup\";\r\nimport Picker from \"../Simple/Picker\";\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\n\r\n// redux\r\n\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\r\nimport { actionsNotifications } from \"../../redux/actions/actionsNotifications\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport * as Notifications from \"expo-notifications\";\r\nimport { date } from \"yup\";\r\n\r\nfunction realDay(dayNumber) {\r\n  switch (dayNumber) {\r\n    case 0:\r\n      return \"Domingo\";\r\n    case 1:\r\n      return \"Lunes\";\r\n    case 2:\r\n      return \"Martes\";\r\n    case 3:\r\n      return \"Miercoles\";\r\n    case 4:\r\n      return \"Jueves\";\r\n    case 5:\r\n      return \"Viernes\";\r\n    case 6:\r\n      return \"Sabado\";\r\n  }\r\n}\r\nfunction dayConverter(dayIndex) {\r\n  let today = new Date();\r\n  today.setDate(\r\n    today.getDate() + ((dayIndex - 1 - today.getDay() + 7) % 7) + 1\r\n  );\r\n  return today;\r\n}\r\nfunction timeConverter(time, ampm) {\r\n  let splitTime = time.split(\":\");\r\n  let hour = parseInt(splitTime[0]);\r\n  const minute = parseInt(splitTime[1]);\r\n  if (ampm == \"PM\") hour += 12;\r\n  var date = new Date();\r\n  date.setHours(hour - 1);\r\n  date.setMinutes(minute);\r\n  return date;\r\n}\r\nfunction scheduleDates(exerciseList) {\r\n  let dates = [];\r\n  exerciseList.forEach((exercise) => {\r\n    // if(){}\r\n    let day = exercise.weekDay;\r\n    let time = exercise.hour;\r\n    let ampm = exercise.ampm;\r\n    let convertedDay = dayConverter(day);\r\n    let convertedTime = timeConverter(time, ampm);\r\n    let date = new Date();\r\n    date.setFullYear(convertedDay.getFullYear());\r\n    date.setMonth(convertedDay.getMonth());\r\n    date.setDate(convertedDay.getDate());\r\n    date.setHours(convertedTime.getHours());\r\n    date.setMinutes(convertedTime.getMinutes());\r\n    date.setSeconds(0);\r\n    dates.push(date);\r\n  });\r\n  return dates;\r\n}\r\nconst printPendingNotifications = async () => {\r\n  await Notifications.getAllScheduledNotificationsAsync().then(\r\n    (notifications) => {\r\n      console.warn(\"Number of scheduled notifications =\", notifications.length);\r\n    }\r\n  );\r\n};\r\n\r\nconst ScheduleRoutines = (props) => {\r\n  let activeDay = props.user.information.control.activeDay;\r\n  let activeWeek = parseInt(\r\n    props.user.information.control.activeWeek.replace(/\\D/g, \"\")\r\n  );\r\n  const [validObject, setValidObject] = useState({});\r\n  const fillValidObject = () => {\r\n    let validAux = {};\r\n    props.scheduledRoutines[0].exerciseList.forEach((exercise, index) => {\r\n      if (activeDay <= index) {\r\n        let dayId = \"day\" + index;\r\n        let hourId = \"hour\" + index;\r\n        let ampmId = \"ampm\" + index;\r\n        validAux = {\r\n          ...validAux,\r\n          [dayId]: exercise.weekDay,\r\n          [hourId]: exercise.hour,\r\n          [ampmId]: exercise.ampm,\r\n        };\r\n      }\r\n    });\r\n    console.warn(\"valid----\", validAux)\r\n    return validAux;\r\n  };\r\n  let filledSchedule = fillValidObject();\r\n  useEffect(() => {\r\n    console.warn(\"use effect -----\")\r\n    setValidObject(filledSchedule);\r\n    console.warn(\"ampmnkeffect-=---\",validObject[\"ampm\" + 3])\r\n  }, []);\r\n  useEffect(()=>{},[validObject])\r\n  const toggleKeepProgramming = () => {\r\n    const [isEnabled, setIsEnabled] = useState(\r\n      props.scheduledRoutines[0].persist\r\n    );\r\n    const toggleSwitch = () => {\r\n      const titulo = !isEnabled ? \"Mantener Notifications\" : \"Deshabilitar\";\r\n      const message = !isEnabled\r\n        ? \"Sí acepta esta acción se van a programar todas las notificaciones de las semanas que faltan de su entrenamiento.\"\r\n        : \"Sí acepta esta acción se cancelan todas las notifiaciones y solo quedarán las que estan pendientes para la semana actual\";\r\n      if (\r\n        Object.values(validObject).includes(-1) ||\r\n        Object.values(validObject).includes(\"--\") ||\r\n        Object.values(validObject).includes(\"Seleccionar\")\r\n      ) {\r\n        printPendingNotifications();\r\n        console.log(\"alert\");\r\n        Alert.alert(\"Por favor seleccione todos los campos\");\r\n      } else {\r\n        Alert.alert(\r\n          titulo,\r\n          message,\r\n          [\r\n            {\r\n              text: \"Cancelar\",\r\n            },\r\n            {\r\n              text: \"Aceptar\",\r\n              onPress: () => {\r\n                setIsEnabled((previousState) => !previousState);\r\n                props.disableNotification(false);\r\n                if (!isEnabled) {\r\n                  props.persistNotification(true);\r\n                  const promise = new Promise((resolve, reject) => {\r\n                    resolve(\r\n                      scheduleAllNotifications(\r\n                        scheduleDates(props.scheduledRoutines[0].exerciseList)\r\n                      )\r\n                    );\r\n                  });\r\n                  promise.then(() => {\r\n                    console.warn(\" if promise then\");\r\n                    printPendingNotifications();\r\n                  });\r\n                } else {\r\n                  props.persistNotification(false);\r\n                  const validIds = 5 - activeDay;\r\n                  let remove = props.scheduledNotifications.flat();\r\n                  let keep = remove.splice(0, validIds);\r\n                  const myPromise = new Promise((resolve, reject) => {\r\n                    console.warn(\"remove \", remove, \" keep \", keep);\r\n                    resolve(cancelAllNotification(remove.flat()));\r\n                  });\r\n                  myPromise.then(() => {\r\n                    console.warn(\"else promise then\");\r\n                    printPendingNotifications();\r\n                    props.setNotificationId(keep.flat());\r\n                  });\r\n                }\r\n              },\r\n            },\r\n          ],\r\n          { cancelable: false }\r\n        );\r\n      }\r\n    };\r\n    return (\r\n      <View style={KeepProgrammingStyles.container}>\r\n        <Switch\r\n          trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n          thumbColor=\"#f4f3f4\" //{isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n          ios_backgroundColor=\"#3e3e3e\"\r\n          onValueChange={toggleSwitch}\r\n          value={props.scheduledRoutines[0].persist}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const toggleDisableProgramming = () => {\r\n    const [isEnabled, setIsEnabled] = useState(\r\n      props.scheduledRoutines[0].disable\r\n    );\r\n    const toggleSwitch = () => {\r\n      const titulo = !isEnabled\r\n        ? \"Deshabilitar Notifications\"\r\n        : \"Reactivar Notifications\";\r\n      const message = !isEnabled\r\n        ? \"Sí acepta esta acción se van a cancelar todas las notificaciones guardadas\"\r\n        : \"Sí acepta esta acción automáticamente se le programan las notificaciones pendientes de la semana\";\r\n      Alert.alert(\r\n        titulo,\r\n        message,\r\n        [\r\n          {\r\n            text: \"Cancelar\",\r\n          },\r\n          {\r\n            text: \"Aceptar\",\r\n            onPress: () => {\r\n              setIsEnabled((previousState) => !previousState);\r\n              props.persistNotification(false);\r\n              if (!isEnabled) {\r\n                props.disableNotification(true);\r\n                //console.warn(\"scheduled cancel---\", props.scheduledNotifications)\r\n                cancelAllNotification(props.scheduledNotifications.flat());\r\n              } else {\r\n                if (\r\n                  Object.values(validObject).includes(-1) ||\r\n                  Object.values(validObject).includes(\"--\") ||\r\n                  Object.values(validObject).includes(\"Seleccionar\")\r\n                ) {\r\n                  printPendingNotifications();\r\n                  console.log(\"alert\");\r\n                  Alert.alert(\"Por favor seleccione todos los campos\");\r\n                } else {\r\n                  props.disableNotification(false);\r\n                  scheduleRoutineReminder(\r\n                    scheduleDates(props.scheduledRoutines[0].exerciseList),\r\n                    activeWeek\r\n                  );\r\n                }\r\n              }\r\n              console.warn(\r\n                \"disable====\",\r\n                props.scheduledRoutines[0].disable,\r\n                \"///\",\r\n                isEnabled\r\n              );\r\n            },\r\n          },\r\n        ],\r\n        { cancelable: false }\r\n      );\r\n    };\r\n    return (\r\n      <View style={KeepProgrammingStyles.container}>\r\n        <Switch\r\n          trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n          thumbColor=\"#f4f3f4\" //{isEnabled ? \"#767577\" : \"#f4f3f4\"}\r\n          ios_backgroundColor=\"#3e3e3e\"\r\n          onValueChange={toggleSwitch}\r\n          value={props.scheduledRoutines[0].disable}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n  const handleLocalNotification = async () => {\r\n    try {\r\n      Notifications.setNotificationHandler({\r\n        handleNotification: async () => ({\r\n          shouldShowAlert: true,\r\n          shouldPlaySound: false,\r\n          shouldSetBadge: false,\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      console.warn(\"handler error ---\", error);\r\n    }\r\n  };\r\n  const cancelAllNotification = async (ids) => {\r\n    console.warn(\"cancel ids---------\", ids.flat());\r\n    try {\r\n      //await Notifications.cancelAllScheduledNotificationsAsync();\r\n      for await (let element of ids.flat()) {\r\n        //console.warn(\"element---------- \", element);\r\n        try {\r\n          await Notifications.cancelScheduledNotificationAsync(element);\r\n        } catch (error) {\r\n          console.warn(\"canceleerError-----\", error);\r\n        }\r\n      }\r\n      props.clearNotificationIds();\r\n      //console.warn(\"end cancelation\");\r\n    } catch (error) {\r\n      console.warn(\"cancelationError---------\", error);\r\n    }\r\n  };\r\n  const scheduleRoutineReminder = async (dates, week) => {\r\n    let scheduledRoutineNotificationId;\r\n    let ids: any = [];\r\n    dates = dates.flat();\r\n    let weekAux = parseInt(week);\r\n    //console.warn(\"schedule routine =======\", dates);\r\n    handleLocalNotification();\r\n    const trigger = new Date(Date.now() + 1 * 60 * 1000);\r\n    for await (let element of dates) {\r\n      if (dates.indexOf(element) >= activeDay || weekAux > activeWeek) {\r\n        try {\r\n          scheduledRoutineNotificationId =\r\n            await Notifications.scheduleNotificationAsync({\r\n              content: {\r\n                title: \"ALERTA: Rutina Pendiente\",\r\n                body: \"Esta recibiendo esta notificación porque tiene una rutina programada para dentro de una hora.\",\r\n                data: { data: \"goes here\" },\r\n              },\r\n              trigger: element,\r\n              //trigger,\r\n            });\r\n          ids.push(scheduledRoutineNotificationId);\r\n        } catch (error) {\r\n          console.warn(\"schedulerError-----\", error);\r\n        }\r\n      }\r\n    }\r\n    console.warn(\"ids---------\", ids);\r\n    if (ids.length > 0) props.setNotificationId(ids.flat());\r\n  };\r\n  const scheduleAllNotifications = async (dates) => {\r\n    let newDates = dates;\r\n    let allDates: any = [];\r\n    const nextWeek: number = parseInt(\"\" + (activeWeek + 1));\r\n    let active: number =\r\n      props.scheduledNotifications.length == 0 ? activeWeek : nextWeek;\r\n    console.warn(\r\n      \"active Week in schedule all   ++++++++\",\r\n      active,\r\n      \"length of scheduled notifs ++++\",\r\n      props.scheduledNotifications.length\r\n    );\r\n    if (props.scheduledNotifications.length < 2) {\r\n      for (let i = active; i <= 10; i++) {\r\n        newDates.forEach((element, index) => {\r\n          let newDate = new Date();\r\n          newDate.setDate(element.getDate() + 7);\r\n          newDates[index] = newDate;\r\n        });\r\n        //console.warn(\"dates array----\", newDates);\r\n        allDates.push(newDates);\r\n      }\r\n      scheduleRoutineReminder(allDates, nextWeek);\r\n    }\r\n  };\r\n\r\n  const exerciseListComponent = (exerciseList) => {\r\n    //setValidObject({...validObject, filledSchedule})\r\n    return exerciseList.map((exercise, index) => {\r\n      let img = exercise.img;\r\n      let day = exercise.day;\r\n      let hour = \"\";\r\n      let dayId = \"day\" + index;\r\n      let hourId = \"hour\" + index;\r\n      let ampmId = \"ampm\" + index;\r\n      let active = exercise.active;\r\n      if (activeDay <= index) {\r\n        return (\r\n          <View\r\n            key={index + \"e\"}\r\n            style={{\r\n              height: vmin(45),\r\n              width: \"100%\",\r\n              marginBottom: \"3%\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <View style={OverviewExerciseStyles.sectionRight}>\r\n              <View style={pickerStyles.containerInput}>\r\n                <Text\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  Día {index+1}\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    width: \"90%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"30%\",\r\n                    marginBottom:\"3%\",\r\n                  }}\r\n                >\r\n                  <Text style={{ marginRight: \"3%\", width:\"15%\" }}>Día</Text>\r\n                  <View style={pickerStyles.repetitionInputContainer}>\r\n                    <Picker\r\n                      width={\"100%\"}\r\n                      height={40}\r\n                      placeholder={\"Seleccionar\"}\r\n                      setData={(itemValue, itemIndex) => {\r\n                        props.scheduledRoutines[0].exerciseList[index].weekDay;\r\n                        props.setWeekDay({\r\n                          index: index,\r\n                          weekDay: itemIndex,\r\n                        });\r\n                        setValidObject({\r\n                          ...validObject,\r\n                          [dayId]: itemIndex,\r\n                        });\r\n                        console.warn(\"picker on set====\", validObject[\"day\" + index])\r\n                      }}\r\n                      initialIndex = {props.scheduledRoutines[0].exerciseList[index].weekDay}\r\n                      list={[\r\n                        \"Seleccionar\",\r\n                        \"Domingo\",\r\n                        \"Lunes\",\r\n                        \"Martes\",\r\n                        \"Miercoles\",\r\n                        \"Jueves\",\r\n                        \"Viernes\",\r\n                        \"Sabado\",\r\n                      ]}\r\n                    />\r\n                  </View>\r\n                </View>\r\n                <View\r\n                  style={{\r\n                    flexDirection: \"row\",\r\n                    width: \"90%\",\r\n                    marginTop:\"5%\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"30%\",\r\n                  }}\r\n                >\r\n                  <Text style={{ marginRight: \"3%\", width:\"15%\" }}>Hora</Text>\r\n                  {/* <View style={pickerStyles.repetitionInputContainer}> */}\r\n                    <Picker\r\n                      width={\"40%\"}\r\n                      height={40}\r\n                      placeholder={\"--\"}\r\n                      setData={(itemValue, itemIndex) => {\r\n                        props.setHour({ index: index, hour: itemValue });\r\n                        setValidObject({ ...validObject, [hourId]: itemValue });\r\n                        console.warn(\"time----\",props.scheduledRoutines[0].exerciseList[index])\r\n                        //validObject[\"hour\" + index] = itemIndex;\r\n                      }\r\n\r\n                      // setData({ ...data, size: itemValue })\r\n                      }\r\n                      initialValue= {props.scheduledRoutines[0].exerciseList[index].hour}\r\n                      list={[\r\n                        \"--\",\r\n                        \"00:00\",\r\n                        \"00:30\",\r\n                        \"01:00\",\r\n                        \"01:30\",\r\n                        \"02:00\",\r\n                        \"02:30\",\r\n                        \"03:00\",\r\n                        \"03:30\",\r\n                        \"04:00\",\r\n                        \"04:30\",\r\n                        \"05:00\",\r\n                        \"05:30\",\r\n                        \"06:00\",\r\n                        \"06:30\",\r\n                        \"07:00\",\r\n                        \"07:30\",\r\n                        \"08:00\",\r\n                        \"08:30\",\r\n                        \"09:00\",\r\n                        \"09:30\",\r\n                        \"10:00\",\r\n                        \"10:30\",\r\n                        \"11:00\",\r\n                        \"11:30\",\r\n                        \"12:00\",\r\n                        \"12:30\",\r\n                      ]}\r\n                    />\r\n                    <Picker\r\n                      width={\"40%\"}\r\n                      height={40}\r\n                      placeholder={\"--\"}\r\n                      setData={(itemValue, itemIndex) => {\r\n                        console.warn(\"setDat-----\", itemValue)\r\n                        props.setAmPm({ index: index, ampm: itemValue });\r\n                        setValidObject({ ...validObject, [ampmId]: itemValue });\r\n                        //validObject[\"ampm\" + index] = itemIndex;\r\n                      console.warn(\"ampmn-=---\",validObject[\"ampm\" + index])\r\n                      // setData({ ...data, weight: itemValue })\r\n                      }}\r\n                      initialValue={props.scheduledRoutines[0].exerciseList[index].ampm}\r\n                      list={[\"--\", \"AM\", \"PM\"]}\r\n                    />\r\n                  {/* </View> */}\r\n                </View>\r\n              </View>\r\n              \r\n            </View>\r\n          </View>\r\n        );\r\n      }\r\n      //{setValidObject({...validObject, validAux})}\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {console.log(\"props\", props)}\r\n      <View style={styles.header}>\r\n        <View style={{ height: \"30%\", width: \"100%\", marginBottom: \"2%\" }}>\r\n          <Text\r\n            numberOfLines={1}\r\n            style={{ fontStyle: \"italic\", textAlign: \"center\" }}\r\n          >\r\n            Programar alarmas de las rutinas para la semana.\r\n          </Text>\r\n        </View>\r\n        <View style={styles.rowContainer}>\r\n          <View style={styles.columnContainer}>\r\n            <Text style={styles.toggleTitle}>Desactivar programación</Text>\r\n            {toggleDisableProgramming()}\r\n          </View>\r\n          <View style={styles.columnContainer}>\r\n            <Text style={styles.toggleTitle}>Mantener programación</Text>\r\n            {toggleKeepProgramming()}\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      <ScrollView style={styles.body}>\r\n        {props.scheduledRoutines.map((week, index) => {\r\n          console.log(\"-------> \", index);\r\n          return (\r\n            <View\r\n              key={\"id__\" + index}\r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                // backgroundColor: \"peru\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  fontStyle: \"italic\",\r\n                  marginTop: \"2%\",\r\n                  marginBottom: \"2%\",\r\n                }}\r\n              >\r\n                Semana {activeWeek}\r\n              </Text>\r\n              <View\r\n                style={{\r\n                  width: \"95%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  //backgroundColor: \"peru\",\r\n                }}\r\n              >\r\n                {exerciseListComponent(week.exerciseList)}\r\n              </View>\r\n            </View>\r\n          );\r\n        })}\r\n      </ScrollView>\r\n\r\n      <View style={styles.footer}>\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={() => {\r\n            console.warn(\"validArray----\", validObject);\r\n            if (\r\n              Object.values(validObject).includes(-1) ||\r\n              Object.values(validObject).includes(\"--\") ||\r\n              Object.values(validObject).includes(\"Seleccionar\")\r\n            ) {\r\n              printPendingNotifications();\r\n              console.log(\"alert\");\r\n              Alert.alert(\"Por favor seleccione todos los campos\");\r\n            } else {\r\n              cancelAllNotification(props.scheduledNotifications);\r\n              props.disableNotification(false);\r\n              props.persistNotification(false);\r\n              scheduleRoutineReminder(\r\n                scheduleDates(props.scheduledRoutines[0].exerciseList),\r\n                activeWeek\r\n              );\r\n              props.navigation.navigate(\"ProfileScreen\");\r\n            }\r\n          }}\r\n        >\r\n          <Text style={{ color: \"white\" }}>Guardar</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  console.warn(\"scheduledRoutines-----\", store.NotificationReducer);\r\n  return {\r\n    user: store.User.user,\r\n    activityControlNotificationId:\r\n      store.NotificationReducer.activityControlNotificationId,\r\n    scheduledRoutines: store.NotificationReducer.scheduledRoutines,\r\n    scheduledNotifications: store.NotificationReducer.scheduledNotificationIds,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({\r\n  setUser: (val) => dispatch(actionsUser.SET_USER(val)),\r\n  setActivityControlNotificationId: (val) =>\r\n    dispatch(actionsNotifications.NOTIFICATION_ACTIVITY_CONTROL(val)),\r\n  setScheduledRoutines: (val) =>\r\n    dispatch(actionsNotifications.NOTIFICATION_SCHEDULED_ROUTINES(val)),\r\n  setWeekDay: (val) => dispatch(actionsNotifications.UPDATE_WEEK_DAY(val)),\r\n  setHour: (val) => dispatch(actionsNotifications.UPDATE_TIME(val)),\r\n  setAmPm: (val) => dispatch(actionsNotifications.UPDATE_AMPM(val)),\r\n  setNotificationId: (val) =>\r\n    dispatch(actionsNotifications.UPDATE_NOTIFICATION_ID(val)),\r\n  clearNotificationIds: (val) =>\r\n    dispatch(actionsNotifications.CLEAR_NOTIFICATION_ID(val)),\r\n  disableNotification: (val) =>\r\n    dispatch(actionsNotifications.DISABLE_NOTIFICATIONS(val)),\r\n  persistNotification: (val) =>\r\n    dispatch(actionsNotifications.PERSIST_NOTIFICATIONS(val)),\r\n});\r\nexport default connect(MapStateToProps, MapDispatchToProps)(ScheduleRoutines);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  header: {\r\n    width: \"100%\",\r\n    height: \"13%\",\r\n    //height: \"12%\",\r\n    //backgroundColor: \"orange\",\r\n    borderColor: \"rgba(21, 21, 34, 1)\",\r\n    borderBottomWidth: vmin(0.4),\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  body: {\r\n    width: \"100%\",\r\n    height: \"75%\",\r\n    //backgroundColor: \"peru\",\r\n  },\r\n\r\n  footer: {\r\n    width: \"100%\",\r\n    height: \"9%\",\r\n    //backgroundColor: \"salmon\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  button: {\r\n    backgroundColor: \"#6979F8\",\r\n    width: \"90%\",\r\n    height: \"90%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n  },\r\n\r\n  rowContainer: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    //height: \"70%\",\r\n    backgroundColor: \"#f5f5f5\",\r\n    height: \"50%\",\r\n  },\r\n\r\n  columnContainer: {\r\n    width: \"50%\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  toggleTitle: {\r\n    fontWeight: \"bold\",\r\n    //fontStyle: \"italic\",\r\n    fontSize: vmin(3),\r\n  },\r\n});\r\n\r\nconst OverviewExerciseStyles = StyleSheet.create({\r\n  container: {\r\n    width: vmin(24),\r\n    height: vmin(44),\r\n    // backgroundColor: \"yellow\",\r\n    marginRight: vmin(2),\r\n  },\r\n\r\n  containerTexts: {\r\n    width: \"100%\",\r\n    height: \"20%\",\r\n  },\r\n\r\n  title: {\r\n    fontSize: vmin(3),\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  subtitle: {\r\n    fontSize: vmin(2.5),\r\n    color: \"#666666\",\r\n  },\r\n\r\n  imageContainer: {\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n    height: \"80%\",\r\n    // backgroundColor: \"green\",\r\n    borderRadius: 13,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowOpacity: 0.29,\r\n    shadowRadius: 4.65,\r\n\r\n    elevation: 7,\r\n  },\r\n\r\n  sectionLeft: {\r\n    height: \"100%\",\r\n    width: \"30%\",\r\n  },\r\n\r\n  sectionRight: {\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    //   backgroundColor: \"salmon\",\r\n  },\r\n});\r\n\r\nconst pickerStyles = StyleSheet.create({\r\n  groupPickerContainer: {\r\n    height: \"35%\",\r\n    width: \"90%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    marginTop: vmin(1),\r\n    marginBottom: vmin(1),\r\n    //backgroundColor: \"green\",\r\n  },\r\n  timeContainer: {\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    height: \"100%\",\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n    paddingTop: 6,\r\n    justifyContent: \"space-around\",\r\n    // backgroundColor: \"tomato\",\r\n    width: \"48%\",\r\n  },\r\n  textInput: {\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n  containerInput: {\r\n    height: \"70%\",\r\n    width: \"100%\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    //backgroundColor: \"yellow\",\r\n  },\r\n  repetitionInputContainer: {\r\n    height: \"120%\",\r\n    width: \"80%\",\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    //  borderWidth: 1,\r\n    borderRadius: 5,\r\n    //   backgroundColor:\"blue\"\r\n  },\r\n});\r\n\r\nconst KeepProgrammingStyles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}