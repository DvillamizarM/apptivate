{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\companion\\\\PatientEvent.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\nimport firebase from \"../../../database/firebase\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Slider } from \"react-native-range-slider-expo\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nfunction PatientEvent(props) {\n  var _React$useState = React.useState({\n    eventType: \"\",\n    description: \"\",\n    eventTime: \"Seleccionar\",\n    degreeOfPain: \"Seleccionar\",\n    creationTime: new Date().getTime()\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      form = _React$useState2[0],\n      setForm = _React$useState2[1];\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      tokens = _useState2[0],\n      setTokens = _useState2[1];\n\n  var getReceiverTokens = function getReceiverTokens() {\n    var temp;\n    return _regeneratorRuntime.async(function getReceiverTokens$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            temp = [];\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"users\").where(\"personal.email\", \"in\", [props.user.information.companionEmail, props.user.information.physioEmail]).get().then(function (querySnapshot) {\n              querySnapshot.forEach(function (doc) {\n                temp.push(doc.data().token);\n              });\n              setTokens(_objectSpread(_objectSpread({}, tokens), {}, {\n                values: temp\n              }));\n            }).catch(function (error) {\n              console.log(\"Error getting documents: \", error);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function sendPushNotification(expoPushToken) {\n    var message;\n    return _regeneratorRuntime.async(function sendPushNotification$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            message = {\n              to: expoPushToken,\n              sound: \"default\",\n              title: \"Incidente Reportado \" + props.user.information.personal.name,\n              body: \"Grado de dolor:\" + form.degreeOfPain + \" reporto \" + form.description,\n              data: {\n                someData: \"goes here\"\n              }\n            };\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://exp.host/--/api/v2/push/send\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Accept-encoding\": \"gzip, deflate\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(message)\n            }));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var saveFormReportEvent = function saveFormReportEvent() {\n    var idRecord, res;\n    return _regeneratorRuntime.async(function saveFormReportEvent$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"el formulario quedo\", form, \"El id del usuario es :\", props.navigation.state.params.uid);\n            idRecord = \"\";\n\n            if (props.connection) {\n              _context3.next = 6;\n              break;\n            }\n\n            Alert.alert(\"Por favor escriba un comentario\");\n            _context3.next = 12;\n            break;\n\n          case 6:\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"ReportedEvents\").add(_objectSpread(_objectSpread({}, form), {}, {\n              userId: props.navigation.state.params.uid,\n              userName: props.user.information.personal.name,\n              userPhone: props.user.information.personal.phone\n            })));\n\n          case 8:\n            res = _context3.sent;\n            idRecord = res.id;\n            console.log(\"El id es \", idRecord);\n            props.navigation.navigate(\"Home\");\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateControl = function updateControl(idRecord) {\n    return _regeneratorRuntime.async(function updateControl$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getReceiverTokens();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1,\n      paddingBottom: 80\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \"Reportar alguna ocurrencia respecto a la rehabilitaci\\xF3n\")), React.createElement(View, {\n    style: styles.configurationContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.containerInput, {\n      height: \"20%\",\n      marginBottom: \"6%\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"Tipo de Evento\"), React.createElement(TextInput, {\n    style: [styles.repetitionInputContainer, {\n      height: \"80%\"\n    }],\n    multiline: true,\n    placeholder: \"Ingrese una descripcion detallada de lo que paso. Incluya lo que estaba haciendo cuando ocurri\\xF3 el evento.\",\n    onChangeText: function onChangeText(value) {\n      return setForm(_objectSpread(_objectSpread({}, form), {}, {\n        eventType: value\n      }));\n    },\n    value: form.eventType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: [styles.containerInput, {\n      height: \"20%\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, \"Descripci\\xF3n\"), React.createElement(TextInput, {\n    style: [styles.repetitionInputContainer, {\n      height: \"80%\"\n    }],\n    multiline: true,\n    placeholder: \"Ingrese una descripcion detallada de lo que paso. Incluya lo que estaba haciendo cuando ocurri\\xF3 el evento.\",\n    onChangeText: function onChangeText(value) {\n      return setForm(_objectSpread(_objectSpread({}, form), {}, {\n        description: value\n      }));\n    },\n    value: form.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.sliderInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, \"Tiempo de evento en d\\xEDas\"), React.createElement(View, {\n    style: styles.sliderContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, React.createElement(Slider, {\n    min: 1,\n    max: 100,\n    step: 1,\n    valueOnChange: function valueOnChange(value) {\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        eventTime: value.toString()\n      }));\n    },\n    initialValue: parseInt(form.eventTime),\n    knobColor: \"#6979F8\",\n    valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n    inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n    outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: styles.sliderInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, \"Grado de Dolor (S\\xED aplica)\"), React.createElement(View, {\n    style: styles.sliderContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, React.createElement(Slider, {\n    min: 1,\n    max: 10,\n    step: 1,\n    valueOnChange: function valueOnChange(value) {\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        degreeOfPain: value.toString()\n      }));\n    },\n    initialValue: parseInt(form.degreeOfPain),\n    knobColor: \"#6979F8\",\n    valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n    inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n    outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  })))), React.createElement(View, {\n    style: styles.containerButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      saveFormReportEvent().then(function () {\n        sendPushNotification(tokens.values[0]);\n        sendPushNotification(tokens.values[1]);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, \"Enviar Reporte\"))), React.createElement(View, {\n    style: {\n      height: \"20%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar MapStateToProps = function MapStateToProps(store) {\n  return {\n    connection: store.User.connection,\n    user: store.User.user\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {\n    updateUserControl: function updateUserControl(data) {\n      return dispatch(actionsUser.UPDATE_USER_CONTROL(data));\n    }\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(PatientEvent);\nvar styles = StyleSheet.create({\n  header: {\n    height: \"10%\",\n    width: \"90%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderBottomColor: \"#151522\",\n    borderBottomWidth: 1,\n    marginLeft: \"5%\",\n    marginRight: \"5%\"\n  },\n  textHeader: {\n    fontSize: vmin(4),\n    textAlign: \"center\"\n  },\n  container: {\n    backgroundColor: \"white\",\n    width: \"100%\",\n    minHeight: \"100%\",\n    height: \"100%\",\n    flex: 1\n  },\n  sliderInput: {\n    marginTop: \"5%\",\n    height: \"20%\",\n    justifyContent: \"space-evenly\",\n    width: \"90%\"\n  },\n  sliderContainer: {\n    height: vmin(16),\n    width: \"100%\",\n    marginLeft: \"2%\",\n    marginTop: \"8%\",\n    marginBottom: \"8%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  configurationContainer: {\n    width: \"100%\",\n    height: \"72%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  containerPercentajes: {\n    width: \"100%\",\n    height: \"20%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  containerInput: {\n    height: \"25%\",\n    width: \"100%\",\n    marginLeft: \"15%\",\n    marginRight: \"5%\",\n    marginBottom: \"3%\",\n    justifyContent: \"space-evenly\"\n  },\n  timeContainer: {\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5,\n    height: \"30%\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textInput: {\n    width: \"100%\"\n  },\n  containerButton: {\n    height: \"10%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: vmin(2)\n  },\n  button: {\n    backgroundColor: \"#6979F8\",\n    margin: vmin(2),\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  repetitionInputContainer: {\n    height: \"30%\",\n    width: \"90%\",\n    borderColor: \"rgba(25, 25, 25, 0.56)\",\n    borderBottomWidth: 1,\n    borderRadius: 5\n  },\n  timeInputContainer: {\n    height: \"50%\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1\n  },\n  groupPickerContainer: {\n    height: vmin(23),\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: vmin(1),\n    marginBottom: vmin(1)\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/companion/PatientEvent.tsx"],"names":["React","useState","useEffect","connect","actionsUser","firebase","Slider","require","vmin","PatientEvent","props","eventType","description","eventTime","degreeOfPain","creationTime","Date","getTime","form","setForm","tokens","setTokens","getReceiverTokens","temp","db","collection","where","user","information","companionEmail","physioEmail","get","then","querySnapshot","forEach","doc","push","data","token","values","catch","error","console","log","sendPushNotification","expoPushToken","message","to","sound","title","personal","name","body","someData","fetch","method","headers","Accept","JSON","stringify","saveFormReportEvent","navigation","state","params","uid","idRecord","connection","Alert","alert","add","userId","userName","userPhone","phone","res","id","navigate","updateControl","styles","container","flexGrow","paddingBottom","header","textHeader","configurationContainer","containerInput","height","marginBottom","fontWeight","repetitionInputContainer","value","sliderInput","sliderContainer","toString","parseInt","containerButton","button","color","MapStateToProps","store","User","MapDispatchToProps","dispatch","updateUserControl","UPDATE_USER_CONTROL","StyleSheet","create","width","justifyContent","alignItems","borderBottomColor","borderBottomWidth","marginLeft","marginRight","fontSize","textAlign","backgroundColor","minHeight","flex","marginTop","containerPercentajes","flexDirection","timeContainer","borderColor","borderWidth","borderRadius","textInput","padding","margin","timeInputContainer","input","groupPickerContainer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\r\nimport firebase from \"../../../database/firebase\";\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Picker,\r\n  Alert,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n} from \"react-native\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { Slider } from \"react-native-range-slider-expo\";\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\n\r\nfunction PatientEvent(props) {\r\n  //\r\n  const [form, setForm] = React.useState({\r\n    eventType: \"\",\r\n    description: \"\",\r\n    eventTime: \"Seleccionar\",\r\n    degreeOfPain: \"Seleccionar\",\r\n    creationTime: new Date().getTime(),\r\n  });\r\n  const [tokens, setTokens]: any = useState({});\r\n\r\n  const getReceiverTokens = async () => {\r\n    let temp: any = [];\r\n    await firebase.db\r\n      .collection(\"users\")\r\n      .where(\"personal.email\", \"in\", [\r\n        props.user.information.companionEmail,\r\n        props.user.information.physioEmail,\r\n      ])\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          temp.push(doc.data().token);\r\n        });\r\n        setTokens({ ...tokens, values: temp });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting documents: \", error);\r\n      });\r\n  };\r\n\r\n  async function sendPushNotification(expoPushToken) {\r\n    const message = {\r\n      to: expoPushToken,\r\n      sound: \"default\",\r\n      title: \"Incidente Reportado \" + props.user.information.personal.name,\r\n      body:\r\n        \"Grado de dolor:\" + form.degreeOfPain + \" reporto \" + form.description,\r\n      data: { someData: \"goes here\" },\r\n    };\r\n\r\n    await fetch(\"https://exp.host/--/api/v2/push/send\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Accept-encoding\": \"gzip, deflate\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(message),\r\n    });\r\n  }\r\n\r\n  const saveFormReportEvent = async () => {\r\n    console.log(\r\n      \"el formulario quedo\",\r\n      form,\r\n      \"El id del usuario es :\",\r\n      props.navigation.state.params.uid\r\n    );\r\n\r\n    let idRecord = \"\";\r\n\r\n    if (!props.connection) {\r\n      Alert.alert(\"Por favor escriba un comentario\");\r\n    } else {\r\n      let res = await firebase.db.collection(\"ReportedEvents\").add({\r\n        ...form,\r\n        userId: props.navigation.state.params.uid,\r\n        userName: props.user.information.personal.name,\r\n        userPhone: props.user.information.personal.phone,\r\n      });\r\n      idRecord = res.id;\r\n      console.log(\"El id es \", idRecord);\r\n      props.navigation.navigate(\"Home\");\r\n      // await updateControl(idRecord);\r\n    }\r\n  };\r\n\r\n  const updateControl = async (idRecord) => {\r\n    // let trainingPhase = props.user.information.control.trainingPhase;\r\n    // let activeWeek = props.user.information.control.activeWeek;\r\n    // let activeDay = props.user.information.control.activeDay;\r\n    // let old_record = props.user.information.control.record || [];\r\n    // console.log(\r\n    //   \"Los antiguos cambios son trainingPhase\",\r\n    //   trainingPhase, \" activeWeek ,\" ,\r\n    //   activeWeek, \"activeDay\" ,\r\n    //   activeDay,\r\n    //   old_record\r\n    // );\r\n    // // Inicial\",\"Intermedia\",\"Avanzada\"\r\n    // let new_trainingPhase = \"\";\r\n    // let new_activeWeek = \"\";\r\n    // let new_activeDay = 0;\r\n    // if (activeDay + 1 == 5) {\r\n    //   new_activeDay = 0;\r\n    //   new_activeWeek =\r\n    //     \"week\" + (parseInt(activeWeek.replace(\"week\", \"\"), 10)  -  (-1));\r\n    //   if (activeWeek == \"week11\") {\r\n    //     console.log(\"Finalizacion\");\r\n    //     new_trainingPhase = \"Finalizada\";\r\n    //   } else if (parseInt(activeWeek.replace(\"week\", \"\"), 10) <= 3) {\r\n    //     new_trainingPhase = \"Inicial\";\r\n    //   } else if (parseInt(activeWeek.replace(\"week\", \"\"), 10) <= 7) {\r\n    //     new_trainingPhase = \"Intermedia\";\r\n    //   } else {\r\n    //     new_trainingPhase = \"Avanzada\";\r\n    //   }\r\n    // } else {\r\n    //   new_activeDay = activeDay + 1;\r\n    //    new_trainingPhase = trainingPhase;\r\n    //    new_activeWeek =activeWeek;\r\n    // }\r\n    // const aux = old_record.push(idRecord)\r\n    // console.log(idRecord,\"Los nuevos cambios son\", {\r\n    //   trainingPhase: new_trainingPhase,\r\n    //   activeDay: new_activeDay,\r\n    //   activeWeek: new_activeWeek,\r\n    //   record: old_record,\r\n    // });\r\n    // await firebase.db\r\n    //   .collection(\"users\")\r\n    //   .doc(props.user.uid)\r\n    //   .update({\r\n    //     control: {\r\n    //       trainingPhase: new_trainingPhase,\r\n    //       activeDay: new_activeDay,\r\n    //       activeWeek: new_activeWeek,\r\n    //       record: old_record,\r\n    //     },\r\n    //   })\r\n    //   .then((e) => {\r\n    //     props.navigation.navigate(\"ProfileScreen\");\r\n    //   });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReceiverTokens();\r\n  }, []);\r\n\r\n  return (\r\n    \r\n      <View style={styles.container}>\r\n        <ScrollView\r\n      contentContainerStyle = {{ flexGrow: 1 , paddingBottom:80}}\r\n      \r\n    >\r\n        <View style={styles.header}>\r\n          <Text style={styles.textHeader}>\r\n            Reportar alguna ocurrencia respecto a la rehabilitación\r\n          </Text>\r\n        </View>\r\n        <View style={styles.configurationContainer}>\r\n          {/* input tipo de evento */}\r\n\r\n          <View\r\n            style={[\r\n              styles.containerInput,\r\n              { height: \"20%\", marginBottom: \"6%\" },\r\n            ]}\r\n          >\r\n            <Text style={{fontWeight:\"bold\"}}>Tipo de Evento</Text>\r\n            <TextInput\r\n              style={[styles.repetitionInputContainer, { height: \"80%\" }]}\r\n              multiline={true}\r\n              placeholder=\"Ingrese una descripcion detallada de lo que paso. Incluya lo que estaba haciendo cuando ocurrió el evento.\"\r\n              onChangeText={(value) => setForm({ ...form, eventType: value })}\r\n              value={form.eventType}\r\n            />\r\n          </View>\r\n\r\n          <View style={[styles.containerInput, { height: \"20%\" }]}>\r\n            <Text style={{fontWeight:\"bold\"}}>Descripción</Text>\r\n            <TextInput\r\n              style={[styles.repetitionInputContainer, { height: \"80%\" }]}\r\n              multiline={true}\r\n              placeholder=\"Ingrese una descripcion detallada de lo que paso. Incluya lo que estaba haciendo cuando ocurrió el evento.\"\r\n              onChangeText={(value) => setForm({ ...form, description: value })}\r\n              value={form.description}\r\n            />\r\n          </View>\r\n          <View style={styles.sliderInput}>\r\n            <Text style={{}}>Tiempo de evento en días</Text>\r\n            <View style={styles.sliderContainer}>\r\n              <Slider\r\n                min={1}\r\n                max={100}\r\n                step={1}\r\n                valueOnChange={(value) => {\r\n                  setForm({ ...form, eventTime: value.toString() })\r\n                }}\r\n                initialValue={parseInt(form.eventTime)}\r\n                knobColor=\"#6979F8\"\r\n                valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n                inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n                outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n              />\r\n            </View>\r\n            </View>          \r\n\r\n          <View style={styles.sliderInput}>\r\n            <Text style={{}}>Grado de Dolor (Sí aplica)</Text>\r\n            <View style={styles.sliderContainer}>\r\n              <Slider\r\n                min={1}\r\n                max={10}\r\n                step={1}\r\n                valueOnChange={(value) => {\r\n                  setForm({ ...form, degreeOfPain: value.toString() })\r\n                }}\r\n                initialValue={parseInt(form.degreeOfPain)}\r\n                knobColor=\"#6979F8\"\r\n                valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n                inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n                outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n              />\r\n            </View>\r\n            </View>\r\n          \r\n        </View>\r\n\r\n        <View style={styles.containerButton}>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {\r\n              saveFormReportEvent().then(() => {\r\n                sendPushNotification(tokens.values[0]);\r\n                sendPushNotification(tokens.values[1]);\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"white\" }}>Enviar Reporte</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      <View style={{ height: \"20%\" }}></View>\r\n    </ScrollView>\r\n      </View>\r\n  );\r\n}\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  return {\r\n    connection: store.User.connection,\r\n    user: store.User.user,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({\r\n  updateUserControl: (data) => dispatch(actionsUser.UPDATE_USER_CONTROL(data)),\r\n});\r\n\r\nexport default connect(MapStateToProps, MapDispatchToProps)(PatientEvent);\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    height: \"10%\",\r\n    width: \"90%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderBottomColor: \"#151522\",\r\n    borderBottomWidth: 1,\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n  },\r\n  textHeader: {\r\n    fontSize: vmin(4),\r\n    textAlign: \"center\",\r\n  },\r\n\r\n\r\n  container: {\r\n    backgroundColor: \"white\",\r\n    width: \"100%\",\r\n    minHeight: \"100%\",\r\n    height: \"100%\",\r\n    flex:1,\r\n  },\r\n  \r\n  sliderInput: {\r\n    marginTop:\"5%\",\r\n    height: \"20%\",\r\n    justifyContent: \"space-evenly\",\r\n    width: \"90%\",\r\n  },\r\n\r\n  sliderContainer: {\r\n    height: vmin(16),\r\n    width: \"100%\",\r\n    marginLeft: \"2%\",\r\n    marginTop: \"8%\",\r\n    marginBottom: \"8%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // backgroundColor: \"salmon\",\r\n  },\r\n\r\n  configurationContainer: {\r\n    // backgroundColor: \"peru\",\r\n    width: \"100%\",\r\n    height: \"72%\",\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  containerPercentajes: {\r\n    // backgroundColor: \"peru\",\r\n    width: \"100%\",\r\n    height: \"20%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  containerInput: {\r\n    height: \"25%\",\r\n    width: \"100%\",\r\n    // backgroundColor: \"tomato\",\r\n    marginLeft: \"15%\",\r\n    marginRight: \"5%\",\r\n    marginBottom: \"3%\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n\r\n  timeContainer: {\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    height: \"30%\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  textInput: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  containerButton: {\r\n    height: \"10%\",\r\n    width: \"100%\",\r\n    // backgroundColor: \"red\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: vmin(2),\r\n  },\r\n  button: {\r\n    backgroundColor: \"#6979F8\",\r\n    margin: vmin(2),\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  repetitionInputContainer: {\r\n    height: \"30%\",\r\n    width: \"90%\",\r\n    borderColor: \"rgba(25, 25, 25, 0.56)\",\r\n    borderBottomWidth: 1,\r\n    borderRadius: 5,\r\n  },\r\n\r\n  timeInputContainer: {\r\n    height: \"50%\",\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n  },\r\n\r\n  groupPickerContainer: {\r\n    height: vmin(23),\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    marginTop: vmin(1),\r\n    marginBottom: vmin(1),\r\n    // backgroundColor: \"green\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}