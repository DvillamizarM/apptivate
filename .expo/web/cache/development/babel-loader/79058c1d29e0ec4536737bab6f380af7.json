{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\Functional\\\\UpdateMedicalData.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nimport firebase from \"../../../database/firebase\";\nimport { Slider } from \"react-native-range-slider-expo\";\nimport RadioButton from \"expo-radio-button\";\nimport LightBulb from \"@expo/vector-icons/FontAwesome\";\nimport { connect } from \"react-redux\";\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\nimport ChargeScreen from \"../Simple/ChargeScreen\";\n\nvar UpdateMedicalData = function UpdateMedicalData(props) {\n  console.log(\"Las props que llegan son\", props);\n\n  var _useState = useState({\n    perceivedForce: \"\",\n    size: \"\",\n    weight: \"\",\n    age: \"\",\n    evolutionTime: \"\",\n    amputationLevel: \"\",\n    amputationPhase: \"\",\n    trainingPhase: \"\",\n    corporalMass: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      perceivedVal = _useState4[0],\n      setPerceivedVal = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      current = _useState6[0],\n      setCurrent = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      current1 = _useState8[0],\n      setCurrent1 = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      rehabPhase = _useState10[0],\n      setRehabPhase = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  useEffect(function () {\n    console.warn(\"Las props que llegan son\", props.user.information.medical);\n    setData(props.user.information.medical);\n    setCurrent(props.user.information.medical.amputationLevel);\n    setCurrent1(props.user.information.medical.amputationPhase);\n    setLoading(false);\n  }, []);\n\n  var saveMedicalData = function saveMedicalData() {\n    return _regeneratorRuntime.async(function saveMedicalData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"users\").doc(props.user.uid).update({\n              medical: {\n                perceivedForce: data.perceivedForce,\n                size: data.size,\n                weight: data.weight,\n                age: data.age,\n                evolutionTime: data.evolutionTime,\n                amputationLevel: data.amputationLevel,\n                amputationPhase: data.amputationPhase,\n                corporalMass: parseInt(data.weight) / Math.pow(parseInt(data.size), 2) * 100\n              }\n            }).then(function (e) {\n              props.setUserMedical({\n                medical: {\n                  perceivedForce: data.perceivedForce,\n                  size: data.size,\n                  weight: data.weight,\n                  age: data.age,\n                  evolutionTime: data.evolutionTime,\n                  amputationLevel: data.amputationLevel,\n                  amputationPhase: data.amputationPhase,\n                  corporalMass: parseInt(data.weight) / parseInt(data.size)\n                }\n              });\n              setLoading(false);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var arraySize = [data.size];\n\n  for (var index = 130; index < 250; index++) {\n    arraySize.push(index);\n  }\n\n  var arrayWeight = [data.weight];\n\n  for (var _index = 40; _index < 300; _index++) {\n    arrayWeight.push(_index);\n  }\n\n  var arrayAge = [data.age];\n\n  for (var _index2 = 14; _index2 < 100; _index2++) {\n    arrayAge.push(_index2);\n  }\n\n  if (loading) {\n    return React.createElement(View, {\n      style: {\n        justifyContent: \"center\",\n        marginTop: \"5%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, React.createElement(ChargeScreen, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }));\n  } else if (false) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: \"center\",\n        fontSize: vmin(8),\n        color: \"rgba(153, 153, 153, 1)\",\n        marginTop: \"50%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, \"Bajo construcci\\xF3n\"));\n  } else {\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: [updateMedicalDataStyles.containerMedicalData, {\n        marginBottom: \"30%\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: [updateMedicalDataStyles.containerInput, {\n        marginTop: \"3%\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: styles.sliderTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \"Estatura (CM)\"), React.createElement(View, {\n      style: styles.resultSlider,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, \"Valor: \", data.size))), React.createElement(View, {\n      style: styles.sliderContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, React.createElement(Slider, {\n      min: 120,\n      max: 250,\n      step: 1,\n      valueOnChange: function valueOnChange(value) {\n        setData(_objectSpread(_objectSpread({}, data), {}, {\n          size: value + \"\"\n        }));\n      },\n      initialValue: parseInt(data.size),\n      knobColor: \"#6979F8\",\n      valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n      inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n      outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }))), React.createElement(View, {\n      style: updateMedicalDataStyles.containerInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: styles.sliderTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, \"Peso (KG)\"), React.createElement(View, {\n      style: styles.resultSlider,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, \"Valor: \", data.weight))), React.createElement(View, {\n      style: styles.sliderContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, React.createElement(Slider, {\n      min: 20,\n      max: 300,\n      step: 1,\n      valueOnChange: function valueOnChange(value) {\n        setData(_objectSpread(_objectSpread({}, data), {}, {\n          weight: value + \"\"\n        }));\n      },\n      initialValue: parseInt(data.weight),\n      knobColor: \"#6979F8\",\n      valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n      inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n      outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }))), React.createElement(View, {\n      style: updateMedicalDataStyles.containerInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: styles.sliderTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, \"Edad\"), React.createElement(View, {\n      style: styles.resultSlider,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, \"Valor: \", data.age))), React.createElement(View, {\n      style: styles.sliderContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, React.createElement(Slider, {\n      min: 10,\n      max: 100,\n      step: 1,\n      valueOnChange: function valueOnChange(value) {\n        setData(_objectSpread(_objectSpread({}, data), {}, {\n          age: value + \"\"\n        }));\n      },\n      initialValue: parseInt(data.age),\n      knobColor: \"#6979F8\",\n      valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n      inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n      outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }))), React.createElement(View, {\n      style: updateMedicalDataStyles.containerInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: styles.sliderTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }, \"Tiempo con la lesi\\xF3n (Meses)\"), React.createElement(View, {\n      style: styles.resultSlider,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, \"Valor: \", data.evolutionTime))), React.createElement(View, {\n      style: styles.sliderContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, React.createElement(Slider, {\n      min: 1,\n      max: 100,\n      step: 1,\n      valueOnChange: function valueOnChange(value) {\n        setData(_objectSpread(_objectSpread({}, data), {}, {\n          evolutionTime: value + \"\"\n        }));\n      },\n      initialValue: parseInt(data.evolutionTime),\n      knobColor: \"#6979F8\",\n      valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n      inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n      outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }))), React.createElement(View, {\n      style: updateMedicalDataStyles.containerInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: [styles.sliderTitle, {\n        height: \"24%\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        borderColor: \"rgba(255, 231, 35,1)\",\n        paddingBottom: \"1%\",\n        borderBottomWidth: vmin(0.8),\n        height: \"100%\",\n        marginBottom: \"4%\",\n        width: \"55%\",\n        flexDirection: \"row\"\n      },\n      onPress: function onPress() {\n        Alert.alert(\"Esfuerzo Percibido\", \"Es una forma de clasificar la intensidad de las actividades físicas a través de las propias sensaciones que siente el individuo que realiza la actividad en cuestión. Para medir su esfuerzo percibido siéntese y levántese de una silla 10 veces y califique como se siente al finalizar. \");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, \"Esfuerzo Percibido\"), React.createElement(LightBulb, {\n      name: \"lightbulb-o\",\n      size: vmin(6),\n      color: \"rgba(255, 231, 35,1)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    })), React.createElement(View, {\n      style: styles.resultSlider,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, \"Valor: \", perceivedVal))), React.createElement(View, {\n      style: styles.sliderContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }\n    }, React.createElement(Slider, {\n      min: 1,\n      max: 5,\n      step: 1,\n      valueOnChange: function valueOnChange(value) {\n        var stirngVal = \"Liviano\";\n        setPerceivedVal(value);\n\n        switch (value) {\n          case 1:\n            stirngVal = \"Excesivamente Liviano\";\n            break;\n\n          case 2:\n            stirngVal = \"Liviano\";\n            break;\n\n          case 3:\n            stirngVal = \"Ni liviano ni pesado\";\n            break;\n\n          case 4:\n            stirngVal = \"Pesado\";\n            break;\n\n          case 5:\n            stirngVal = \"Excesivamente Pesado\";\n            break;\n\n          default:\n            stirngVal = \"Liviano\";\n            break;\n        }\n\n        setData(_objectSpread(_objectSpread({}, data), {}, {\n          perceivedForce: stirngVal\n        }));\n      },\n      initialValue: data.perceivedForce == \"Excesivamente Liviano\" ? 1 : data.perceivedForce == \"Liviano\" ? 2 : data.perceivedForce == \"Ni liviano ni pesado\" ? 3 : data.perceivedForce == \"Pesado\" ? 4 : 5,\n      knobColor: \"#6979F8\",\n      valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n      inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n      outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }))), React.createElement(View, {\n      style: [updateMedicalDataStyles.containerInput, {\n        height: \"18%\",\n        marginBottom: \"2%\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }\n    }, \"Nivel de Amputaci\\xF3n\"), React.createElement(View, {\n      style: styles.radioOptions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        width: \"30%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/images/transfemoral.png\"),\n      style: styles.imageContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }), React.createElement(RadioButton, {\n      value: \"Transfemoral\",\n      containerStyle: {\n        flexDirection: \"column-reverse\"\n      },\n      selected: current,\n      onSelected: function onSelected(value) {\n        setCurrent(value), setData(_objectSpread(_objectSpread({}, data), {}, {\n          amputationLevel: value\n        }));\n      },\n      radioBackground: \"#6979F8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 19\n      }\n    }, \"\\n\", \"Transfemoral\", \"\\n\"))), React.createElement(View, {\n      style: {\n        width: \"30%\",\n        flexDirection: \"column\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/images/desarticulacion.png\"),\n      style: styles.imageContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }\n    }), React.createElement(RadioButton, {\n      value: \"Desarticulaci\\xF3n de rodilla\",\n      containerStyle: {\n        flexDirection: \"column-reverse\"\n      },\n      selected: current,\n      onSelected: function onSelected(value) {\n        setCurrent(value), setData(_objectSpread(_objectSpread({}, data), {}, {\n          amputationLevel: value\n        }));\n      },\n      radioBackground: \"#6979F8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        flexWrap: \"wrap\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 19\n      }\n    }, \"Desarticulaci\\xF3n de rodilla\"))), React.createElement(View, {\n      style: {\n        width: \"30%\",\n        flexDirection: \"column\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/images/transtibial.png\"),\n      style: styles.imageContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }\n    }), React.createElement(RadioButton, {\n      value: \"Transtibial\",\n      containerStyle: {\n        flexDirection: \"column-reverse\"\n      },\n      selected: current,\n      onSelected: function onSelected(value) {\n        setCurrent(value), setData(_objectSpread(_objectSpread({}, data), {}, {\n          amputationLevel: value\n        }));\n      },\n      radioBackground: \"#6979F8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 19\n      }\n    }, \"\\n\", \"Transtibial \", \"\\n\"))))), React.createElement(View, {\n      style: [updateMedicalDataStyles.containerInput, {\n        height: \"14%\",\n        marginBottom: \"5%\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 13\n      }\n    }, \"Fase de rehabilitaci\\xF3n\"), React.createElement(View, {\n      style: styles.radioOptions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        width: \"30%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/images/desarticulacion.png\"),\n      style: styles.imageContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    }), React.createElement(RadioButton, {\n      value: \"Preprot\\xE9sico\",\n      containerStyle: {\n        flexDirection: \"column-reverse\"\n      },\n      selected: current1,\n      onSelected: function onSelected(value) {\n        setCurrent1(value), setData(_objectSpread(_objectSpread({}, data), {}, {\n          amputationPhase: value\n        }));\n      },\n      radioBackground: \"#6979F8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 19\n      }\n    }, \"Preprot\\xE9sico\"))), React.createElement(View, {\n      style: {\n        width: \"30%\",\n        flexDirection: \"column\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/images/protesis.png\"),\n      style: styles.imageContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }\n    }), React.createElement(RadioButton, {\n      value: \"Prot\\xE9sico\",\n      containerStyle: {\n        flexDirection: \"column-reverse\"\n      },\n      selected: current1,\n      onSelected: function onSelected(value) {\n        setCurrent1(value), setData(_objectSpread(_objectSpread({}, data), {}, {\n          amputationPhase: value\n        }));\n      },\n      radioBackground: \"#6979F8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        flexWrap: \"wrap\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 19\n      }\n    }, \"Prot\\xE9sico\"))))), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: [updateMedicalDataStyles.button],\n      onPress: function onPress() {\n        setLoading(true);\n        saveMedicalData();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"white\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 15\n      }\n    }, \"Actualizar Datos M\\xE9dicos\")))), React.createElement(View, {\n      style: {\n        height: 104\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nvar MapStateToProps = function MapStateToProps(store) {\n  console.log(\"mapstate patient register-----\", store.User.user);\n  return {\n    user: store.User.user\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {\n    setUser: function setUser(val) {\n      return dispatch(actionsUser.SET_USER(val));\n    },\n    setUserMedical: function setUserMedical(val) {\n      return dispatch(actionsUser.UPDATE_USER_MEDICAL(val));\n    },\n    setUserCompanion: function setUserCompanion(val) {\n      return dispatch(actionsUser.UPDATE_USER_COMPANION(val));\n    },\n    setUserRole: function setUserRole(val) {\n      return dispatch(actionsUser.UPDATE_USER_ROLE(val));\n    }\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(UpdateMedicalData);\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  imageContainer: {\n    width: \"100%\",\n    height: vmin(30),\n    resizeMode: \"contain\"\n  },\n  radioOptions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\"\n  },\n  sliderContainer: {\n    height: vmin(20),\n    width: \"100%\",\n    marginLeft: \"2%\",\n    marginTop: vmin(2),\n    marginBottom: \"8%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  containerInput: {\n    height: \"10%\",\n    width: \"90%\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    marginTop: vmin(1),\n    marginBottom: \"0%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  repetitionInputContainer: {\n    height: \"30%\",\n    width: \"100%\",\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  resultSlider: {\n    width: \"30%\",\n    height: \"100%\",\n    backgroundColor: \"rgba(105, 121, 248, 0.5)\",\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  sliderTitle: {\n    height: \"15%\",\n    width: \"90%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  }\n});\nvar updateMedicalDataStyles = StyleSheet.create({\n  screenContainer: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"white\"\n  },\n  containerSteps: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    height: \"12%\",\n    justifyContent: \"center\"\n  },\n  containerCard: {\n    height: \"100%\",\n    width: \"100%\"\n  },\n  containerMedicalData: {\n    height: \"100%\"\n  },\n  rowText_button: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: vmin(1)\n  },\n  containerInput: {\n    height: \"10%\",\n    width: \"90%\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    marginTop: vmin(1),\n    marginBottom: \"0%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  input: {\n    height: \"60%\",\n    width: \"100%\",\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  containerList: {\n    width: \"90%\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    marginTop: vmin(1),\n    marginBottom: vmin(1),\n    justifyContent: \"space-evenly\"\n  },\n  timeContainer: {\n    height: vmin(14),\n    width: \"90%\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    marginTop: vmin(1),\n    marginBottom: vmin(1),\n    justifyContent: \"space-evenly\"\n  },\n  textInput: {\n    width: \"100%\",\n    textAlign: \"center\"\n  },\n  containerButton: {\n    height: \"10%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: vmin(2)\n  },\n  button: {\n    backgroundColor: \"#6979F8\",\n    width: \"90%\",\n    height: \"18%\",\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    marginBottom: \"10%\"\n  },\n  repetitionInputContainer: {\n    height: \"50%\",\n    width: \"100%\",\n    marginTop: \"2%\",\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  groupPickerContainer: {\n    height: vmin(16),\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: vmin(1),\n    marginBottom: vmin(1)\n  },\n  listItemsContainer: {\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5,\n    marginLeft: \"5%\",\n    marginRight: \"15%\",\n    width: \"80%\"\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/Functional/UpdateMedicalData.tsx"],"names":["React","useState","useEffect","require","vmin","firebase","Slider","RadioButton","LightBulb","connect","actionsUser","ChargeScreen","UpdateMedicalData","props","console","log","perceivedForce","size","weight","age","evolutionTime","amputationLevel","amputationPhase","trainingPhase","corporalMass","data","setData","perceivedVal","setPerceivedVal","current","setCurrent","current1","setCurrent1","rehabPhase","setRehabPhase","loading","setLoading","warn","user","information","medical","saveMedicalData","db","collection","doc","uid","update","parseInt","Math","pow","then","e","setUserMedical","arraySize","index","push","arrayWeight","arrayAge","justifyContent","marginTop","styles","container","textAlign","fontSize","color","flex","updateMedicalDataStyles","containerMedicalData","marginBottom","containerInput","sliderTitle","resultSlider","sliderContainer","value","height","borderColor","paddingBottom","borderBottomWidth","width","flexDirection","Alert","alert","stirngVal","radioOptions","imageContainer","flexWrap","button","MapStateToProps","store","User","MapDispatchToProps","dispatch","setUser","val","SET_USER","UPDATE_USER_MEDICAL","setUserCompanion","UPDATE_USER_COMPANION","setUserRole","UPDATE_USER_ROLE","StyleSheet","create","resizeMode","marginLeft","alignItems","marginRight","repetitionInputContainer","borderWidth","borderRadius","backgroundColor","screenContainer","containerSteps","containerCard","rowText_button","input","containerList","timeContainer","textInput","containerButton","padding","groupPickerContainer","listItemsContainer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  ScrollView,\r\n  Image,\r\n  Alert,\r\n} from \"react-native\";\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\nimport firebase from \"../../../database/firebase\";\r\nimport { Slider } from \"react-native-range-slider-expo\";\r\nimport StepIndicator from \"react-native-step-indicator\";\r\nimport RadioButton from \"expo-radio-button\";\r\nimport Picker from \"../Simple/Picker\";\r\nimport Add from \"react-native-vector-icons/Ionicons\";\r\n\r\nimport Arrow from \"react-native-vector-icons/MaterialIcons\";\r\n\r\nimport Check from \"react-native-vector-icons/EvilIcons\";\r\nimport LightBulb from \"react-native-vector-icons/FontAwesome\";\r\n\r\n// redux\r\n\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\r\nimport ChargeScreen from \"../Simple/ChargeScreen\";\r\n\r\nconst UpdateMedicalData = (props) => {\r\n  console.log(\"Las props que llegan son\", props);\r\n  const [data, setData] = useState({\r\n    perceivedForce: \"\",\r\n    size: \"\",\r\n    weight: \"\",\r\n    age: \"\",\r\n    evolutionTime: \"\",\r\n    amputationLevel: \"\",\r\n    amputationPhase: \"\",\r\n    trainingPhase: \"\",\r\n    corporalMass: 0,\r\n  });\r\n\r\n  const [perceivedVal, setPerceivedVal] = useState(0);\r\n  const [current, setCurrent] = useState(\"\");\r\n  const [current1, setCurrent1] = useState(\"\");\r\n  const [rehabPhase, setRehabPhase] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.warn(\"Las props que llegan son\", props.user.information.medical);\r\n    setData(props.user.information.medical);\r\n    setCurrent(props.user.information.medical.amputationLevel);\r\n    setCurrent1(props.user.information.medical.amputationPhase);\r\n    setLoading(false);\r\n    // firebase.db\r\n    //   .collection(\"users\")\r\n    //   .doc(props.user.uid)\r\n    //   .get()\r\n    //   .then((user_db: any) => {\r\n    //     setData({ ...user_db.data().medical });\r\n    //     setCurrent(user_db.data().medical.amputationLevel);\r\n    //     setCurrent1(user_db.data().medical.amputationPhase);\r\n    //     setRehabPhase(user_db.data().control.trainingPhase)\r\n    //     console.warn(\"asdfasdfasdfasdfasdfasdfasdf\", user_db.data().control.trainingPhase);\r\n    //     setLoading(false);\r\n    //   })\r\n    //   .catch((e) => {\r\n    //     console.log(\"El error es \", e);\r\n    //   });\r\n  }, []);\r\n\r\n  const saveMedicalData = async () => {\r\n    await firebase.db\r\n      .collection(\"users\")\r\n      .doc(props.user.uid)\r\n      .update({\r\n        medical: {\r\n          perceivedForce: data.perceivedForce,\r\n          size: data.size,\r\n          weight: data.weight,\r\n          age: data.age,\r\n          evolutionTime: data.evolutionTime,\r\n          amputationLevel: data.amputationLevel,\r\n          amputationPhase: data.amputationPhase,\r\n          corporalMass:\r\n            (parseInt(data.weight) / Math.pow(parseInt(data.size), 2)) * 100,\r\n        },\r\n        // \"Inicial\",\"Intermedia\",\"Avanzada\"\r\n      })\r\n      .then((e) => {\r\n        props.setUserMedical({\r\n          medical: {\r\n            perceivedForce: data.perceivedForce,\r\n            size: data.size,\r\n            weight: data.weight,\r\n            age: data.age,\r\n            evolutionTime: data.evolutionTime,\r\n            amputationLevel: data.amputationLevel,\r\n            amputationPhase: data.amputationPhase,\r\n            corporalMass: parseInt(data.weight) / parseInt(data.size),\r\n          },\r\n        });\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  let arraySize: any[] = [data.size];\r\n  for (let index = 130; index < 250; index++) {\r\n    arraySize.push(index);\r\n  }\r\n\r\n  let arrayWeight: any[] = [data.weight];\r\n  for (let index = 40; index < 300; index++) {\r\n    arrayWeight.push(index);\r\n  }\r\n\r\n  let arrayAge: any[] = [data.age];\r\n  for (let index = 14; index < 100; index++) {\r\n    arrayAge.push(index);\r\n  }\r\n  if (loading) {\r\n    return (\r\n      <View style={{ justifyContent: \"center\", marginTop: \"5%\" }}>\r\n        <ChargeScreen />\r\n      </View>\r\n    );\r\n  } else if (false) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontSize: vmin(8),\r\n            color: \"rgba(153, 153, 153, 1)\",\r\n            marginTop: \"50%\",\r\n          }}\r\n        >\r\n          Bajo construcción\r\n        </Text>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <View\r\n          style={[\r\n            updateMedicalDataStyles.containerMedicalData,\r\n            { marginBottom: \"30%\" },\r\n          ]}\r\n        >\r\n          <View\r\n            style={[\r\n              updateMedicalDataStyles.containerInput,\r\n              { marginTop: \"3%\" },\r\n            ]}\r\n          >\r\n            <View style={styles.sliderTitle}>\r\n              <Text style={{}}>Estatura (CM)</Text>\r\n              <View style={styles.resultSlider}>\r\n                <Text style={{}}>Valor: {data.size}</Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.sliderContainer}>\r\n              <Slider\r\n                min={120}\r\n                max={250}\r\n                step={1}\r\n                valueOnChange={(value) => {\r\n                  setData({ ...data, size: value + \"\" });\r\n                }}\r\n                initialValue={parseInt(data.size)}\r\n                knobColor=\"#6979F8\"\r\n                valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n                inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n                outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n              />\r\n            </View>\r\n          </View>\r\n\r\n          <View style={updateMedicalDataStyles.containerInput}>\r\n            <View style={styles.sliderTitle}>\r\n              <Text style={{}}>Peso (KG)</Text>\r\n              <View style={styles.resultSlider}>\r\n                <Text style={{}}>Valor: {data.weight}</Text>\r\n              </View>\r\n            </View>\r\n            <View style={styles.sliderContainer}>\r\n              <Slider\r\n                min={20}\r\n                max={300}\r\n                step={1}\r\n                valueOnChange={(value) => {\r\n                  setData({ ...data, weight: value + \"\" });\r\n                }}\r\n                initialValue={parseInt(data.weight)}\r\n                knobColor=\"#6979F8\"\r\n                valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n                inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n                outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n              />\r\n            </View>\r\n          </View>\r\n\r\n          <View style={updateMedicalDataStyles.containerInput}>\r\n            <View style={styles.sliderTitle}>\r\n              <Text style={{}}>Edad</Text>\r\n              <View style={styles.resultSlider}>\r\n                <Text style={{}}>Valor: {data.age}</Text>\r\n              </View>\r\n            </View>\r\n            <View style={styles.sliderContainer}>\r\n              <Slider\r\n                min={10}\r\n                max={100}\r\n                step={1}\r\n                valueOnChange={(value) => {\r\n                  setData({ ...data, age: value + \"\" });\r\n                }}\r\n                initialValue={parseInt(data.age)}\r\n                knobColor=\"#6979F8\"\r\n                valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n                inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n                outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n              />\r\n            </View>\r\n          </View>\r\n\r\n          <View style={updateMedicalDataStyles.containerInput}>\r\n            <View style={styles.sliderTitle}>\r\n              <Text style={{}}>Tiempo con la lesión (Meses)</Text>\r\n              <View style={styles.resultSlider}>\r\n                <Text style={{}}>Valor: {data.evolutionTime}</Text>\r\n              </View>\r\n            </View>\r\n            <View style={styles.sliderContainer}>\r\n              <Slider\r\n                min={1}\r\n                max={100}\r\n                step={1}\r\n                valueOnChange={(value) => {\r\n                  setData({ ...data, evolutionTime: value + \"\" });\r\n                }}\r\n                initialValue={parseInt(data.evolutionTime)}\r\n                knobColor=\"#6979F8\"\r\n                valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n                inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n                outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={updateMedicalDataStyles.containerInput}>\r\n            <View style={[styles.sliderTitle, { height: \"24%\" }]}>\r\n              <TouchableOpacity\r\n                style={{\r\n                  borderColor: \"rgba(255, 231, 35,1)\",\r\n                  paddingBottom: \"1%\",\r\n                  borderBottomWidth: vmin(0.8),\r\n                  height: \"100%\",\r\n                  marginBottom: \"4%\",\r\n                  width: \"55%\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n                onPress={() => {\r\n                  Alert.alert(\r\n                    \"Esfuerzo Percibido\",\r\n                    \"Es una forma de clasificar la intensidad de las actividades físicas a través de las propias sensaciones que siente el individuo que realiza la actividad en cuestión. Para medir su esfuerzo percibido siéntese y levántese de una silla 10 veces y califique como se siente al finalizar. \"\r\n                  );\r\n                }}\r\n              >\r\n                <Text style={{}}>Esfuerzo Percibido</Text>\r\n\r\n                <LightBulb\r\n                  name=\"lightbulb-o\"\r\n                  size={vmin(6)}\r\n                  color=\"rgba(255, 231, 35,1)\"\r\n                />\r\n                {/* <FontAwesomeIcon icon=\"fa-solid fa-lightbulb\" /> */}\r\n              </TouchableOpacity>\r\n              <View style={styles.resultSlider}>\r\n                <Text style={{}}>Valor: {perceivedVal}</Text>\r\n              </View>\r\n            </View>\r\n            <View style={styles.sliderContainer}>\r\n              <Slider\r\n                min={1}\r\n                max={5}\r\n                step={1}\r\n                valueOnChange={(value) => {\r\n                  let stirngVal = \"Liviano\";\r\n                  setPerceivedVal(value);\r\n                  switch (value) {\r\n                    case 1:\r\n                      stirngVal = \"Excesivamente Liviano\";\r\n                      break;\r\n                    case 2:\r\n                      stirngVal = \"Liviano\";\r\n                      break;\r\n                    case 3:\r\n                      stirngVal = \"Ni liviano ni pesado\";\r\n                      break;\r\n                    case 4:\r\n                      stirngVal = \"Pesado\";\r\n                      break;\r\n                    case 5:\r\n                      stirngVal = \"Excesivamente Pesado\";\r\n                      break;\r\n                    default:\r\n                      stirngVal = \"Liviano\";\r\n                      break;\r\n                  }\r\n                  setData({ ...data, perceivedForce: stirngVal });\r\n                }}\r\n                initialValue={\r\n                  data.perceivedForce == \"Excesivamente Liviano\"\r\n                    ? 1\r\n                    : data.perceivedForce == \"Liviano\"\r\n                    ? 2\r\n                    : data.perceivedForce == \"Ni liviano ni pesado\"\r\n                    ? 3\r\n                    : data.perceivedForce == \"Pesado\"\r\n                    ? 4\r\n                    : 5\r\n                }\r\n                knobColor=\"#6979F8\"\r\n                valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n                inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n                outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n              />\r\n            </View>\r\n          </View>\r\n          <View\r\n            style={[\r\n              updateMedicalDataStyles.containerInput,\r\n              { height: \"18%\", marginBottom: \"2%\" },\r\n            ]}\r\n          >\r\n            <Text style={{}}>Nivel de Amputación</Text>\r\n\r\n            <View style={styles.radioOptions}>\r\n              <View style={{ width: \"30%\" }}>\r\n                <Image\r\n                  source={require(\"../../assets/images/transfemoral.png\")}\r\n                  style={styles.imageContainer}\r\n                />\r\n                <RadioButton\r\n                  value=\"Transfemoral\"\r\n                  containerStyle={{ flexDirection: \"column-reverse\" }}\r\n                  selected={current}\r\n                  onSelected={(value) => {\r\n                    setCurrent(value),\r\n                      setData({ ...data, amputationLevel: value });\r\n                  }}\r\n                  radioBackground=\"#6979F8\"\r\n                >\r\n                  <Text style={{ textAlign: \"center\" }}>\r\n                    {\"\\n\"}Transfemoral{\"\\n\"}\r\n                  </Text>\r\n                </RadioButton>\r\n              </View>\r\n              <View style={{ width: \"30%\", flexDirection: \"column\" }}>\r\n                <Image\r\n                  source={require(\"../../assets/images/desarticulacion.png\")}\r\n                  style={styles.imageContainer}\r\n                />\r\n                <RadioButton\r\n                  value=\"Desarticulación de rodilla\"\r\n                  containerStyle={{ flexDirection: \"column-reverse\" }}\r\n                  selected={current}\r\n                  onSelected={(value) => {\r\n                    setCurrent(value),\r\n                      setData({ ...data, amputationLevel: value });\r\n                  }}\r\n                  radioBackground=\"#6979F8\"\r\n                >\r\n                  <Text style={{ flexWrap: \"wrap\", textAlign: \"center\" }}>\r\n                    Desarticulación de rodilla\r\n                  </Text>\r\n                </RadioButton>\r\n              </View>\r\n              <View style={{ width: \"30%\", flexDirection: \"column\" }}>\r\n                <Image\r\n                  source={require(\"../../assets/images/transtibial.png\")}\r\n                  style={styles.imageContainer}\r\n                />\r\n                <RadioButton\r\n                  value=\"Transtibial\"\r\n                  containerStyle={{ flexDirection: \"column-reverse\" }}\r\n                  selected={current}\r\n                  onSelected={(value) => {\r\n                    setCurrent(value),\r\n                      setData({ ...data, amputationLevel: value });\r\n                  }}\r\n                  radioBackground=\"#6979F8\"\r\n                >\r\n                  <Text style={{ textAlign: \"center\" }}>\r\n                    {\"\\n\"}Transtibial {\"\\n\"}\r\n                  </Text>\r\n                </RadioButton>\r\n              </View>\r\n            </View>\r\n          </View>\r\n\r\n          <View\r\n            style={[\r\n              updateMedicalDataStyles.containerInput,\r\n              { height: \"14%\", marginBottom: \"5%\" },\r\n            ]}\r\n          >\r\n            <Text style={{}}>Fase de rehabilitación</Text>\r\n            <View style={styles.radioOptions}>\r\n              <View style={{ width: \"30%\" }}>\r\n                <Image\r\n                  source={require(\"../../assets/images/desarticulacion.png\")}\r\n                  style={styles.imageContainer}\r\n                />\r\n                <RadioButton\r\n                  value=\"Preprotésico\"\r\n                  containerStyle={{ flexDirection: \"column-reverse\" }}\r\n                  selected={current1}\r\n                  onSelected={(value) => {\r\n                    setCurrent1(value),\r\n                      setData({ ...data, amputationPhase: value });\r\n                  }}\r\n                  radioBackground=\"#6979F8\"\r\n                >\r\n                  <Text style={{ textAlign: \"center\" }}>Preprotésico</Text>\r\n                </RadioButton>\r\n              </View>\r\n              <View style={{ width: \"30%\", flexDirection: \"column\" }}>\r\n                <Image\r\n                  source={require(\"../../assets/images/protesis.png\")}\r\n                  style={styles.imageContainer}\r\n                />\r\n                <RadioButton\r\n                  value=\"Protésico\"\r\n                  containerStyle={{ flexDirection: \"column-reverse\" }}\r\n                  selected={current1}\r\n                  onSelected={(value) => {\r\n                    setCurrent1(value),\r\n                      setData({ ...data, amputationPhase: value });\r\n                  }}\r\n                  radioBackground=\"#6979F8\"\r\n                >\r\n                  <Text style={{ flexWrap: \"wrap\", textAlign: \"center\" }}>\r\n                    Protésico\r\n                  </Text>\r\n                </RadioButton>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          {/* <View\r\n            style={[\r\n              styles.containerInput,\r\n              { height: \"8%\", alignItems: \"flex-start\" },\r\n            ]}\r\n          >\r\n            <Text style={{ fontSize: vmin(4), fontWeight: \"bold\" }}>\r\n              Etapa de Rehabilitación\r\n            </Text>\r\n            <View style={[styles.repetitionInputContainer, { borderWidth: 0 }]}>\r\n              <Picker\r\n                width={\"100%\"}\r\n                height={40}\r\n                placeholder={\"Seleccionar\"}\r\n                setData={(itemValue, itemIndex) =>{console.warn(\"in set data---\", itemValue )\r\n                  setData({ ...data, trainingPhase: itemValue }) }\r\n                }\r\n                initialValue={props.user.information.control.trainingPhase ? props.user.information.control.trainingPhase : \"Seleccionar\"}\r\n                list={[\"Seleccionar\", \"Inicial\", \"Intermedia\", \"Avanzada\"]}\r\n              />\r\n            </View>\r\n          </View> */}\r\n          <View\r\n          // style={{ height: \"12%\", width: \"100%\", marginBottom: \"100%\" }}\r\n          >\r\n            <TouchableOpacity\r\n              style={[updateMedicalDataStyles.button]}\r\n              onPress={() => {\r\n                setLoading(true);\r\n                saveMedicalData();\r\n              }}\r\n            >\r\n              <Text style={{ color: \"white\" }}>Actualizar Datos Médicos</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        <View style={{ height: 104 }} />\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  console.log(\"mapstate patient register-----\", store.User.user);\r\n  return {\r\n    user: store.User.user,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({\r\n  setUser: (val) => dispatch(actionsUser.SET_USER(val)),\r\n  setUserMedical: (val) => dispatch(actionsUser.UPDATE_USER_MEDICAL(val)),\r\n  setUserCompanion: (val) => dispatch(actionsUser.UPDATE_USER_COMPANION(val)),\r\n  setUserRole: (val) => dispatch(actionsUser.UPDATE_USER_ROLE(val)),\r\n});\r\nexport default connect(MapStateToProps, MapDispatchToProps)(UpdateMedicalData);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    // backgroundColor: \"black\",\r\n  },\r\n  imageContainer: {\r\n    width: \"100%\",\r\n    height: vmin(30),\r\n    resizeMode: \"contain\",\r\n  },\r\n  radioOptions: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  sliderContainer: {\r\n    height: vmin(20),\r\n    width: \"100%\",\r\n    marginLeft: \"2%\",\r\n    marginTop: vmin(2),\r\n    marginBottom: \"8%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // backgroundColor: \"salmon\",\r\n  },\r\n\r\n  containerInput: {\r\n    height: \"10%\",\r\n    width: \"90%\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginTop: vmin(1),\r\n    marginBottom: \"0%\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    // backgroundColor: \"green\",\r\n  },\r\n\r\n  repetitionInputContainer: {\r\n    height: \"30%\",\r\n    width: \"100%\",\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n  },\r\n\r\n  resultSlider: {\r\n    width: \"30%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"rgba(105, 121, 248, 0.5)\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  sliderTitle: {\r\n    height: \"15%\",\r\n    width: \"90%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n\r\nconst updateMedicalDataStyles = StyleSheet.create({\r\n  screenContainer: { width: \"100%\", height: \"100%\", backgroundColor: \"white\" },\r\n\r\n  containerSteps: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    height: \"12%\",\r\n    justifyContent: \"center\",\r\n  },\r\n  containerCard: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    // backgroundColor: \"yellow\",\r\n  },\r\n\r\n  containerMedicalData: {\r\n    height: \"100%\",\r\n    // backgroundColor: \"orange\",\r\n  },\r\n\r\n  rowText_button: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginBottom: vmin(1),\r\n  },\r\n\r\n  containerInput: {\r\n    height: \"10%\",\r\n    width: \"90%\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginTop: vmin(1),\r\n    marginBottom: \"0%\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    // backgroundColor: \"green\",\r\n  },\r\n  input: {\r\n    height: \"60%\",\r\n    width: \"100%\",\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n  },\r\n  containerList: {\r\n    width: \"90%\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginTop: vmin(1),\r\n    marginBottom: vmin(1),\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n\r\n  timeContainer: {\r\n    height: vmin(14),\r\n    width: \"90%\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginTop: vmin(1),\r\n    marginBottom: vmin(1),\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  textInput: {\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  containerButton: {\r\n    height: \"10%\",\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: vmin(2),\r\n    // backgroundColor: \"red\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#6979F8\",\r\n    width: \"90%\",\r\n    height: \"18%\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginBottom: \"10%\",\r\n  },\r\n\r\n  repetitionInputContainer: {\r\n    height: \"50%\",\r\n    width: \"100%\",\r\n    marginTop: \"2%\",\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    // backgroundColor: \"salmon\",\r\n  },\r\n\r\n  groupPickerContainer: {\r\n    height: vmin(16),\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    marginTop: vmin(1),\r\n    marginBottom: vmin(1),\r\n    // backgroundColor: \"green\",\r\n  },\r\n\r\n  listItemsContainer: {\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    marginLeft: \"5%\",\r\n    marginRight: \"15%\",\r\n    width: \"80%\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}