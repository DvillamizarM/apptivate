{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\screens\\\\Ejercicios.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { connect } from \"react-redux\";\nimport EjercicioInactivo from \"../cards/EjercicioInactivo\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nimport StepIndicator from \"react-native-step-indicator\";\nimport firebase from \"../../../database/firebase\";\nimport Logo from \"../Simple/Logo\";\nimport ChargeScreen from \"../Simple/ChargeScreen\";\n\nvar Ejercicios = function (_React$Component) {\n  _inherits(Ejercicios, _React$Component);\n\n  var _super = _createSuper(Ejercicios);\n\n  function Ejercicios(props) {\n    var _this;\n\n    _classCallCheck(this, Ejercicios);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      currentPosition: 0,\n      routineIDs: [],\n      exercises: [],\n      defaultSetups: {},\n      values: [],\n      setup: {},\n      currentExercise: 0,\n      loading: false\n    };\n\n    _this.getRoutineList = function _callee3() {\n      var values, userActiveWeek, activeWeek;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              values = [];\n              userActiveWeek = _this.props.user.information.control.activeWeek;\n              activeWeek = parseInt(userActiveWeek.replace(/\\D/g, \"\")) + 2;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(firebase.db.collection(\"protocol\").doc(\"protesico\").get().then(function _callee2(element) {\n                var promises, finished, info, promises2, finished2;\n                return _regeneratorRuntime.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        if (!(element.data() !== undefined)) {\n                          _context2.next = 15;\n                          break;\n                        }\n\n                        promises = Object.values(element.data()).map(function (element, index) {\n                          if (element.order === 1 || element.order === 2 || element.order === activeWeek || element.order === 13) {\n                            var listInfo = {\n                              idsList: element.refs,\n                              setupsList: element.setup,\n                              order: element.order\n                            };\n                            values.push(listInfo);\n\n                            if (values.length === 4) {\n                              values.sort(function (a, b) {\n                                return parseFloat(a.order) - parseFloat(b.order);\n                              });\n                              console.log(\"values====r---\", values);\n                              return values;\n                            }\n                          }\n                        });\n                        _context2.next = 4;\n                        return _regeneratorRuntime.awrap(Promise.all(promises));\n\n                      case 4:\n                        finished = _context2.sent;\n                        finished = Object.values(finished).filter(function (element) {\n                          return element !== undefined;\n                        });\n                        console.log(\"finished routine----\", finished[0]);\n\n                        _this.setState({\n                          values: finished[0]\n                        });\n\n                        info = [];\n                        promises2 = finished[0][0].idsList.map(function _callee(ref, index) {\n                          return _regeneratorRuntime.async(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  _context.next = 2;\n                                  return _regeneratorRuntime.awrap(ref.get().then(function (res) {\n                                    info.push(res.data());\n                                  }));\n\n                                case 2:\n                                  return _context.abrupt(\"return\", info);\n\n                                case 3:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, null, null, null, Promise);\n                        });\n                        _context2.next = 12;\n                        return _regeneratorRuntime.awrap(Promise.all(promises2));\n\n                      case 12:\n                        finished2 = _context2.sent;\n                        console.log(\"phase list---\", finished2);\n\n                        _this.setState({\n                          exercises: finished2[0],\n                          setup: _this.updateSetup(finished[0][1][0]),\n                          loading: false\n                        });\n\n                      case 15:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getPhaseList = function _callee5(phase) {\n      var info, promises, finished;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              info = [];\n              promises = _this.state.values[phase].map(function _callee4(ref, index) {\n                return _regeneratorRuntime.async(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.next = 2;\n                        return _regeneratorRuntime.awrap(ref.get().then(function (res) {\n                          info.push(res.data());\n                        }));\n\n                      case 2:\n                        return _context4.abrupt(\"return\", info);\n\n                      case 3:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n              _context5.next = 4;\n              return _regeneratorRuntime.awrap(Promise.all(promises));\n\n            case 4:\n              finished = _context5.sent;\n              console.log(\"phase list---\", finished);\n\n              _this.setState({\n                exercises: finished[0],\n                setup: _this.updateSetup(_this.state.values[phase].defaultSetups),\n                loading: false\n              });\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getExerciseList = function _callee8(phase) {\n      var information, cp, activePhase, list;\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              information = _this.state.exercises;\n              cp = phase;\n              activePhase = cp === 0 ? 1 : cp === 4 ? 13 : cp === 2 ? parseInt(_this.props.user.information.control.activeWeek.replace(/\\D/g, \"\")) + 2 : 2;\n              list = [];\n\n              if (!(information.length !== 14)) {\n                _context8.next = 7;\n                break;\n              }\n\n              _context8.next = 7;\n              return _regeneratorRuntime.awrap(firebase.db.collection(\"protocol\").doc(\"protesico\").get().then(function (element) {\n                if (element.data() !== undefined) {\n                  var data = element.data();\n                  Object.values(data).map(function _callee7(element, index) {\n                    var info, promises, finished;\n                    return _regeneratorRuntime.async(function _callee7$(_context7) {\n                      while (1) {\n                        switch (_context7.prev = _context7.next) {\n                          case 0:\n                            info = [];\n\n                            if (!(activePhase === element.order)) {\n                              _context7.next = 7;\n                              break;\n                            }\n\n                            promises = element.refs.map(function _callee6(ref, index) {\n                              return _regeneratorRuntime.async(function _callee6$(_context6) {\n                                while (1) {\n                                  switch (_context6.prev = _context6.next) {\n                                    case 0:\n                                      _context6.next = 2;\n                                      return _regeneratorRuntime.awrap(ref.get().then(function (res) {\n                                        info.push(res.data());\n                                      }));\n\n                                    case 2:\n                                      return _context6.abrupt(\"return\", info);\n\n                                    case 3:\n                                    case \"end\":\n                                      return _context6.stop();\n                                  }\n                                }\n                              }, null, null, null, Promise);\n                            });\n                            _context7.next = 5;\n                            return _regeneratorRuntime.awrap(Promise.all(promises));\n\n                          case 5:\n                            finished = _context7.sent;\n\n                            _this.setState({\n                              exercises: finished[0],\n                              setup: _this.updateSetup(element.setup),\n                              loading: false\n                            });\n\n                          case 7:\n                          case \"end\":\n                            return _context7.stop();\n                        }\n                      }\n                    }, null, null, null, Promise);\n                  });\n                }\n              }).catch(function (e) {\n                console.log(\"El error es \", e);\n              }));\n\n            case 7:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getExercise = function _callee9(phase) {\n      var exercises, setup, dbRef, doc, exerciseList, protocolType, exerciseVales, result;\n      return _regeneratorRuntime.async(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              console.warn(\"props-----\", _this.props);\n\n              _this.setState({\n                loading: true\n              });\n\n              exercises = [];\n              setup = {};\n              dbRef = \"\";\n              doc = \"\";\n              exerciseList = [];\n              protocolType = _this.props.user.information.medical.amputationLevel;\n              protocolType == \"Preprotésico\" ? protocolType = \"preprotesico\" : protocolType = \"protesico\";\n              _context9.t0 = phase;\n              _context9.next = _context9.t0 === 0 ? 12 : _context9.t0 === 1 ? 18 : _context9.t0 === 2 ? 24 : _context9.t0 === 3 ? 35 : _context9.t0 === 4 ? 41 : 47;\n              break;\n\n            case 12:\n              dbRef = firebase.db.collection(\"protocol\").doc(protocolType).collection(\"basic\").doc(\"warmup\");\n              _context9.next = 15;\n              return _regeneratorRuntime.awrap(dbRef.get());\n\n            case 15:\n              doc = _context9.sent;\n              exerciseList = doc.data();\n              return _context9.abrupt(\"break\", 47);\n\n            case 18:\n              dbRef = firebase.db.collection(\"protocol\").doc(protocolType).collection(\"basic\").doc(\"stretch\");\n              _context9.next = 21;\n              return _regeneratorRuntime.awrap(dbRef.get());\n\n            case 21:\n              doc = _context9.sent;\n              exerciseList = doc.data();\n              return _context9.abrupt(\"break\", 47);\n\n            case 24:\n              dbRef = firebase.db.collection(\"protocol\").doc(protocolType).collection(\"week1\").doc(\"setup\");\n              _context9.next = 27;\n              return _regeneratorRuntime.awrap(dbRef.get());\n\n            case 27:\n              doc = _context9.sent;\n              setup = doc.data();\n              dbRef = firebase.db.collection(\"protocol\").doc(protocolType).collection(\"week1\").doc(\"active\");\n              _context9.next = 32;\n              return _regeneratorRuntime.awrap(dbRef.get());\n\n            case 32:\n              doc = _context9.sent;\n              exerciseList = doc.data();\n              return _context9.abrupt(\"break\", 47);\n\n            case 35:\n              dbRef = firebase.db.collection(\"protocol\").doc(protocolType).collection(\"basic\").doc(\"stretch\");\n              _context9.next = 38;\n              return _regeneratorRuntime.awrap(dbRef.get());\n\n            case 38:\n              doc = _context9.sent;\n              exerciseList = doc.data();\n              return _context9.abrupt(\"break\", 47);\n\n            case 41:\n              dbRef = firebase.db.collection(\"protocol\").doc(protocolType).collection(\"basic\").doc(\"cooldown\");\n              _context9.next = 44;\n              return _regeneratorRuntime.awrap(dbRef.get());\n\n            case 44:\n              doc = _context9.sent;\n              exerciseList = doc.data();\n              return _context9.abrupt(\"break\", 47);\n\n            case 47:\n              console.log(\"exercises son >>>>>>>>>\", Object.values(exerciseList));\n              exerciseVales = Object.values(exerciseList);\n              _context9.next = 51;\n              return _regeneratorRuntime.awrap(_this.basicPhaseExercises(exerciseVales));\n\n            case 51:\n              result = _context9.sent;\n              console.warn(\"Los ejercicios esperados son: \", result);\n\n              _this.setState({\n                exercises: result,\n                setup: _this.updateSetup(setup),\n                loading: false\n              });\n\n            case 54:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getExerciseOffline = function (phase) {\n      _this.setState({\n        loading: true\n      });\n\n      console.log(\"offflien phase---\", phase);\n      var exerciseList = [];\n      var setup = {};\n      var downloadedExercises = _this.props.ExerciseRoutine;\n\n      if (downloadedExercises !== undefined) {\n        console.warn(\"dowlonad-----\", downloadedExercises);\n        downloadedExercises.map(function (exercisess, index) {\n          if (index === phase) {\n            console.warn(\"conoled----\", exercisess.collection[0].exerciseCollection);\n            console.warn(\"map resutl----\", exercisess);\n            var currentList = exercisess.collection[0].exerciseCollection;\n            console.warn(\"ucrueen--\", currentList);\n            currentList.map(function (current, index) {\n              var temp = {\n                routinePhase: current.data.routinePhase,\n                gif: current.gif,\n                description: current.data.description,\n                voz: current.voz,\n                activeTime: current.data.activeTime\n              };\n\n              if (current.data.series !== undefined) {\n                setup = {\n                  series: current.data.series,\n                  repetitions: current.data.repetitions,\n                  restTimeMin: current.data.restTimeMin,\n                  restTimeSec: current.data.restTimeSec\n                };\n              }\n\n              exerciseList.push(temp);\n            });\n          }\n        });\n\n        _this.setState({\n          exercises: exerciseList,\n          setup: _this.updateSetup(setup),\n          loading: false\n        });\n      }\n    };\n\n    _this.basicPhaseExercises = function _callee12(exercises) {\n      var promises;\n      return _regeneratorRuntime.async(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              promises = exercises.map(function _callee10(Item) {\n                var numItem;\n                return _regeneratorRuntime.async(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _context10.next = 2;\n                        return _regeneratorRuntime.awrap(Item.get());\n\n                      case 2:\n                        numItem = _context10.sent;\n                        return _context10.abrupt(\"return\", numItem);\n\n                      case 4:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n              return _context12.abrupt(\"return\", new Promise(function _callee11(resolve, reject) {\n                var numItems;\n                return _regeneratorRuntime.async(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        _context11.next = 2;\n                        return _regeneratorRuntime.awrap(Promise.all(promises));\n\n                      case 2:\n                        numItems = _context11.sent;\n                        resolve(numItems.map(function (e) {\n                          return e.data();\n                        }));\n\n                      case 4:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.componentDidMount = function () {\n      BackHandler.addEventListener(\"hardwareBackPress\", _this.handleBackButton);\n\n      if (_this.props.connection) {\n        console.warn(\"did mount routine list\");\n\n        _this.getRoutineList();\n      } else {\n        _this.getExerciseOffline(_this.state.currentPosition);\n      }\n    };\n\n    _this.changeCurrentExercise = function () {\n      if (_this.state.currentExercise + 1 > _this.state.exercises.length - 1) {\n        _this.changeCurrentPhase();\n      } else {\n        _this.setState({\n          currentExercise: _this.state.currentExercise + 1\n        });\n      }\n    };\n\n    _this.changeCurrentPhase = function () {\n      if (_this.state.currentPosition > 4) {\n        _this.props.navigation.navigate(\"EndRoutine\", {\n          props: _this.props,\n          routineIsNotOver: false\n        });\n      } else {\n        if (_this.state.currentPosition + 1 == 5) {\n          _this.props.navigation.navigate(\"EndRoutine\", {\n            routineIsNotOver: false\n          });\n        }\n\n        _this.setState({\n          currentPosition: _this.state.currentPosition + 1,\n          exercises: [],\n          setup: {},\n          currentExercise: 0,\n          loading: false\n        });\n\n        console.log(\"position  +1---\", _this.state.currentPosition + 1);\n        var position = _this.state.currentPosition + 1 === 4 ? 2 : _this.state.currentPosition + 1 === 5 ? 4 : _this.state.currentPosition + 1;\n        _this.props.connection ? _this.getPhaseList(position) : _this.getExerciseOffline(_this.state.currentPosition + 1);\n      }\n    };\n\n    _this.confirmationFinishRoutine = function () {\n      Alert.alert(\"Estás seguro de que quieres terminar la rutina? \", \"Si cancelas la rutina perderás el progreso de este día. \", [{\n        text: \"Regresar\",\n        onPress: function onPress() {},\n        style: \"cancel\"\n      }, {\n        text: \"Cancelar Rutina\",\n        onPress: function onPress() {\n          _this.props.navigation.navigate(\"EndRoutine\", {\n            routineIsNotOver: true\n          });\n        }\n      }], {\n        cancelable: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Ejercicios, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      BackHandler.removeEventListener(\"hardwareBackPress\", this.handleBackButton);\n    }\n  }, {\n    key: \"handleBackButton\",\n    value: function handleBackButton() {\n      ToastAndroid.show(\"Estás en una rutina por favor utiliza el botón rojo de Abandonar Rutina si quieres salir.\", ToastAndroid.SHORT);\n      return true;\n    }\n  }, {\n    key: \"updateSetup\",\n    value: function updateSetup(setup) {\n      var _this$props$navigatio = this.props.navigation.state.params,\n          repetitionAmount = _this$props$navigatio.repetitionAmount,\n          restTimeMin = _this$props$navigatio.restTimeMin,\n          restTimeSec = _this$props$navigatio.restTimeSec;\n      var newSetup = {};\n      var aux = parseInt(setup.repeticiones);\n\n      if (aux) {\n        console.log(\"if------\", repetitionAmount);\n        newSetup.repetitions = Math.round(repetitionAmount / 100 * aux);\n        console.log(\"after set if------\", repetitionAmount);\n      } else {\n        console.log(\"else\");\n        newSetup.repetitions = Math.round(repetitionAmount / 100);\n      }\n\n      newSetup.restTimeMin = restTimeMin;\n      newSetup.restTimeSec = restTimeSec;\n      newSetup.series = setup.series;\n      return newSetup;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var labels = [\"Calentar\", \"Estirar\", \"Activar\", \"Estirar\", \"Enfriar\"];\n      var customStyles = {\n        stepIndicatorSize: vmin(6),\n        currentStepIndicatorSize: vmin(7),\n        separatorStrokeWidth: 2,\n        currentStepStrokeWidth: 3,\n        stepStrokeCurrentColor: \"rgba(105,121,248,1)\",\n        stepStrokeWidth: 3,\n        stepStrokeFinishedColor: \"rgba(64,64,64,1)\",\n        stepStrokeUnFinishedColor: \"#CDD2FD\",\n        separatorFinishedColor: \"rgba(64,64,64,1)\",\n        separatorUnFinishedColor: \"#aaaaaa\",\n        stepIndicatorFinishedColor: \"rgba(64,64,64,1)\",\n        stepIndicatorUnFinishedColor: \"#CDD2FD\",\n        stepIndicatorCurrentColor: \"rgba(105,121,248,1)\",\n        stepIndicatorLabelFontSize: vmin(3),\n        currentStepIndicatorLabelFontSize: vmin(3),\n        stepIndicatorLabelCurrentColor: \"white\",\n        stepIndicatorLabelFinishedColor: \"#CDD2FD\",\n        stepIndicatorLabelUnFinishedColor: \"#aaaaaa\",\n        labelColor: \"#999999\",\n        labelSize: vmin(3),\n        currentStepLabelColor: \"black\"\n      };\n\n      if (this.state.exercises[this.state.currentExercise] == undefined || this.state.loading) {\n        return React.createElement(View, {\n          style: {\n            justifyContent: \"center\",\n            height: \"100%\",\n            marginTop: \"5%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 9\n          }\n        }, React.createElement(ChargeScreen, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return React.createElement(View, {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: {\n            height: \"5%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }\n        }, \"\")), React.createElement(View, {\n          style: {\n            width: \"100%\",\n            height: \"8%\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            borderBottomColor: \"rgba(214, 212, 210,1)\",\n            borderBottomWidth: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 11\n          }\n        }, React.createElement(Logo, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }\n        }), React.createElement(Text, {\n          style: {\n            marginLeft: \"5%\",\n            fontSize: vmin(5),\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }\n        }, \"Rutina\"), React.createElement(TouchableOpacity, {\n          style: [styles.button2, {\n            marginLeft: \"20%\"\n          }],\n          onPress: function onPress() {\n            Alert.alert(\"Abandonar rutina\", \"¿Esta segur@ que quiere abandonar la rutina? Se va a perder todo el progreso que lleva hasta el momento.\", [{\n              text: \"Cancelar\"\n            }, {\n              text: \"ABANDONAR\",\n              onPress: function onPress() {\n                return _this2.props.navigation.navigate(\"EndRoutine\", {\n                  routineIsNotOver: true\n                });\n              }\n            }], {\n              cancelable: false\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 15\n          }\n        }, \"Abandonar Rutina\"))), React.createElement(View, {\n          style: {\n            width: \"100%\",\n            height: \"90%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.screenContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.containerSteps,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }\n        }, React.createElement(StepIndicator, {\n          customStyles: customStyles,\n          currentPosition: this.state.currentPosition,\n          labels: labels,\n          stepCount: 5,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 17\n          }\n        })), React.createElement(View, {\n          style: styles.containerCard,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }\n        }, React.createElement(EjercicioInactivo, {\n          key: \"ejercicio\" + this.state.currentExercise,\n          indicator: this.state.currentExercise + 1 + \" de \" + this.state.exercises.length,\n          setup: this.state.setup,\n          exercise: this.state.exercises[this.state.currentExercise],\n          changeCurrentExercise: this.changeCurrentExercise,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 17\n          }\n        })))));\n      }\n    }\n  }]);\n\n  return Ejercicios;\n}(React.Component);\n\nvar MapStateToProps = function MapStateToProps(store) {\n  return {\n    user: store.User.user,\n    connection: store.User.connection,\n    ExerciseRoutine: store.DownloadReducer.ExerciseRoutine\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {};\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Ejercicios);\nvar styles = StyleSheet.create({\n  screenContainer: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"white\"\n  },\n  containerSteps: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    height: \"12%\",\n    justifyContent: \"center\"\n  },\n  containerCard: {\n    height: \"88%\"\n  },\n  containerButton: {\n    height: \"10%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: vmin(2)\n  },\n  button: {\n    backgroundColor: \"#6979F8\",\n    margin: vmin(2),\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button2: {\n    backgroundColor: \"rgba(199, 0, 57,1)\",\n    width: \"40%\",\n    height: \"70%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.29,\n    shadowRadius: 4.65,\n    elevation: 7\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/screens/Ejercicios.tsx"],"names":["React","connect","EjercicioInactivo","require","vmin","StepIndicator","firebase","Logo","ChargeScreen","Ejercicios","props","state","currentPosition","routineIDs","exercises","defaultSetups","values","setup","currentExercise","loading","getRoutineList","userActiveWeek","user","information","control","activeWeek","parseInt","replace","db","collection","doc","get","then","element","data","undefined","promises","Object","map","index","order","listInfo","idsList","refs","setupsList","push","length","sort","a","b","parseFloat","console","log","Promise","all","finished","filter","setState","info","promises2","ref","res","finished2","updateSetup","getPhaseList","phase","getExerciseList","cp","activePhase","list","catch","e","getExercise","warn","dbRef","exerciseList","protocolType","medical","amputationLevel","exerciseVales","basicPhaseExercises","result","getExerciseOffline","downloadedExercises","ExerciseRoutine","exercisess","exerciseCollection","currentList","current","temp","routinePhase","gif","description","voz","activeTime","series","repetitions","restTimeMin","restTimeSec","Item","numItem","resolve","reject","numItems","componentDidMount","BackHandler","addEventListener","handleBackButton","connection","changeCurrentExercise","changeCurrentPhase","navigation","navigate","routineIsNotOver","position","confirmationFinishRoutine","Alert","alert","text","onPress","style","cancelable","removeEventListener","ToastAndroid","show","SHORT","params","repetitionAmount","newSetup","aux","repeticiones","Math","round","labels","customStyles","stepIndicatorSize","currentStepIndicatorSize","separatorStrokeWidth","currentStepStrokeWidth","stepStrokeCurrentColor","stepStrokeWidth","stepStrokeFinishedColor","stepStrokeUnFinishedColor","separatorFinishedColor","separatorUnFinishedColor","stepIndicatorFinishedColor","stepIndicatorUnFinishedColor","stepIndicatorCurrentColor","stepIndicatorLabelFontSize","currentStepIndicatorLabelFontSize","stepIndicatorLabelCurrentColor","stepIndicatorLabelFinishedColor","stepIndicatorLabelUnFinishedColor","labelColor","labelSize","currentStepLabelColor","justifyContent","height","marginTop","width","backgroundColor","flexDirection","alignItems","borderBottomColor","borderBottomWidth","marginLeft","fontSize","fontWeight","styles","button2","color","screenContainer","containerSteps","containerCard","Component","MapStateToProps","store","User","DownloadReducer","MapDispatchToProps","dispatch","StyleSheet","create","borderRadius","containerButton","padding","button","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAaA,SAASC,OAAT,QAAwB,aAAxB;AAGA,OAAOC,iBAAP;;AAIA,eAAeC,OAAO,CAAC,kCAAD,CAAtB;AAAA,IAAMC,IAAN,YAAMA,IAAN;;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,QAAP;AACA,OAAOC,IAAP;AACA,OAAOC,YAAP;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AADiB,UAGnBC,KAHmB,GAGX;AACNC,MAAAA,eAAe,EAAE,CADX;AAENC,MAAAA,UAAU,EAAE,EAFN;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,aAAa,EAAE,EAJT;AAKNC,MAAAA,MAAM,EAAE,EALF;AAMNC,MAAAA,KAAK,EAAE,EAND;AAONC,MAAAA,eAAe,EAAE,CAPX;AAQNC,MAAAA,OAAO,EAAE;AARH,KAHW;;AAAA,UA0BnBC,cA1BmB,GA0BF;AAAA;AAAA;AAAA;AAAA;AAAA;AACXJ,cAAAA,MADW,GACG,EADH;AAETK,cAAAA,cAFS,GAEQ,MAAKX,KAAL,CAAWY,IAAX,CAAgBC,WAAhB,CAA4BC,OAA5B,CAAoCC,UAF5C;AAGTA,cAAAA,UAHS,GAGIC,QAAQ,CAACL,cAAc,CAACM,OAAf,CAAuB,KAAvB,EAA8B,EAA9B,CAAD,CAAR,GAA8C,CAHlD;AAAA;AAAA,+CAITrB,QAAQ,CAACsB,EAAT,CACHC,UADG,CACQ,UADR,EAEHC,GAFG,CAEC,WAFD,EAGHC,GAHG,GAIHC,IAJG,CAIE,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACAA,OAAO,CAACC,IAAR,OAAmBC,SADnB;AAAA;AAAA;AAAA;;AAEIC,wBAAAA,QAFJ,GAEeC,MAAM,CAACrB,MAAP,CAAciB,OAAO,CAACC,IAAR,EAAd,EAA8BI,GAA9B,CACf,UAACL,OAAD,EAAeM,KAAf,EAAyB;AACvB,8BACEN,OAAO,CAACO,KAAR,KAAkB,CAAlB,IACAP,OAAO,CAACO,KAAR,KAAkB,CADlB,IAEAP,OAAO,CAACO,KAAR,KAAkBf,UAFlB,IAGAQ,OAAO,CAACO,KAAR,KAAkB,EAJpB,EAKE;AACA,gCAAIC,QAAa,GAAI;AACnBC,8BAAAA,OAAO,EAAET,OAAO,CAACU,IADE;AAEnBC,8BAAAA,UAAU,EAAEX,OAAO,CAAChB,KAFD;AAGnBuB,8BAAAA,KAAK,EAAEP,OAAO,CAACO;AAHI,6BAArB;AAKAxB,4BAAAA,MAAM,CAAC6B,IAAP,CAAYJ,QAAZ;;AACA,gCAAIzB,MAAM,CAAC8B,MAAP,KAAkB,CAAtB,EAAyB;AACvB9B,8BAAAA,MAAM,CAAC+B,IAAP,CACE,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUC,UAAU,CAACF,CAAC,CAACR,KAAH,CAAV,GAAsBU,UAAU,CAACD,CAAC,CAACT,KAAH,CAA1C;AAAA,+BADF;AAGEW,8BAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BpC,MAA7B;AACF,qCAAOA,MAAP;AACD;AACF;AACF,yBAtBc,CAFf;AAAA;AAAA,yDA0B2BqC,OAAO,CAACC,GAAR,CAAYlB,QAAZ,CA1B3B;;AAAA;AA0BEmB,wBAAAA,QA1BF;AA4BFA,wBAAAA,QAAQ,GAAGlB,MAAM,CAACrB,MAAP,CAAcuC,QAAd,EAAwBC,MAAxB,CAA+B,UAAUvB,OAAV,EAAmB;AAC3D,iCAAOA,OAAO,KAAKE,SAAnB;AACD,yBAFU,CAAX;AAIAgB,wBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCG,QAAQ,CAAC,CAAD,CAA5C;;AAEA,8BAAKE,QAAL,CAAc;AACZzC,0BAAAA,MAAM,EAAEuC,QAAQ,CAAC,CAAD;AADJ,yBAAd;;AAGIG,wBAAAA,IArCF,GAqCc,EArCd;AAsCIC,wBAAAA,SAtCJ,GAsCgBJ,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,EAAeb,OAAf,CAAuBJ,GAAvB,CAA2B,iBAAOsB,GAAP,EAAYrB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEACrCqB,GAAG,CAAC7B,GAAJ,GAAUC,IAAV,CAAe,UAAC6B,GAAD,EAAS;AAC5BH,oCAAAA,IAAI,CAACb,IAAL,CAAUgB,GAAG,CAAC3B,IAAJ,EAAV;AACD,mCAFK,CADqC;;AAAA;AAAA,mEAIpCwB,IAJoC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA3B,CAtChB;AAAA;AAAA,yDA4C8BL,OAAO,CAACC,GAAR,CAAYK,SAAZ,CA5C9B;;AAAA;AA4CIG,wBAAAA,SA5CJ;AA6CFX,wBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BU,SAA7B;;AACA,8BAAKL,QAAL,CAAc;AACZ3C,0BAAAA,SAAS,EAAEgD,SAAS,CAAC,CAAD,CADR;AAEZ7C,0BAAAA,KAAK,EAAE,MAAK8C,WAAL,CAAiBR,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,EAAe,CAAf,CAAjB,CAFK;AAGZpC,0BAAAA,OAAO,EAAE;AAHG,yBAAd;;AA9CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CAJS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1BE;;AAAA,UAyFnB6C,YAzFmB,GAyFJ,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACTP,cAAAA,IADS,GACG,EADH;AAEPtB,cAAAA,QAFO,GAEI,MAAKzB,KAAL,CAAWK,MAAX,CAAkBiD,KAAlB,EAAyB3B,GAAzB,CAA6B,kBAAOsB,GAAP,EAAYrB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDACtCqB,GAAG,CAAC7B,GAAJ,GAAUC,IAAV,CAAe,UAAC6B,GAAD,EAAS;AAC5BH,0BAAAA,IAAI,CAACb,IAAL,CAAUgB,GAAG,CAAC3B,IAAJ,EAAV;AACD,yBAFK,CADsC;;AAAA;AAAA,0DAIrCwB,IAJqC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA7B,CAFJ;AAAA;AAAA,+CAQkBL,OAAO,CAACC,GAAR,CAAYlB,QAAZ,CARlB;;AAAA;AAQPmB,cAAAA,QARO;AASbJ,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,QAA7B;;AACA,oBAAKE,QAAL,CAAc;AACZ3C,gBAAAA,SAAS,EAAEyC,QAAQ,CAAC,CAAD,CADP;AAEZtC,gBAAAA,KAAK,EAAE,MAAK8C,WAAL,CAAiB,MAAKpD,KAAL,CAAWK,MAAX,CAAkBiD,KAAlB,EAAyBlD,aAA1C,CAFK;AAGZI,gBAAAA,OAAO,EAAE;AAHG,eAAd;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzFI;;AAAA,UA0GnB+C,eA1GmB,GA0GD,kBAAOD,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ1C,cAAAA,WADY,GACE,MAAKZ,KAAL,CAAWG,SADb;AAEZqD,cAAAA,EAFY,GAEPF,KAFO;AAGZG,cAAAA,WAHY,GAIdD,EAAE,KAAK,CAAP,GACI,CADJ,GAEIA,EAAE,KAAK,CAAP,GACA,EADA,GAEAA,EAAE,KAAK,CAAP,GACAzC,QAAQ,CACN,MAAKhB,KAAL,CAAWY,IAAX,CAAgBC,WAAhB,CAA4BC,OAA5B,CAAoCC,UAApC,CAA+CE,OAA/C,CAAuD,KAAvD,EAA8D,EAA9D,CADM,CAAR,GAEI,CAHJ,GAIA,CAZU;AAcZ0C,cAAAA,IAdY,GAcA,EAdA;;AAAA,oBAeZ9C,WAAW,CAACuB,MAAZ,KAAuB,EAfX;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAgBRxC,QAAQ,CAACsB,EAAT,CACHC,UADG,CACQ,UADR,EAEHC,GAFG,CAEC,WAFD,EAGHC,GAHG,GAIHC,IAJG,CAIE,UAACC,OAAD,EAAkB;AAEtB,oBAAIA,OAAO,CAACC,IAAR,OAAmBC,SAAvB,EAAkC;AAChC,sBAAID,IAAS,GAAGD,OAAO,CAACC,IAAR,EAAhB;AACAG,kBAAAA,MAAM,CAACrB,MAAP,CAAckB,IAAd,EAAoBI,GAApB,CAAwB,kBAAOL,OAAP,EAAqBM,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBmB,4BAAAA,IADkB,GACN,EADM;;AAAA,kCAElBU,WAAW,KAAKnC,OAAO,CAACO,KAFN;AAAA;AAAA;AAAA;;AAIdJ,4BAAAA,QAJc,GAIHH,OAAO,CAACU,IAAR,CAAaL,GAAb,CAAiB,kBAAOsB,GAAP,EAAYrB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAC1BqB,GAAG,CAAC7B,GAAJ,GAAUC,IAAV,CAAe,UAAC6B,GAAD,EAAS;AAC5BH,wCAAAA,IAAI,CAACb,IAAL,CAAUgB,GAAG,CAAC3B,IAAJ,EAAV;AACD,uCAFK,CAD0B;;AAAA;AAAA,wEAIzBwB,IAJyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAjB,CAJG;AAAA;AAAA,6DAUWL,OAAO,CAACC,GAAR,CAAYlB,QAAZ,CAVX;;AAAA;AAUdmB,4BAAAA,QAVc;;AAYpB,kCAAKE,QAAL,CAAc;AACZ3C,8BAAAA,SAAS,EAAEyC,QAAQ,CAAC,CAAD,CADP;AAEZtC,8BAAAA,KAAK,EAAE,MAAK8C,WAAL,CAAiB9B,OAAO,CAAChB,KAAzB,CAFK;AAGZE,8BAAAA,OAAO,EAAE;AAHG,6BAAd;;AAZoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAxB;AAmBD;AACF,eA5BG,EA6BHmD,KA7BG,CA6BG,UAACC,CAAD,EAAO;AACZpB,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BmB,CAA5B;AACD,eA/BG,CAhBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1GC;;AAAA,UA6JnBC,WA7JmB,GA6JL,kBAAOP,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZd,cAAAA,OAAO,CAACsB,IAAR,CAAa,YAAb,EAA2B,MAAK/D,KAAhC;;AACA,oBAAK+C,QAAL,CAAc;AAAEtC,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AACIL,cAAAA,SAHQ,GAGI,EAHJ;AAIRG,cAAAA,KAJQ,GAIA,EAJA;AAKRyD,cAAAA,KALQ,GAKK,EALL;AAMR5C,cAAAA,GANQ,GAMF,EANE;AAOR6C,cAAAA,YAPQ,GAOO,EAPP;AAQRC,cAAAA,YARQ,GAQO,MAAKlE,KAAL,CAAWY,IAAX,CAAgBC,WAAhB,CAA4BsD,OAA5B,CAAoCC,eAR3C;AASZF,cAAAA,YAAY,IAAI,cAAhB,GACKA,YAAY,GAAG,cADpB,GAEKA,YAAY,GAAG,WAFpB;AATY,6BAYJX,KAZI;AAAA,gDAaL,CAbK,yBAsBL,CAtBK,yBA+BL,CA/BK,yBAkDL,CAlDK,yBA4DL,CA5DK;AAAA;;AAAA;AAcRS,cAAAA,KAAK,GAAGpE,QAAQ,CAACsB,EAAT,CACLC,UADK,CACM,UADN,EAELC,GAFK,CAED8C,YAFC,EAGL/C,UAHK,CAGM,OAHN,EAILC,GAJK,CAID,QAJC,CAAR;AAdQ;AAAA,+CAmBI4C,KAAK,CAAC3C,GAAN,EAnBJ;;AAAA;AAmBRD,cAAAA,GAnBQ;AAoBR6C,cAAAA,YAAY,GAAG7C,GAAG,CAACI,IAAJ,EAAf;AApBQ;;AAAA;AAuBRwC,cAAAA,KAAK,GAAGpE,QAAQ,CAACsB,EAAT,CACLC,UADK,CACM,UADN,EAELC,GAFK,CAED8C,YAFC,EAGL/C,UAHK,CAGM,OAHN,EAILC,GAJK,CAID,SAJC,CAAR;AAvBQ;AAAA,+CA4BI4C,KAAK,CAAC3C,GAAN,EA5BJ;;AAAA;AA4BRD,cAAAA,GA5BQ;AA6BR6C,cAAAA,YAAY,GAAG7C,GAAG,CAACI,IAAJ,EAAf;AA7BQ;;AAAA;AAiCRwC,cAAAA,KAAK,GAAGpE,QAAQ,CAACsB,EAAT,CACLC,UADK,CACM,UADN,EAELC,GAFK,CAED8C,YAFC,EAGL/C,UAHK,CAGM,OAHN,EAILC,GAJK,CAID,OAJC,CAAR;AAjCQ;AAAA,+CAsCI4C,KAAK,CAAC3C,GAAN,EAtCJ;;AAAA;AAsCRD,cAAAA,GAtCQ;AAuCRb,cAAAA,KAAK,GAAGa,GAAG,CAACI,IAAJ,EAAR;AAEAwC,cAAAA,KAAK,GAAGpE,QAAQ,CAACsB,EAAT,CACLC,UADK,CACM,UADN,EAELC,GAFK,CAED8C,YAFC,EAGL/C,UAHK,CAGM,OAHN,EAILC,GAJK,CAID,QAJC,CAAR;AAzCQ;AAAA,+CA8CI4C,KAAK,CAAC3C,GAAN,EA9CJ;;AAAA;AA8CRD,cAAAA,GA9CQ;AA+CR6C,cAAAA,YAAY,GAAG7C,GAAG,CAACI,IAAJ,EAAf;AA/CQ;;AAAA;AAmDRwC,cAAAA,KAAK,GAAGpE,QAAQ,CAACsB,EAAT,CACLC,UADK,CACM,UADN,EAELC,GAFK,CAED8C,YAFC,EAGL/C,UAHK,CAGM,OAHN,EAILC,GAJK,CAID,SAJC,CAAR;AAnDQ;AAAA,+CAwDI4C,KAAK,CAAC3C,GAAN,EAxDJ;;AAAA;AAwDRD,cAAAA,GAxDQ;AAyDR6C,cAAAA,YAAY,GAAG7C,GAAG,CAACI,IAAJ,EAAf;AAzDQ;;AAAA;AA6DRwC,cAAAA,KAAK,GAAGpE,QAAQ,CAACsB,EAAT,CACLC,UADK,CACM,UADN,EAELC,GAFK,CAED8C,YAFC,EAGL/C,UAHK,CAGM,OAHN,EAILC,GAJK,CAID,UAJC,CAAR;AA7DQ;AAAA,+CAkEI4C,KAAK,CAAC3C,GAAN,EAlEJ;;AAAA;AAkERD,cAAAA,GAlEQ;AAmER6C,cAAAA,YAAY,GAAG7C,GAAG,CAACI,IAAJ,EAAf;AAnEQ;;AAAA;AAuEZiB,cAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCf,MAAM,CAACrB,MAAP,CAAc2D,YAAd,CAAvC;AAEII,cAAAA,aAzEQ,GAyEQ1C,MAAM,CAACrB,MAAP,CAAc2D,YAAd,CAzER;AAAA;AAAA,+CA2EO,MAAKK,mBAAL,CAAyBD,aAAzB,CA3EP;;AAAA;AA2ERE,cAAAA,MA3EQ;AA6EZ9B,cAAAA,OAAO,CAACsB,IAAR,CAAa,gCAAb,EAA+CQ,MAA/C;;AAEA,oBAAKxB,QAAL,CAAc;AACZ3C,gBAAAA,SAAS,EAAEmE,MADC;AAEZhE,gBAAAA,KAAK,EAAE,MAAK8C,WAAL,CAAiB9C,KAAjB,CAFK;AAGZE,gBAAAA,OAAO,EAAE;AAHG,eAAd;;AA/EY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA7JK;;AAAA,UAmPnB+D,kBAnPmB,GAmPE,UAACjB,KAAD,EAAW;AAC9B,YAAKR,QAAL,CAAc;AAAEtC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACAgC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCa,KAAjC;AACA,UAAIU,YAAiB,GAAG,EAAxB;AACA,UAAI1D,KAAU,GAAG,EAAjB;AACA,UAAIkE,mBAAmB,GAAG,MAAKzE,KAAL,CAAW0E,eAArC;;AACA,UAAID,mBAAmB,KAAKhD,SAA5B,EAAuC;AACrCgB,QAAAA,OAAO,CAACsB,IAAR,CAAa,eAAb,EAA8BU,mBAA9B;AACAA,QAAAA,mBAAmB,CAAC7C,GAApB,CAAwB,UAAC+C,UAAD,EAAa9C,KAAb,EAAuB;AAC7C,cAAIA,KAAK,KAAK0B,KAAd,EAAqB;AACnBd,YAAAA,OAAO,CAACsB,IAAR,CACE,aADF,EAEEY,UAAU,CAACxD,UAAX,CAAsB,CAAtB,EAAyByD,kBAF3B;AAIAnC,YAAAA,OAAO,CAACsB,IAAR,CAAa,gBAAb,EAA+BY,UAA/B;AACA,gBAAIE,WAAW,GAAGF,UAAU,CAACxD,UAAX,CAAsB,CAAtB,EAAyByD,kBAA3C;AACAnC,YAAAA,OAAO,CAACsB,IAAR,CAAa,WAAb,EAA0Bc,WAA1B;AACAA,YAAAA,WAAW,CAACjD,GAAZ,CAAgB,UAACkD,OAAD,EAAUjD,KAAV,EAAoB;AAClC,kBAAIkD,IAAI,GAAG;AACTC,gBAAAA,YAAY,EAAEF,OAAO,CAACtD,IAAR,CAAawD,YADlB;AAETC,gBAAAA,GAAG,EAAEH,OAAO,CAACG,GAFJ;AAGTC,gBAAAA,WAAW,EAAEJ,OAAO,CAACtD,IAAR,CAAa0D,WAHjB;AAITC,gBAAAA,GAAG,EAAEL,OAAO,CAACK,GAJJ;AAKTC,gBAAAA,UAAU,EAAEN,OAAO,CAACtD,IAAR,CAAa4D;AALhB,eAAX;;AAOA,kBAAIN,OAAO,CAACtD,IAAR,CAAa6D,MAAb,KAAwB5D,SAA5B,EAAuC;AACrClB,gBAAAA,KAAK,GAAG;AACN8E,kBAAAA,MAAM,EAAEP,OAAO,CAACtD,IAAR,CAAa6D,MADf;AAENC,kBAAAA,WAAW,EAAER,OAAO,CAACtD,IAAR,CAAa8D,WAFpB;AAGNC,kBAAAA,WAAW,EAAET,OAAO,CAACtD,IAAR,CAAa+D,WAHpB;AAINC,kBAAAA,WAAW,EAAEV,OAAO,CAACtD,IAAR,CAAagE;AAJpB,iBAAR;AAMD;;AACDvB,cAAAA,YAAY,CAAC9B,IAAb,CAAkB4C,IAAlB;AACD,aAjBD;AAkBD;AACF,SA5BD;;AA8BA,cAAKhC,QAAL,CAAc;AACZ3C,UAAAA,SAAS,EAAE6D,YADC;AAGZ1D,UAAAA,KAAK,EAAE,MAAK8C,WAAL,CAAiB9C,KAAjB,CAHK;AAIZE,UAAAA,OAAO,EAAE;AAJG,SAAd;AAMD;AACF,KAhSkB;;AAAA,UAkSnB6D,mBAlSmB,GAkSG,mBAAOlE,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdsB,cAAAA,QADc,GACHtB,SAAS,CAACwB,GAAV,CAAc,mBAAO6D,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDACPA,IAAI,CAACpE,GAAL,EADO;;AAAA;AACvBqE,wBAAAA,OADuB;AAAA,2DAEtBA,OAFsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAd,CADG;AAAA,iDAMb,IAAI/C,OAAJ,CAAY,mBAAOgD,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDACMjD,OAAO,CAACC,GAAR,CAAYlB,QAAZ,CADN;;AAAA;AACXmE,wBAAAA,QADW;AAEjBF,wBAAAA,OAAO,CAACE,QAAQ,CAACjE,GAAT,CAAa,UAACiC,CAAD;AAAA,iCAAOA,CAAC,CAACrC,IAAF,EAAP;AAAA,yBAAb,CAAD,CAAP;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ,CANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlSH;;AAAA,UAuUnBsE,iBAvUmB,GAuUC,YAAM;AACxBC,MAAAA,WAAW,CAACC,gBAAZ,CAA6B,mBAA7B,EAAkD,MAAKC,gBAAvD;;AACA,UAAI,MAAKjG,KAAL,CAAWkG,UAAf,EAA2B;AACzBzD,QAAAA,OAAO,CAACsB,IAAR,CAAa,wBAAb;;AACA,cAAKrD,cAAL;AACD,OAHD,MAGO;AACL,cAAK8D,kBAAL,CAAwB,MAAKvE,KAAL,CAAWC,eAAnC;AACD;AACF,KA/UkB;;AAAA,UAiVnBiG,qBAjVmB,GAiVK,YAAM;AAC5B,UAAI,MAAKlG,KAAL,CAAWO,eAAX,GAA6B,CAA7B,GAAiC,MAAKP,KAAL,CAAWG,SAAX,CAAqBgC,MAArB,GAA8B,CAAnE,EAAsE;AACpE,cAAKgE,kBAAL;AACD,OAFD,MAEO;AACL,cAAKrD,QAAL,CAAc;AAAEvC,UAAAA,eAAe,EAAE,MAAKP,KAAL,CAAWO,eAAX,GAA6B;AAAhD,SAAd;AACD;AACF,KAvVkB;;AAAA,UAyVnB4F,kBAzVmB,GAyVE,YAAM;AACzB,UAAI,MAAKnG,KAAL,CAAWC,eAAX,GAA6B,CAAjC,EAAoC;AAClC,cAAKF,KAAL,CAAWqG,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B,EAA6C;AAC3CtG,UAAAA,KAAK,EAAE,MAAKA,KAD+B;AAE3CuG,UAAAA,gBAAgB,EAAE;AAFyB,SAA7C;AAID,OALD,MAKO;AACL,YAAI,MAAKtG,KAAL,CAAWC,eAAX,GAA6B,CAA7B,IAAkC,CAAtC,EAAyC;AACvC,gBAAKF,KAAL,CAAWqG,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B,EAA6C;AAC3CC,YAAAA,gBAAgB,EAAE;AADyB,WAA7C;AAGD;;AACD,cAAKxD,QAAL,CAAc;AACZ7C,UAAAA,eAAe,EAAE,MAAKD,KAAL,CAAWC,eAAX,GAA6B,CADlC;AAEZE,UAAAA,SAAS,EAAE,EAFC;AAGZG,UAAAA,KAAK,EAAE,EAHK;AAIZC,UAAAA,eAAe,EAAE,CAJL;AAKZC,UAAAA,OAAO,EAAE;AALG,SAAd;;AAOAgC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,MAAKzC,KAAL,CAAWC,eAAX,GAA6B,CAA5D;AACA,YAAMsG,QAAQ,GACZ,MAAKvG,KAAL,CAAWC,eAAX,GAA6B,CAA7B,KAAmC,CAAnC,GACI,CADJ,GAEI,MAAKD,KAAL,CAAWC,eAAX,GAA6B,CAA7B,KAAmC,CAAnC,GACA,CADA,GAEA,MAAKD,KAAL,CAAWC,eAAX,GAA6B,CALnC;AAMA,cAAKF,KAAL,CAAWkG,UAAX,GACI,MAAK5C,YAAL,CAAkBkD,QAAlB,CADJ,GAEI,MAAKhC,kBAAL,CAAwB,MAAKvE,KAAL,CAAWC,eAAX,GAA6B,CAArD,CAFJ;AAGD;AACF,KAvXkB;;AAAA,UAyXnBuG,yBAzXmB,GAyXS,YAAM;AAChCC,MAAAA,KAAK,CAACC,KAAN,CACE,kDADF,EAEE,0DAFF,EAGE,CACE;AACEC,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,OAAO,EAAE,mBAAM,CAAE,CAFnB;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADF,EAME;AACEF,QAAAA,IAAI,EAAE,iBADR;AAEEC,QAAAA,OAAO,EAAE,mBAAM;AACb,gBAAK7G,KAAL,CAAWqG,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B,EAA6C;AAC3CC,YAAAA,gBAAgB,EAAE;AADyB,WAA7C;AAGD;AANH,OANF,CAHF,EAkBE;AAAEQ,QAAAA,UAAU,EAAE;AAAd,OAlBF;AAoBD,KA9YkB;;AAAA;AAElB;;;;WAYD,gCAAuB;AACrBhB,MAAAA,WAAW,CAACiB,mBAAZ,CAAgC,mBAAhC,EAAqD,KAAKf,gBAA1D;AACD;;;WAED,4BAAmB;AACjBgB,MAAAA,YAAY,CAACC,IAAb,CACE,2FADF,EAEED,YAAY,CAACE,KAFf;AAIA,aAAO,IAAP;AACD;;;WAsRD,qBAAY5G,KAAZ,EAAmB;AACjB,kCACE,KAAKP,KAAL,CAAWqG,UAAX,CAAsBpG,KAAtB,CAA4BmH,MAD9B;AAAA,UAAQC,gBAAR,yBAAQA,gBAAR;AAAA,UAA0B9B,WAA1B,yBAA0BA,WAA1B;AAAA,UAAuCC,WAAvC,yBAAuCA,WAAvC;AAEA,UAAI8B,QAAQ,GAAG,EAAf;AACA,UAAIC,GAAG,GAAGvG,QAAQ,CAACT,KAAK,CAACiH,YAAP,CAAlB;;AACA,UAAID,GAAJ,EAAS;AACP9E,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB2E,gBAAxB;AACAC,QAAAA,QAAQ,CAAChC,WAAT,GAAuBmC,IAAI,CAACC,KAAL,CAAYL,gBAAgB,GAAG,GAApB,GAA2BE,GAAtC,CAAvB;AACA9E,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC2E,gBAAlC;AACD,OAJD,MAIO;AACL5E,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA4E,QAAAA,QAAQ,CAAChC,WAAT,GAAuBmC,IAAI,CAACC,KAAL,CAAWL,gBAAgB,GAAG,GAA9B,CAAvB;AACD;;AACDC,MAAAA,QAAQ,CAAC/B,WAAT,GAAuBA,WAAvB;AACA+B,MAAAA,QAAQ,CAAC9B,WAAT,GAAuBA,WAAvB;AACA8B,MAAAA,QAAQ,CAACjC,MAAT,GAAkB9E,KAAK,CAAC8E,MAAxB;AAOA,aAAOiC,QAAP;AACD;;;WA2ED,kBAAS;AAAA;;AACP,UAAMK,MAAM,GAAG,CAAC,UAAD,EAAa,SAAb,EAAwB,SAAxB,EAAmC,SAAnC,EAA8C,SAA9C,CAAf;AACA,UAAMC,YAAY,GAAG;AACnBC,QAAAA,iBAAiB,EAAEnI,IAAI,CAAC,CAAD,CADJ;AAEnBoI,QAAAA,wBAAwB,EAAEpI,IAAI,CAAC,CAAD,CAFX;AAGnBqI,QAAAA,oBAAoB,EAAE,CAHH;AAInBC,QAAAA,sBAAsB,EAAE,CAJL;AAKnBC,QAAAA,sBAAsB,EAAE,qBALL;AAMnBC,QAAAA,eAAe,EAAE,CANE;AAOnBC,QAAAA,uBAAuB,EAAE,kBAPN;AAQnBC,QAAAA,yBAAyB,EAAE,SARR;AASnBC,QAAAA,sBAAsB,EAAE,kBATL;AAUnBC,QAAAA,wBAAwB,EAAE,SAVP;AAWnBC,QAAAA,0BAA0B,EAAE,kBAXT;AAYnBC,QAAAA,4BAA4B,EAAE,SAZX;AAanBC,QAAAA,yBAAyB,EAAE,qBAbR;AAcnBC,QAAAA,0BAA0B,EAAEhJ,IAAI,CAAC,CAAD,CAdb;AAenBiJ,QAAAA,iCAAiC,EAAEjJ,IAAI,CAAC,CAAD,CAfpB;AAgBnBkJ,QAAAA,8BAA8B,EAAE,OAhBb;AAiBnBC,QAAAA,+BAA+B,EAAE,SAjBd;AAkBnBC,QAAAA,iCAAiC,EAAE,SAlBhB;AAmBnBC,QAAAA,UAAU,EAAE,SAnBO;AAoBnBC,QAAAA,SAAS,EAAEtJ,IAAI,CAAC,CAAD,CApBI;AAqBnBuJ,QAAAA,qBAAqB,EAAE;AArBJ,OAArB;;AAwBA,UACE,KAAKhJ,KAAL,CAAWG,SAAX,CAAqB,KAAKH,KAAL,CAAWO,eAAhC,KAAoDiB,SAApD,IACA,KAAKxB,KAAL,CAAWQ,OAFb,EAGE;AACA,eACE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AAAEyI,YAAAA,cAAc,EAAE,QAAlB;AAA4BC,YAAAA,MAAM,EAAE,MAApC;AAA4CC,YAAAA,SAAS,EAAE;AAAvD,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CADF;AAOD,OAXD,MAWO;AAEL,eACE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,MAAT;AAAiBF,YAAAA,MAAM,EAAE,MAAzB;AAAiCG,YAAAA,eAAe,EAAE;AAAlD,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEH,YAAAA,MAAM,EAAE;AAAV,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,EAAP,CADF,CAHF,EAME,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLE,YAAAA,KAAK,EAAE,MADF;AAELF,YAAAA,MAAM,EAAE,IAFH;AAGLI,YAAAA,aAAa,EAAE,KAHV;AAILL,YAAAA,cAAc,EAAE,YAJX;AAKLM,YAAAA,UAAU,EAAE,QALP;AAMLC,YAAAA,iBAAiB,EAAE,uBANd;AAOLC,YAAAA,iBAAiB,EAAE;AAPd,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAWE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF,EAYE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,UAAU,EAAE,IADP;AAELC,YAAAA,QAAQ,EAAElK,IAAI,CAAC,CAAD,CAFT;AAGLmK,YAAAA,UAAU,EAAE;AAHP,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,EAqBE,oBAAC,gBAAD;AACE,UAAA,KAAK,EAAE,CACLC,MAAM,CAACC,OADF,EAEL;AACEJ,YAAAA,UAAU,EAAE;AADd,WAFK,CADT;AAOE,UAAA,OAAO,EAAE,mBAAM;AAEbjD,YAAAA,KAAK,CAACC,KAAN,CACE,kBADF,EAEE,0GAFF,EAGE,CACE;AACEC,cAAAA,IAAI,EAAE;AADR,aADF,EAIE;AACEA,cAAAA,IAAI,EAAE,WADR;AAEEC,cAAAA,OAAO,EAAE;AAAA,uBACP,MAAI,CAAC7G,KAAL,CAAWqG,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B,EAA6C;AAC3CC,kBAAAA,gBAAgB,EAAE;AADyB,iBAA7C,CADO;AAAA;AAFX,aAJF,CAHF,EAeE;AAAEQ,cAAAA,UAAU,EAAE;AAAd,aAfF;AAiBD,WA1BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WA4BE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEiD,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BA5BF,CArBF,CANF,EA2DE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEX,YAAAA,KAAK,EAAE,MAAT;AAAiBF,YAAAA,MAAM,EAAE;AAAzB,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEW,MAAM,CAACG,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACI,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,aAAD;AACE,UAAA,YAAY,EAAEtC,YADhB;AAEE,UAAA,eAAe,EAAE,KAAK3H,KAAL,CAAWC,eAF9B;AAGE,UAAA,MAAM,EAAEyH,MAHV;AAIE,UAAA,SAAS,EAAE,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EAUE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEmC,MAAM,CAACK,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,iBAAD;AACE,UAAA,GAAG,EAAE,cAAc,KAAKlK,KAAL,CAAWO,eADhC;AAEE,UAAA,SAAS,EAAK,KAAKP,KAAL,CAAWO,eAAX,GAA6B,CAAlC,YACP,KAAKP,KAAL,CAAWG,SAAX,CAAqBgC,MAHzB;AAKE,UAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWM,KALpB;AAME,UAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWG,SAAX,CAAqB,KAAKH,KAAL,CAAWO,eAAhC,CANZ;AAOE,UAAA,qBAAqB,EAAE,KAAK2F,qBAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAVF,CADF,CA3DF,CADF;AAsFD;AACF;;;;EA/gBsB7G,KAAK,CAAC8K,S;;AAkhB/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAiC;AAGvD,SAAO;AACL1J,IAAAA,IAAI,EAAE0J,KAAK,CAACC,IAAN,CAAW3J,IADZ;AAELsF,IAAAA,UAAU,EAAEoE,KAAK,CAACC,IAAN,CAAWrE,UAFlB;AAGLxB,IAAAA,eAAe,EAAE4F,KAAK,CAACE,eAAN,CAAsB9F;AAHlC,GAAP;AAKD,CARD;;AAUA,IAAM+F,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAqBJ,KAArB;AAAA,SAAqC,EAArC;AAAA,CAA3B;;AACA,eAAe/K,OAAO,CAAC8K,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C1K,UAA7C,CAAf;AAEA,IAAM+J,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,eAAe,EAAE;AAAEZ,IAAAA,KAAK,EAAE,MAAT;AAAiBF,IAAAA,MAAM,EAAE,MAAzB;AAAiCG,IAAAA,eAAe,EAAE;AAAlD,GADc;AAa/BY,EAAAA,cAAc,EAAE;AACdZ,IAAAA,eAAe,EAAE,OADH;AAEduB,IAAAA,YAAY,EAAE,EAFA;AAGd1B,IAAAA,MAAM,EAAE,KAHM;AAIdD,IAAAA,cAAc,EAAE;AAJF,GAbe;AAoB/BiB,EAAAA,aAAa,EAAE;AACbhB,IAAAA,MAAM,EAAE;AADK,GApBgB;AAuB/B2B,EAAAA,eAAe,EAAE;AACf3B,IAAAA,MAAM,EAAE,KADO;AAEfE,IAAAA,KAAK,EAAE,MAFQ;AAIfH,IAAAA,cAAc,EAAE,QAJD;AAKfM,IAAAA,UAAU,EAAE,QALG;AAMfuB,IAAAA,OAAO,EAAErL,IAAI,CAAC,CAAD;AANE,GAvBc;AA+B/BsL,EAAAA,MAAM,EAAE;AACN1B,IAAAA,eAAe,EAAE,SADX;AAEN2B,IAAAA,MAAM,EAAEvL,IAAI,CAAC,CAAD,CAFN;AAGN2J,IAAAA,KAAK,EAAE,MAHD;AAINF,IAAAA,MAAM,EAAE,MAJF;AAKND,IAAAA,cAAc,EAAE,QALV;AAMNM,IAAAA,UAAU,EAAE;AANN,GA/BuB;AAwC/BO,EAAAA,OAAO,EAAE;AACPT,IAAAA,eAAe,EAAE,oBADV;AAEPD,IAAAA,KAAK,EAAE,KAFA;AAGPF,IAAAA,MAAM,EAAE,KAHD;AAIPD,IAAAA,cAAc,EAAE,QAJT;AAKPM,IAAAA,UAAU,EAAE,QALL;AAMPqB,IAAAA,YAAY,EAAE,EANP;AAOPK,IAAAA,WAAW,EAAE,MAPN;AAQPC,IAAAA,YAAY,EAAE;AACZ9B,MAAAA,KAAK,EAAE,CADK;AAEZF,MAAAA,MAAM,EAAE;AAFI,KARP;AAYPiC,IAAAA,aAAa,EAAE,IAZR;AAaPC,IAAAA,YAAY,EAAE,IAbP;AAePC,IAAAA,SAAS,EAAE;AAfJ;AAxCsB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ScrollView,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Button,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  Alert,\r\n  BackHandler,\r\n  ToastAndroid,\r\n} from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Dispatch } from \"redux\";\r\nimport EjercicioInactivo from \"../cards/EjercicioInactivo\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\n\r\ninterface Props {}\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\n\r\nimport StepIndicator from \"react-native-step-indicator\";\r\nimport firebase from \"../../../database/firebase\";\r\nimport Logo from \"../Simple/Logo\";\r\nimport ChargeScreen from \"../Simple/ChargeScreen\";\r\n\r\nclass Ejercicios extends React.Component<Props> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    currentPosition: 0,\r\n    routineIDs: [],\r\n    exercises: [],\r\n    defaultSetups: {},\r\n    values: [],\r\n    setup: {},\r\n    currentExercise: 0,\r\n    loading: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    BackHandler.removeEventListener(\"hardwareBackPress\", this.handleBackButton);\r\n  }\r\n\r\n  handleBackButton() {\r\n    ToastAndroid.show(\r\n      \"Estás en una rutina por favor utiliza el botón rojo de Abandonar Rutina si quieres salir.\",\r\n      ToastAndroid.SHORT\r\n    );\r\n    return true;\r\n  }\r\n\r\n  getRoutineList = async () => {\r\n    let values: any = [];\r\n    const userActiveWeek = this.props.user.information.control.activeWeek;\r\n    const activeWeek = parseInt(userActiveWeek.replace(/\\D/g, \"\")) + 2;\r\n    await firebase.db\r\n      .collection(\"protocol\")\r\n      .doc(\"protesico\")\r\n      .get()\r\n      .then(async (element: any) => {\r\n        if (element.data() !== undefined) {\r\n          const promises = Object.values(element.data()).map(\r\n            (element: any, index) => {\r\n              if (\r\n                element.order === 1 ||\r\n                element.order === 2 ||\r\n                element.order === activeWeek ||\r\n                element.order === 13\r\n              ) {\r\n                let listInfo: any =  {\r\n                  idsList: element.refs,\r\n                  setupsList: element.setup,\r\n                  order: element.order,\r\n                };\r\n                values.push(listInfo);\r\n                if (values.length === 4) {\r\n                  values.sort(\r\n                    (a, b) => parseFloat(a.order) - parseFloat(b.order)\r\n                    );\r\n                    console.log(\"values====r---\",values);\r\n                  return values;\r\n                }\r\n              }\r\n            }\r\n          );\r\n          let finished: Object = await Promise.all(promises);\r\n\r\n          finished = Object.values(finished).filter(function (element) {\r\n            return element !== undefined;\r\n          });\r\n\r\n          console.log(\"finished routine----\", finished[0]);\r\n          \r\n          this.setState({\r\n            values: finished[0]\r\n          });\r\n          let info: any = [];\r\n          const promises2 = finished[0][0].idsList.map(async (ref, index) => {\r\n            await ref.get().then((res) => {\r\n              info.push(res.data());\r\n            });\r\n            return info;\r\n          });\r\n          const finished2: Object = await Promise.all(promises2);\r\n          console.log(\"phase list---\", finished2);\r\n          this.setState({\r\n            exercises: finished2[0],\r\n            setup: this.updateSetup(finished[0][1][0]),\r\n            loading: false,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  getPhaseList = async (phase) => {\r\n    let info: any = [];\r\n    const promises = this.state.values[phase].map(async (ref, index) => {\r\n      await ref.get().then((res) => {\r\n        info.push(res.data());\r\n      });\r\n      return info;\r\n    });\r\n    const finished: Object = await Promise.all(promises);\r\n    console.log(\"phase list---\", finished);\r\n    this.setState({\r\n      exercises: finished[0],\r\n      setup: this.updateSetup(this.state.values[phase].defaultSetups),\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  getExerciseList = async (phase) => {\r\n    let information = this.state.exercises;\r\n    let cp = phase;\r\n    let activePhase =\r\n      cp === 0\r\n        ? 1\r\n        : cp === 4\r\n        ? 13\r\n        : cp === 2\r\n        ? parseInt(\r\n            this.props.user.information.control.activeWeek.replace(/\\D/g, \"\")\r\n          ) + 2\r\n        : 2;\r\n\r\n    let list: any = [];\r\n    if (information.length !== 14) {\r\n      await firebase.db\r\n        .collection(\"protocol\")\r\n        .doc(\"protesico\")\r\n        .get()\r\n        .then((element: any) => {\r\n          // console.log(\"element----\", element)\r\n          if (element.data() !== undefined) {\r\n            let data: any = element.data();\r\n            Object.values(data).map(async (element: any, index) => {\r\n              let info: any = [];\r\n              if (activePhase === element.order) {\r\n                //  console.log(\"routine phase exercise list----\", element);\r\n                const promises = element.refs.map(async (ref, index) => {\r\n                  await ref.get().then((res) => {\r\n                    info.push(res.data());\r\n                  });\r\n                  return info;\r\n                });\r\n                const finished: Object = await Promise.all(promises);\r\n                //   console.log(\"finished---\", finished);\r\n                this.setState({\r\n                  exercises: finished[0],\r\n                  setup: this.updateSetup(element.setup),\r\n                  loading: false,\r\n                });\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"El error es \", e);\r\n        });\r\n    }\r\n  };\r\n\r\n  getExercise = async (phase) => {\r\n    console.warn(\"props-----\", this.props);\r\n    this.setState({ loading: true });\r\n    let exercises = [];\r\n    let setup = {};\r\n    let dbRef: any = \"\";\r\n    let doc = \"\";\r\n    let exerciseList = [];\r\n    let protocolType = this.props.user.information.medical.amputationLevel;\r\n    protocolType == \"Preprotésico\"\r\n      ? (protocolType = \"preprotesico\")\r\n      : (protocolType = \"protesico\");\r\n    switch (phase) {\r\n      case 0:\r\n        dbRef = firebase.db\r\n          .collection(\"protocol\")\r\n          .doc(protocolType)\r\n          .collection(\"basic\")\r\n          .doc(\"warmup\");\r\n        doc = await dbRef.get();\r\n        exerciseList = doc.data();\r\n        break;\r\n      case 1:\r\n        dbRef = firebase.db\r\n          .collection(\"protocol\")\r\n          .doc(protocolType)\r\n          .collection(\"basic\")\r\n          .doc(\"stretch\");\r\n        doc = await dbRef.get();\r\n        exerciseList = doc.data();\r\n        break;\r\n      case 2:\r\n        //setup\r\n        dbRef = firebase.db\r\n          .collection(\"protocol\")\r\n          .doc(protocolType)\r\n          .collection(\"week1\")\r\n          .doc(\"setup\");\r\n        doc = await dbRef.get();\r\n        setup = doc.data();\r\n        //exercise\r\n        dbRef = firebase.db\r\n          .collection(\"protocol\")\r\n          .doc(protocolType)\r\n          .collection(\"week1\")\r\n          .doc(\"active\");\r\n        doc = await dbRef.get();\r\n        exerciseList = doc.data();\r\n        break;\r\n\r\n      case 3:\r\n        dbRef = firebase.db\r\n          .collection(\"protocol\")\r\n          .doc(protocolType)\r\n          .collection(\"basic\")\r\n          .doc(\"stretch\");\r\n        doc = await dbRef.get();\r\n        exerciseList = doc.data();\r\n        break;\r\n\r\n      case 4:\r\n        dbRef = firebase.db\r\n          .collection(\"protocol\")\r\n          .doc(protocolType)\r\n          .collection(\"basic\")\r\n          .doc(\"cooldown\");\r\n        doc = await dbRef.get();\r\n        exerciseList = doc.data();\r\n        break;\r\n    }\r\n\r\n    console.log(\"exercises son >>>>>>>>>\", Object.values(exerciseList));\r\n\r\n    let exerciseVales = Object.values(exerciseList);\r\n\r\n    let result = await this.basicPhaseExercises(exerciseVales);\r\n\r\n    console.warn(\"Los ejercicios esperados son: \", result);\r\n\r\n    this.setState({\r\n      exercises: result,\r\n      setup: this.updateSetup(setup),\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  getExerciseOffline = (phase) => {\r\n    this.setState({ loading: true });\r\n    console.log(\"offflien phase---\", phase);\r\n    let exerciseList: any = [];\r\n    let setup: any = {};\r\n    let downloadedExercises = this.props.ExerciseRoutine;\r\n    if (downloadedExercises !== undefined) {\r\n      console.warn(\"dowlonad-----\", downloadedExercises);\r\n      downloadedExercises.map((exercisess, index) => {\r\n        if (index === phase) {\r\n          console.warn(\r\n            \"conoled----\",\r\n            exercisess.collection[0].exerciseCollection\r\n          );\r\n          console.warn(\"map resutl----\", exercisess);\r\n          let currentList = exercisess.collection[0].exerciseCollection;\r\n          console.warn(\"ucrueen--\", currentList);\r\n          currentList.map((current, index) => {\r\n            let temp = {\r\n              routinePhase: current.data.routinePhase,\r\n              gif: current.gif,\r\n              description: current.data.description,\r\n              voz: current.voz,\r\n              activeTime: current.data.activeTime,\r\n            };\r\n            if (current.data.series !== undefined) {\r\n              setup = {\r\n                series: current.data.series,\r\n                repetitions: current.data.repetitions,\r\n                restTimeMin: current.data.restTimeMin,\r\n                restTimeSec: current.data.restTimeSec,\r\n              };\r\n            }\r\n            exerciseList.push(temp);\r\n          });\r\n        }\r\n      });\r\n\r\n      this.setState({\r\n        exercises: exerciseList,\r\n        // setup:setup ,\r\n        setup: this.updateSetup(setup),\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  basicPhaseExercises = async (exercises) => {\r\n    const promises = exercises.map(async (Item) => {\r\n      const numItem = await Item.get();\r\n      return numItem;\r\n    });\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n      const numItems = await Promise.all(promises);\r\n      resolve(numItems.map((e) => e.data()));\r\n    });\r\n  };\r\n\r\n  updateSetup(setup) {\r\n    const { repetitionAmount, restTimeMin, restTimeSec } =\r\n      this.props.navigation.state.params;\r\n    let newSetup = {};\r\n    let aux = parseInt(setup.repeticiones);\r\n    if (aux) {\r\n      console.log(\"if------\", repetitionAmount);\r\n      newSetup.repetitions = Math.round((repetitionAmount / 100) * aux);\r\n      console.log(\"after set if------\", repetitionAmount);\r\n    } else {\r\n      console.log(\"else\");\r\n      newSetup.repetitions = Math.round(repetitionAmount / 100);\r\n    }\r\n    newSetup.restTimeMin = restTimeMin;\r\n    newSetup.restTimeSec = restTimeSec;\r\n    newSetup.series = setup.series;\r\n    // console.log(\r\n    //   \"setup---\",\r\n    //   setup.repetitions,\r\n    //   \"  |||| newSetup rep--- \",\r\n    //   newSetup.repetitions\r\n    // );\r\n    return newSetup;\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    BackHandler.addEventListener(\"hardwareBackPress\", this.handleBackButton);\r\n    if (this.props.connection) {\r\n      console.warn(\"did mount routine list\");\r\n      this.getRoutineList();\r\n    } else {\r\n      this.getExerciseOffline(this.state.currentPosition);\r\n    }\r\n  };\r\n\r\n  changeCurrentExercise = () => {\r\n    if (this.state.currentExercise + 1 > this.state.exercises.length - 1) {\r\n      this.changeCurrentPhase();\r\n    } else {\r\n      this.setState({ currentExercise: this.state.currentExercise + 1 });\r\n    }\r\n  };\r\n\r\n  changeCurrentPhase = () => {\r\n    if (this.state.currentPosition > 4) {\r\n      this.props.navigation.navigate(\"EndRoutine\", {\r\n        props: this.props,\r\n        routineIsNotOver: false,\r\n      });\r\n    } else {\r\n      if (this.state.currentPosition + 1 == 5) {\r\n        this.props.navigation.navigate(\"EndRoutine\", {\r\n          routineIsNotOver: false,\r\n        });\r\n      }\r\n      this.setState({\r\n        currentPosition: this.state.currentPosition + 1,\r\n        exercises: [],\r\n        setup: {},\r\n        currentExercise: 0,\r\n        loading: false,\r\n      });\r\n      console.log(\"position  +1---\", this.state.currentPosition + 1);\r\n      const position =\r\n        this.state.currentPosition + 1 === 4\r\n          ? 2\r\n          : this.state.currentPosition + 1 === 5\r\n          ? 4\r\n          : this.state.currentPosition + 1;\r\n      this.props.connection\r\n        ? this.getPhaseList(position)\r\n        : this.getExerciseOffline(this.state.currentPosition + 1);\r\n    }\r\n  };\r\n\r\n  confirmationFinishRoutine = () => {\r\n    Alert.alert(\r\n      \"Estás seguro de que quieres terminar la rutina? \",\r\n      \"Si cancelas la rutina perderás el progreso de este día. \",\r\n      [\r\n        {\r\n          text: \"Regresar\",\r\n          onPress: () => {},\r\n          style: \"cancel\",\r\n        },\r\n        {\r\n          text: \"Cancelar Rutina\",\r\n          onPress: () => {\r\n            this.props.navigation.navigate(\"EndRoutine\", {\r\n              routineIsNotOver: true,\r\n            });\r\n          },\r\n        },\r\n      ],\r\n      { cancelable: false }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const labels = [\"Calentar\", \"Estirar\", \"Activar\", \"Estirar\", \"Enfriar\"];\r\n    const customStyles = {\r\n      stepIndicatorSize: vmin(6),\r\n      currentStepIndicatorSize: vmin(7),\r\n      separatorStrokeWidth: 2,\r\n      currentStepStrokeWidth: 3,\r\n      stepStrokeCurrentColor: \"rgba(105,121,248,1)\", //borde seleccionado\r\n      stepStrokeWidth: 3,\r\n      stepStrokeFinishedColor: \"rgba(64,64,64,1)\",\r\n      stepStrokeUnFinishedColor: \"#CDD2FD\", // morado\r\n      separatorFinishedColor: \"rgba(64,64,64,1)\",\r\n      separatorUnFinishedColor: \"#aaaaaa\",\r\n      stepIndicatorFinishedColor: \"rgba(64,64,64,1)\",\r\n      stepIndicatorUnFinishedColor: \"#CDD2FD\", //Gris\r\n      stepIndicatorCurrentColor: \"rgba(105,121,248,1)\", //morado\r\n      stepIndicatorLabelFontSize: vmin(3),\r\n      currentStepIndicatorLabelFontSize: vmin(3),\r\n      stepIndicatorLabelCurrentColor: \"white\", // label dentro de la bolita\r\n      stepIndicatorLabelFinishedColor: \"#CDD2FD\", //Gris\r\n      stepIndicatorLabelUnFinishedColor: \"#aaaaaa\",\r\n      labelColor: \"#999999\",\r\n      labelSize: vmin(3),\r\n      currentStepLabelColor: \"black\", // color de la label de abajo\r\n    };\r\n\r\n    if (\r\n      this.state.exercises[this.state.currentExercise] == undefined ||\r\n      this.state.loading\r\n    ) {\r\n      return (\r\n        <View\r\n          style={{ justifyContent: \"center\", height: \"100%\", marginTop: \"5%\" }}\r\n        >\r\n          <ChargeScreen />\r\n        </View>\r\n      );\r\n    } else {\r\n      // console.log(\"changnee----\", Object.values(this.state.exercises));\r\n      return (\r\n        <View\r\n          style={{ width: \"100%\", height: \"100%\", backgroundColor: \"white\" }}\r\n        >\r\n          <View style={{ height: \"5%\" }}>\r\n            <Text>{\"\"}</Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"8%\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-start\",\r\n              alignItems: \"center\",\r\n              borderBottomColor: \"rgba(214, 212, 210,1)\",\r\n              borderBottomWidth: 1,\r\n            }}\r\n          >\r\n            <Logo />\r\n            <Text\r\n              style={{\r\n                marginLeft: \"5%\",\r\n                fontSize: vmin(5),\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              Rutina\r\n            </Text>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.button2,\r\n                {\r\n                  marginLeft: \"20%\",\r\n                },\r\n              ]}\r\n              onPress={() => {\r\n                //this.confirmationFinishRoutine();\r\n                Alert.alert(\r\n                  \"Abandonar rutina\",\r\n                  \"¿Esta segur@ que quiere abandonar la rutina? Se va a perder todo el progreso que lleva hasta el momento.\",\r\n                  [\r\n                    {\r\n                      text: \"Cancelar\",\r\n                    },\r\n                    {\r\n                      text: \"ABANDONAR\",\r\n                      onPress: () =>\r\n                        this.props.navigation.navigate(\"EndRoutine\", {\r\n                          routineIsNotOver: true,\r\n                        }),\r\n                    },\r\n                  ],\r\n                  { cancelable: false }\r\n                );\r\n              }}\r\n            >\r\n              <Text style={{ color: \"white\" }}>Abandonar Rutina</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View style={{ width: \"100%\", height: \"90%\" }}>\r\n            <View style={styles.screenContainer}>\r\n              <View style={styles.containerSteps}>\r\n                <StepIndicator\r\n                  customStyles={customStyles}\r\n                  currentPosition={this.state.currentPosition}\r\n                  labels={labels}\r\n                  stepCount={5}\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.containerCard}>\r\n                <EjercicioInactivo\r\n                  key={\"ejercicio\" + this.state.currentExercise}\r\n                  indicator={`${this.state.currentExercise + 1} de ${\r\n                    this.state.exercises.length\r\n                  }`}\r\n                  setup={this.state.setup}\r\n                  exercise={this.state.exercises[this.state.currentExercise]}\r\n                  changeCurrentExercise={this.changeCurrentExercise}\r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  // console.warn(\"exercise [rpos======= \", store.DownloadReducer.ExerciseRoutine);\r\n  // console.warn(\"user [rpos======= \", store.User.user);\r\n  return {\r\n    user: store.User.user,\r\n    connection: store.User.connection,\r\n    ExerciseRoutine: store.DownloadReducer.ExerciseRoutine,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({});\r\nexport default connect(MapStateToProps, MapDispatchToProps)(Ejercicios);\r\n\r\nconst styles = StyleSheet.create({\r\n  screenContainer: { width: \"100%\", height: \"100%\", backgroundColor: \"white\" },\r\n  // header: {\r\n  //   width: \"100%\",\r\n  //   alignItems: \"center\",\r\n  //   backgroundColor: \"peru\",\r\n  //   height: \"7%\",\r\n  //   justifyContent: \"center\",\r\n  // },\r\n  // title: {\r\n  //   textAlign: \"center\",\r\n  //   fontWeight: \"bold\",\r\n  // },\r\n  containerSteps: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    height: \"12%\",\r\n    justifyContent: \"center\",\r\n    // alignItems: \"center\",\r\n  },\r\n  containerCard: {\r\n    height: \"88%\",\r\n  },\r\n  containerButton: {\r\n    height: \"10%\",\r\n    width: \"100%\",\r\n    // backgroundColor: \"red\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: vmin(2),\r\n  },\r\n  button: {\r\n    backgroundColor: \"#6979F8\",\r\n    margin: vmin(2),\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  button2: {\r\n    backgroundColor: \"rgba(199, 0, 57,1)\",\r\n    width: \"40%\",\r\n    height: \"70%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowOpacity: 0.29,\r\n    shadowRadius: 4.65,\r\n\r\n    elevation: 7,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}