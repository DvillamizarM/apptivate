{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\Simple\\\\Picker.js\";\nimport React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin,\n    vh = _require.vh;\n\nexport default function Picker(props) {\n  var _this = this;\n\n  var temp = \"\";\n  var temp2 = \"\";\n  props.initialValue ? temp = props.initialValue : temp = props.placeholder;\n  props.initialIndex ? temp = props.list[props.initialIndex] : temp2 = 0;\n\n  var _React$useState = React.useState(temp),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      show = _React$useState4[0],\n      setShow = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      itemHeight = _React$useState6[0],\n      setItemHeight = _React$useState6[1];\n\n  var height = props.height;\n  var width = props.width;\n  return React.createElement(View, {\n    style: {\n      display: \"flex\",\n      width: width,\n      marginVertical: 5,\n      borderRadius: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    onBackdropPress: function onBackdropPress() {\n      return console.log(\"Pressed\");\n    },\n    visible: show,\n    propagateSwipe: true,\n    onRequestClose: function onRequestClose() {\n      setShow(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"rgba(244,244,244,0.7)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"80%\",\n      maxHeight: \"50%\",\n      borderRadius: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.scroll,\n    contentContainerStyle: styles.scrollContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, props.list.map(function (element, index) {\n    return React.createElement(View, {\n      key: element + index,\n      style: {\n        backgroundColor: \"#ffffff\",\n        alignSelf: \"center\",\n        width: \"100%\",\n        height: vh(6)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        width: \"100%\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      onPress: function onPress() {\n        console.warn(\"clicked====\", element);\n        props.setData(element, index);\n        setValue(element);\n        setShow(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlignVertical: \"center\",\n        marginLeft: \"5%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, element, props.percentajes && element !== \"Seleccionar\" ? \"%\" : \"\"))));\n  }))))), React.createElement(View, {\n    style: [styles.container, {\n      height: height\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      minWidth: \"100%\",\n      height: height\n    },\n    disabled: props.disabled ? true : false,\n    onPress: function onPress() {\n      setShow(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"100%\",\n      height: height,\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      height: \"100%\",\n      width: \"90%\",\n      flex: 1,\n      alignSelf: \"stretch\",\n      justifyContent: \"center\",\n      paddingHorizontal: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"left\",\n      textAlignVertical: \"center\",\n      color: \"#000000\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, value, props.percentajes && value !== \"Seleccionar\" ? \"%\" : \"\")), React.createElement(View, {\n    style: {\n      width: \"15%\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    style: {\n      paddingBottom: 8\n    },\n    name: \"sort-down\",\n    color: \"#808080\",\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  })))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    borderColor: \"#e3e3e3\",\n    borderWidth: 1,\n    borderRadius: 4\n  },\n  scroll: {\n    flex: 1,\n    height: \"auto\",\n    borderRadius: 10,\n    width: \"100%\"\n  },\n  scrollContent: {\n    flexGrow: 1,\n    borderRadius: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  icons: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n    width: \"100%\",\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/Simple/Picker.js"],"names":["React","Icon","require","vmin","vh","Picker","props","temp","temp2","initialValue","placeholder","initialIndex","list","useState","value","setValue","show","setShow","itemHeight","setItemHeight","height","width","display","marginVertical","borderRadius","console","log","justifyContent","alignItems","backgroundColor","flex","maxHeight","styles","scroll","scrollContent","map","element","index","alignSelf","warn","setData","textAlignVertical","marginLeft","percentajes","container","minWidth","disabled","flexDirection","paddingHorizontal","textAlign","color","icons","paddingBottom","StyleSheet","create","borderColor","borderWidth","flexGrow"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  TextInput,\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  Modal,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nvar { vmin, vh } = require(\"react-native-expo-viewport-units\");\r\n\r\nexport default function Picker(props) {\r\n  let temp = \"\";\r\n  let temp2 = \"\";\r\n  props.initialValue ? (temp = props.initialValue) : (temp = props.placeholder);\r\n  props.initialIndex ? (temp = props.list[props.initialIndex]) : (temp2 = 0);\r\n  const [value, setValue] = React.useState(temp);\r\n  const [show, setShow] = React.useState(false);\r\n  const [itemHeight, setItemHeight] = React.useState(0);\r\n\r\n  // const icon = !visible ? \"eye-slash\" : \"eye\";\r\n  const height = props.height;\r\n  const width = props.width;\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        display: \"flex\",\r\n        width: width,\r\n        marginVertical: 5,\r\n        borderRadius: 10,\r\n      }}\r\n    >\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        onBackdropPress={() => console.log(\"Pressed\")}\r\n        visible={show}\r\n        propagateSwipe={true}\r\n        onRequestClose={() => {\r\n          setShow(false);\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n              backgroundColor: \"rgba(244,244,244,0.7)\",\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"80%\",\r\n              maxHeight: \"50%\",\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <ScrollView\r\n              style={styles.scroll}\r\n              contentContainerStyle={styles.scrollContent}\r\n            >\r\n              {props.list.map((element, index) => {\r\n                return (\r\n                  <View\r\n                    key={element + index}\r\n                    style={{\r\n                      // position: \"absolute\",\r\n                      backgroundColor: \"#ffffff\",\r\n                      // borderRadius: 20,\r\n                      alignSelf: \"center\",\r\n                      width: \"100%\",\r\n                      height: vh(6),\r\n                    }}\r\n                  >\r\n                    {/* <ScrollView> */}\r\n                    <View\r\n                      style={{\r\n                        height: \"100%\",\r\n                        width: \"100%\",\r\n                        // backgroundColor: \"yellow\",\r\n                      }}\r\n                    >\r\n                      <TouchableOpacity\r\n                        style={{\r\n                          // backgroundColor: \"green\",\r\n                          width: \"100%\",\r\n                          justifyContent: \"center\",\r\n                          height: \"100%\",\r\n                        }}\r\n                        onPress={() => {\r\n                          console.warn(\"clicked====\", element);\r\n                          props.setData(element, index);\r\n                          setValue(element);\r\n                          setShow(false);\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            textAlignVertical: \"center\",\r\n                            marginLeft: \"5%\",\r\n                          }}\r\n                        >\r\n                          {element}\r\n                          {props.percentajes && element !== \"Seleccionar\"\r\n                            ? \"%\"\r\n                            : \"\"}\r\n                        </Text>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n\r\n                    {/* </ScrollView> */}\r\n                  </View>\r\n                );\r\n              })}\r\n            </ScrollView>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n      {/* form picker */}\r\n      <View style={[styles.container, { height: height }]}>\r\n        <TouchableOpacity\r\n          style={{ minWidth: \"100%\", height: height }}\r\n          disabled={props.disabled ? true : false}\r\n          onPress={() => {\r\n            setShow(true);\r\n          }}\r\n        >\r\n          <View style={{ width: \"100%\", height: height, flexDirection: \"row\" }}>\r\n            <View\r\n              style={{\r\n                height: \"100%\",\r\n                width: \"90%\",\r\n\r\n                flex: 1,\r\n                alignSelf: \"stretch\",\r\n                justifyContent: \"center\",\r\n                paddingHorizontal: 10,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  textAlign: \"left\",\r\n                  textAlignVertical: \"center\",\r\n                  color: \"#000000\",\r\n                }}\r\n              >\r\n                {value}\r\n                {props.percentajes && value !== \"Seleccionar\" ? \"%\" : \"\"}\r\n              </Text>\r\n            </View>\r\n            <View style={{ width: \"15%\", height: \"100%\" }}>\r\n              <View style={styles.icons}>\r\n                <Icon\r\n                  style={{ paddingBottom: 8 }}\r\n                  name={\"sort-down\"}\r\n                  color={\"#808080\"}\r\n                  size={24}\r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    //  alignSelf: \"stretch\",\r\n    borderColor: \"#e3e3e3\",\r\n    //  / minHeight: \"100%\",\r\n    borderWidth: 1,\r\n    //backgroundColor:\"orange\",\r\n    borderRadius: 4,\r\n  },\r\n\r\n  scroll: {\r\n    flex: 1,\r\n    height: \"auto\",\r\n    borderRadius: 10,\r\n    width: \"100%\",\r\n  },\r\n  scrollContent: {\r\n    flexGrow: 1,\r\n    borderRadius: 10,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  icons: {\r\n    //   backgroundColor: \"#e3e3e3\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    borderRadius: 4,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}