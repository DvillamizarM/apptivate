{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\Physiotherapist\\\\UserTabs.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TabView, SceneMap, TabBar } from \"react-native-tab-view\";\nimport UserInformation from \"../../components/Physiotherapist/UserInformation\";\nimport UserProtocol from \"../../components/Physiotherapist/UserProtocol\";\nimport firebase from \"../../../database/firebase\";\nimport { connect } from \"react-redux\";\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\n\nvar FirstRoute = function FirstRoute(props) {\n  return React.createElement(UserInformation, {\n    props: props,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 31\n    }\n  });\n};\n\nvar SecondRoute = function SecondRoute(props) {\n  return React.createElement(UserProtocol, {\n    props: props,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 32\n    }\n  });\n};\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nfunction Repository(props) {\n  var _this2 = this;\n\n  var _useState = useState({\n    loading: true\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userInformation = _useState2[0],\n      setUserInformation = _useState2[1];\n\n  var getInformation = function getInformation() {\n    var patientIdentifier, info, record;\n    return _regeneratorRuntime.async(function getInformation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            patientIdentifier = props.navigation.state.params.uid;\n            console.log(\"{}{}{}{}P{}{}{}{}{}{}{}{}{}}el id del paciente que llegas es \", patientIdentifier);\n            info = {};\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"users\").doc(patientIdentifier).get().then(function (user) {\n              info = user.data();\n              info[\"loading\"] = false;\n              console.log(\"La informaicon qudo asi ;\", info);\n            }).catch(function (e) {}));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"endRoutine\").where(\"uid\", \"==\", patientIdentifier).get());\n\n          case 7:\n            record = _context.sent;\n            info[\"record\"] = filterRecord(record);\n            info[\"uid\"] = props.navigation.state.params.uid;\n            console.log(\"La informacion es :::::::::::: :::::::::::: :::::::::::: :::::::::::: ::::::::::::\", info);\n            setUserInformation(info);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var filterRecord = function filterRecord(collection) {\n    var record = {};\n    collection.docs.forEach(function (doc, index) {\n      console.warn(\"Esta es la iteracion numerooooooooooooooooooooooooooooooooooooo\", index, record);\n\n      var currentDocument = _objectSpread(_objectSpread({}, doc.data()), {}, {\n        id: doc.id\n      });\n\n      var activeWeek = currentDocument.week;\n      var activeDay = currentDocument.day;\n      var trainingPhase = \"\";\n\n      if (parseInt(activeWeek.replace(\"week\", \"\"), 10) <= 3) {\n        trainingPhase = \"Fase Inicial\";\n      } else if (parseInt(activeWeek.replace(\"week\", \"\"), 10) <= 7) {\n        trainingPhase = \"Fase Intermedia\";\n      } else {\n        trainingPhase = \"Fase Avanzada\";\n      }\n\n      if (record[trainingPhase]) {\n        console.log(\"Aqui la fase ya habia sido creada aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\", record);\n\n        if (record[trainingPhase][activeWeek]) {\n          console.table(\"Aqui la semana 1 ya existia \", record);\n\n          if (record[trainingPhase][activeWeek][activeDay] != 0) {\n            record[trainingPhase][activeWeek][activeDay].push(_objectSpread({}, currentDocument));\n          } else {\n              record[trainingPhase][activeWeek][activeDay] = [_objectSpread({}, currentDocument)];\n            }\n        } else {\n            console.log(\"La semana no existia \", record);\n            record[trainingPhase][activeWeek] = [0, 0, 0, 0, 0, 0, 0];\n            record[trainingPhase][activeWeek][activeDay] = [_objectSpread({}, currentDocument)];\n          }\n      } else {\n          record[trainingPhase] = {};\n          record[trainingPhase][activeWeek] = [0, 0, 0, 0, 0, 0, 0];\n          record[trainingPhase][activeWeek][activeDay] = [_objectSpread({}, currentDocument)];\n        }\n    });\n    console.log(\"======= El resuldato de la semana es :\", record);\n    return record;\n  };\n\n  useEffect(function () {\n    getInformation();\n  }, []);\n  var layout = useWindowDimensions();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState([{\n    key: \"first\",\n    title: \"Datos\"\n  }, {\n    key: \"second\",\n    title: \"Protocolo\"\n  }]),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      routes = _React$useState4[0];\n\n  var renderScene = SceneMap({\n    first: function first() {\n      return FirstRoute({\n        props: props,\n        userInformation: userInformation\n      });\n    },\n    second: function second() {\n      return SecondRoute({\n        props: props,\n        userInformation: userInformation\n      });\n    }\n  });\n  return React.createElement(TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    swipeEnabled: false,\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    initialLayout: {\n      width: layout.width,\n      height: layout.height\n    },\n    renderTabBar: function renderTabBar(props) {\n      return React.createElement(TabBar, _extends({}, props, {\n        renderLabel: function renderLabel(_ref) {\n          var route = _ref.route,\n              color = _ref.color;\n          return React.createElement(Text, {\n            style: {\n              color: \"#6979F8\",\n              margin: 8,\n              textAlign: \"center\"\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }\n          }, route.title);\n        },\n        indicatorStyle: {\n          backgroundColor: \"#6979F8\"\n        },\n        style: {\n          backgroundColor: \"white\"\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  });\n}\n\nvar MapStateToProps = function MapStateToProps(store) {\n  return {\n    user: store.User.user\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {\n    setUser: function setUser(val) {\n      return dispatch(actionsUser.SET_USER(val));\n    }\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Repository);","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/Physiotherapist/UserTabs.tsx"],"names":["React","useEffect","useState","TabView","SceneMap","TabBar","UserInformation","UserProtocol","firebase","connect","actionsUser","FirstRoute","props","SecondRoute","require","vmin","Repository","loading","userInformation","setUserInformation","getInformation","patientIdentifier","navigation","state","params","uid","console","log","info","db","collection","doc","get","then","user","data","catch","e","where","record","filterRecord","docs","forEach","index","warn","currentDocument","id","activeWeek","week","activeDay","day","trainingPhase","parseInt","replace","table","push","layout","useWindowDimensions","setIndex","key","title","routes","renderScene","first","second","width","height","route","color","margin","textAlign","backgroundColor","MapStateToProps","store","User","MapDispatchToProps","dispatch","setUser","val","SET_USER"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  useWindowDimensions,\r\n  Text,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { TabView, SceneMap, TabBar } from \"react-native-tab-view\";\r\n\r\nimport UserInformation from \"../../components/Physiotherapist/UserInformation\";\r\n\r\nimport UserProtocol from \"../../components/Physiotherapist/UserProtocol\";\r\n\r\nimport firebase from \"../../../database/firebase\";\r\n\r\n// redux\r\n\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\r\n\r\nconst FirstRoute = (props) => <UserInformation props={props} />;\r\n\r\nconst SecondRoute = (props) => <UserProtocol props={props} />;\r\n\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\n\r\nfunction Repository(props) {\r\n  const [userInformation, setUserInformation] = useState({ loading: true});\r\n\r\n  const getInformation = async () => {\r\n    let patientIdentifier = props.navigation.state.params.uid;\r\n    console.log(\r\n      \"{}{}{}{}P{}{}{}{}{}{}{}{}{}}el id del paciente que llegas es \",\r\n      patientIdentifier\r\n    );\r\n    let info: any = {};\r\n    await firebase.db\r\n      .collection(\"users\")\r\n      .doc(patientIdentifier)\r\n      .get()\r\n      .then((user: any) => {\r\n        info = user.data();\r\n        info[\"loading\"] = false;\r\n        console.log(\"La informaicon qudo asi ;\", info);\r\n      })\r\n      .catch((e) => {\r\n        // setLoading(false);\r\n      });\r\n\r\n    let record = await firebase.db\r\n      .collection(\"endRoutine\")\r\n      .where(\"uid\", \"==\", patientIdentifier)\r\n      .get();\r\n\r\n    info[\"record\"] = filterRecord(record);\r\n    info[\"uid\"] = props.navigation.state.params.uid\r\n    console.log(\r\n      \"La informacion es :::::::::::: :::::::::::: :::::::::::: :::::::::::: ::::::::::::\",\r\n      info\r\n    );\r\n    setUserInformation(info);\r\n  };\r\n\r\n  const filterRecord = (collection) => {\r\n    let record: any = {};\r\n    collection.docs.forEach((doc, index) => {\r\n      console.warn(\r\n        \"Esta es la iteracion numerooooooooooooooooooooooooooooooooooooo\",\r\n        index,\r\n        record\r\n      );\r\n      let currentDocument = {\r\n        ...doc.data(),\r\n        id: doc.id,\r\n      };\r\n      let activeWeek = currentDocument.week;\r\n      let activeDay = currentDocument.day;\r\n      let trainingPhase = \"\";\r\n      if (parseInt(activeWeek.replace(\"week\", \"\"), 10) <= 3) {\r\n        trainingPhase = \"Fase Inicial\";\r\n      } else if (parseInt(activeWeek.replace(\"week\", \"\"), 10) <= 7) {\r\n        trainingPhase = \"Fase Intermedia\";\r\n      } else {\r\n        trainingPhase = \"Fase Avanzada\";\r\n      }\r\n      // Verificacion para saber si la fase existe\r\n      if (record[trainingPhase]) {\r\n        console.log(\r\n          \"Aqui la fase ya habia sido creada aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\r\n          record\r\n        );\r\n        //Verificacion si existe la semana\r\n        if (record[trainingPhase][activeWeek]) {\r\n          console.table(\"Aqui la semana 1 ya existia \", record);\r\n          //Verificacion si existe el dia\r\n          if (record[trainingPhase][activeWeek][activeDay] != 0) {\r\n            record[trainingPhase][activeWeek][activeDay].push({\r\n              ...currentDocument,\r\n            });\r\n          }\r\n          // Verificaccion si no existe el dia\r\n          else {\r\n            record[trainingPhase][activeWeek][activeDay] = [\r\n              { ...currentDocument },\r\n            ];\r\n          }\r\n        }\r\n        // Si no existe la semana\r\n        else {\r\n          console.log(\"La semana no existia \", record);\r\n          record[trainingPhase][activeWeek] = [0, 0, 0, 0, 0, 0, 0];\r\n          record[trainingPhase][activeWeek][activeDay] = [\r\n            { ...currentDocument },\r\n          ];\r\n        }\r\n      }\r\n      // si no existe la fase\r\n      else {\r\n        record[trainingPhase] = {};\r\n        record[trainingPhase][activeWeek] = [0, 0, 0, 0, 0, 0, 0];\r\n        record[trainingPhase][activeWeek][activeDay] = [{ ...currentDocument }];\r\n      }\r\n    });\r\n    console.log(\"======= El resuldato de la semana es :\", record);\r\n\r\n    return record;\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getInformation();\r\n  }, []);\r\n\r\n\r\n  const layout = useWindowDimensions();\r\n\r\n  const [index, setIndex] = React.useState(0);\r\n  const [routes] = React.useState([\r\n    { key: \"first\", title: \"Datos\" },\r\n    { key: \"second\", title: \"Protocolo\" },\r\n  ]);\r\n\r\n  const renderScene = SceneMap({\r\n    first: () => FirstRoute({ props, userInformation }),\r\n    second: () => SecondRoute({ props, userInformation }),\r\n  });\r\n\r\n  return (\r\n    <TabView\r\n      navigationState={{ index, routes }}\r\n      swipeEnabled={false}\r\n      renderScene={renderScene}\r\n      onIndexChange={setIndex}\r\n      initialLayout={{ width: layout.width, height: layout.height }}\r\n      renderTabBar={(props) => (\r\n        <TabBar\r\n          {...props}\r\n          renderLabel={({ route, color }) => (\r\n            <Text style={{ color: \"#6979F8\", margin: 8, textAlign: \"center\" }}>\r\n              {route.title}\r\n            </Text>\r\n          )}\r\n          indicatorStyle={{ backgroundColor: \"#6979F8\" }}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  return {\r\n    user: store.User.user,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({\r\n  setUser: (val) => dispatch(actionsUser.SET_USER(val)),\r\n});\r\nexport default connect(MapStateToProps, MapDispatchToProps)(Repository);\r\n"]},"metadata":{},"sourceType":"module"}