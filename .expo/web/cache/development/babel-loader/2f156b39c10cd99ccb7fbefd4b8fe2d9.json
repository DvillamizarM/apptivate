{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\screens\\\\Ejercicios.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from \"react-redux\";\nimport EjercicioInactivo from \"../cards/EjercicioInactivo\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nimport StepIndicator from \"react-native-step-indicator\";\nimport firebase from \"../../../database/firebase\";\nimport Logo from \"../Simple/Logo\";\n\nvar Ejercicios = function (_React$Component) {\n  _inherits(Ejercicios, _React$Component);\n\n  var _super = _createSuper(Ejercicios);\n\n  function Ejercicios(props) {\n    var _this;\n\n    _classCallCheck(this, Ejercicios);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      currentPosition: 0,\n      routineIDs: [],\n      exercises: [],\n      defaultSetups: {},\n      values: [],\n      setup: {},\n      currentExercise: 0,\n      loading: false,\n      showModal: false,\n      modalText: \"\"\n    };\n\n    _this.alertChange = function (text) {\n      console.warn(\"in alert change\", text);\n\n      _this.setState({\n        showModal: true,\n        modalText: text\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          showModal: false\n        });\n      }, 5000);\n    };\n\n    _this.getRoutineList = function _callee3() {\n      var values, level, userActiveWeek, activeWeek;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              values = [];\n              level = _this.props.user.information.medical.amputationPhase === \"Prot√©sico\" ? \"protesico\" : \"preprotesico\";\n              console.warn(level);\n              userActiveWeek = _this.props.user.information.control.activeWeek;\n              activeWeek = parseInt(userActiveWeek.replace(/\\D/g, \"\")) + 2;\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(firebase.db.collection(\"protocol\").doc(level).get().then(function _callee2(element) {\n                var promises, finished, info, position, promises2, finished2;\n                return _regeneratorRuntime.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        if (!(element.data() !== undefined)) {\n                          _context2.next = 16;\n                          break;\n                        }\n\n                        promises = Object.values(element.data()).map(function (faseElement, index) {\n                          console.log(\"data in each ----\", faseElement.order, activeWeek);\n\n                          if (faseElement.title === \"Calentamiento\" || faseElement.title === \"Estiramiento\" || faseElement.order === activeWeek || faseElement.title === \"Enfriamiento\") {\n                            console.log(\"passed  order\", faseElement.setup);\n                            var listInfo = {\n                              idsList: faseElement.refs,\n                              setupsList: faseElement.setup,\n                              order: faseElement.order\n                            };\n                            values.push(listInfo);\n\n                            if (values.length === 4) {\n                              values.sort(function (a, b) {\n                                return parseFloat(a.order) - parseFloat(b.order);\n                              });\n                              console.log(\"values====r---\", values);\n                              return values;\n                            }\n                          }\n                        });\n                        _context2.next = 4;\n                        return _regeneratorRuntime.awrap(Promise.all(promises).catch(function (error) {\n                          return console.warn(\"error000 === \", error);\n                        }));\n\n                      case 4:\n                        finished = _context2.sent;\n                        finished = Object.values(finished).filter(function (element) {\n                          return element !== undefined;\n                        });\n                        console.log(\"finished routine----\", finished[0]);\n\n                        _this.setState({\n                          values: finished[0]\n                        });\n\n                        info = [];\n                        position = _this.state.currentPosition === 4 ? 3 : _this.state.currentPosition;\n                        promises2 = finished[0][position].idsList.map(function _callee(ref, index) {\n                          return _regeneratorRuntime.async(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  _context.next = 2;\n                                  return _regeneratorRuntime.awrap(ref.get().then(function (res) {\n                                    info.push(res.data());\n                                  }));\n\n                                case 2:\n                                  return _context.abrupt(\"return\", info);\n\n                                case 3:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, null, null, null, Promise);\n                        });\n                        _context2.next = 13;\n                        return _regeneratorRuntime.awrap(Promise.all(promises2));\n\n                      case 13:\n                        finished2 = _context2.sent;\n                        console.log(\"phase list---\", finished2);\n\n                        _this.setState({\n                          exercises: finished2[0],\n                          setup: _this.updateSetup(finished[0][position].setupsList),\n                          loading: false\n                        });\n\n                      case 16:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }));\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getPhaseList = function _callee5(phase) {\n      var info, promises, finished;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              info = [];\n              phase === 3 ? phase = 1 : phase === 4 ? phase = 3 : phase = phase;\n              console.log(\"phase number--- \", _this.state.values[phase]);\n              promises = _this.state.values[phase].idsList.map(function _callee4(ref, index) {\n                return _regeneratorRuntime.async(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        console.log(\"in promise mapp---\", _this.state.values[phase]);\n                        _context4.next = 3;\n                        return _regeneratorRuntime.awrap(ref.get().then(function (res) {\n                          info.push(res.data());\n                        }));\n\n                      case 3:\n                        return _context4.abrupt(\"return\", info);\n\n                      case 4:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n              _context5.next = 6;\n              return _regeneratorRuntime.awrap(Promise.all(promises));\n\n            case 6:\n              finished = _context5.sent;\n              console.log(\"phase list---\", finished);\n\n              _this.setState({\n                exercises: finished[0],\n                setup: _this.updateSetup(_this.state.values[phase].setupsList),\n                loading: false\n              });\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getExerciseOffline = function (phase) {\n      phase === 3 ? phase = 1 : phase === 4 ? phase = 3 : phase = phase;\n\n      _this.setState({\n        loading: true\n      });\n\n      console.log(\"offflien phase---\", phase);\n      var exerciseList = [];\n      var setup = {};\n      var downloadedExercises = _this.props.ExerciseRoutine;\n\n      if (downloadedExercises !== undefined) {\n        console.warn(\"dowlonad-----\", downloadedExercises);\n        downloadedExercises.map(function (exercisess, index) {\n          if (index === phase) {\n            console.warn(\"map resutl----\", exercisess);\n            var currentList = exercisess.exercises;\n            console.warn(\"ucrueen--\", currentList);\n            currentList.map(function (current, index) {\n              var temp = {\n                routinePhase: current.routinePhase,\n                gif: current.gif,\n                description: current.description,\n                voz: current.voz,\n                activeTime: current.activeTime\n              };\n              exerciseList.push(temp);\n            });\n            setup = exercisess.setup;\n          }\n        });\n        console.log(\"exercise list--\", exerciseList, setup);\n\n        _this.setState({\n          exercises: exerciseList,\n          setup: _this.updateSetup(setup),\n          loading: false\n        });\n      }\n    };\n\n    _this.componentDidMount = function () {\n      BackHandler.addEventListener(\"hardwareBackPress\", _this.handleBackButton);\n\n      _this.alertChange(\"start\");\n\n      if (_this.props.connection) {\n        console.warn(\"did mount routine list\");\n\n        _this.getRoutineList();\n      } else {\n        console.warn(\"else---\");\n\n        _this.getExerciseOffline(_this.state.currentPosition);\n      }\n    };\n\n    _this.changeCurrentExercise = function () {\n      if (_this.state.currentExercise + 1 > _this.state.exercises.length - 1) {\n        console.warn(\"in if current exercicse\");\n\n        _this.alertChange(\"phase\");\n\n        _this.changeCurrentPhase();\n      } else if (_this.state.currentExercise + 1 <= _this.state.exercises.length - 1) {\n        console.warn(\"in else current exercicse\");\n\n        _this.alertChange(\"exercise\");\n\n        _this.setState({\n          currentExercise: _this.state.currentExercise + 1\n        });\n      }\n    };\n\n    _this.changeCurrentPhase = function () {\n      if (_this.state.currentPosition > 4) {\n        _this.props.navigation.navigate(\"EndRoutine\", {\n          props: _this.props,\n          routineIsNotOver: false\n        });\n      } else {\n        if (_this.state.currentPosition + 1 === 5) {\n          _this.props.navigation.navigate(\"EndRoutine\", {\n            routineIsNotOver: false\n          });\n        }\n\n        _this.setState({\n          currentPosition: _this.state.currentPosition + 1,\n          exercises: [],\n          setup: {},\n          currentExercise: 0,\n          loading: false\n        });\n\n        console.log(\"position  +1---\", _this.state.currentPosition + 1);\n        _this.props.connection ? _this.getPhaseList(_this.state.currentPosition + 1) : _this.getExerciseOffline(_this.state.currentPosition + 1);\n      }\n    };\n\n    _this.confirmationFinishRoutine = function () {\n      Alert.alert(\"Est√°s seguro de que quieres terminar la rutina? \", \"Si cancelas la rutina perder√°s el progreso de este d√≠a. \", [{\n        text: \"Regresar\",\n        onPress: function onPress() {},\n        style: \"cancel\"\n      }, {\n        text: \"Cancelar Rutina\",\n        onPress: function onPress() {\n          _this.props.navigation.navigate(\"EndRoutine\", {\n            routineIsNotOver: true\n          });\n        }\n      }], {\n        cancelable: false\n      });\n    };\n\n    _this.LoadingModal = function () {\n      var moment = _this.state.modalText;\n      var text = moment === \"start\" ? \"¬°La rutina est√° por comenzar!\" : moment === \"phase\" ? \"¬°Prep√°rate para la siguiente etapa!\" : moment === \"exercise\" ? \"¬°Prep√°rate para el siguiente ejercicio!\" : \"¬°Prep√°rate para la siguiente serie!\";\n      return React.createElement(Modal, {\n        visible: _this.state.showModal,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.modalView,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.innermodalView,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.imageModalView,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: moment === \"start\" ? require(\"../../assets/images/apptivateLogo.png\") : moment === \"phase\" ? require(\"../../assets/images/success.png\") : moment === \"exercise\" ? require(\"../../assets/images/success.png\") : require(\"../../assets/images/success.png\"),\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          borderRadius: 50\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }\n      })), React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          fontSize: vmin(8),\n          color: \"rgba(153, 153, 153, 1)\",\n          marginTop: \"5%\"\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }\n      }, text), React.createElement(ActivityIndicator, {\n        size: \"large\",\n        color: \"#6979f8\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }\n      }))));\n    };\n\n    return _this;\n  }\n\n  _createClass(Ejercicios, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      BackHandler.removeEventListener(\"hardwareBackPress\", this.handleBackButton);\n    }\n  }, {\n    key: \"handleBackButton\",\n    value: function handleBackButton() {\n      ToastAndroid.show(\"Est√°s en una rutina por favor utiliza el bot√≥n rojo de Abandonar Rutina si quieres salir.\", ToastAndroid.SHORT);\n      return true;\n    }\n  }, {\n    key: \"updateSetup\",\n    value: function updateSetup(setup) {\n      var _this$props$navigatio = this.props.navigation.state.params,\n          repetitionAmount = _this$props$navigatio.repetitionAmount,\n          restTimeMin = _this$props$navigatio.restTimeMin,\n          restTimeSec = _this$props$navigatio.restTimeSec;\n      var newSetup = {};\n      var aux = parseInt(setup.repeticiones);\n\n      if (aux) {\n        console.log(\"if------\", repetitionAmount);\n        newSetup.repetitions = Math.round(repetitionAmount / 100 * aux);\n        console.log(\"after set if------\", repetitionAmount);\n      } else {\n        console.log(\"else\");\n        newSetup.repetitions = Math.round(repetitionAmount / 100);\n      }\n\n      newSetup.restTimeMin = restTimeMin;\n      newSetup.restTimeSec = restTimeSec;\n      newSetup.series = setup.series;\n      return newSetup;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var labels = [\"Calentar\", \"Estirar\", \"Activar\", \"Estirar\", \"Enfriar\"];\n      var customStyles = {\n        stepIndicatorSize: vmin(6),\n        currentStepIndicatorSize: vmin(7),\n        separatorStrokeWidth: 2,\n        currentStepStrokeWidth: 3,\n        stepStrokeCurrentColor: \"rgba(105,121,248,1)\",\n        stepStrokeWidth: 3,\n        stepStrokeFinishedColor: \"rgba(64,64,64,1)\",\n        stepStrokeUnFinishedColor: \"#CDD2FD\",\n        separatorFinishedColor: \"rgba(64,64,64,1)\",\n        separatorUnFinishedColor: \"#aaaaaa\",\n        stepIndicatorFinishedColor: \"rgba(64,64,64,1)\",\n        stepIndicatorUnFinishedColor: \"#CDD2FD\",\n        stepIndicatorCurrentColor: \"rgba(105,121,248,1)\",\n        stepIndicatorLabelFontSize: vmin(3),\n        currentStepIndicatorLabelFontSize: vmin(3),\n        stepIndicatorLabelCurrentColor: \"white\",\n        stepIndicatorLabelFinishedColor: \"#CDD2FD\",\n        stepIndicatorLabelUnFinishedColor: \"#aaaaaa\",\n        labelColor: \"#999999\",\n        labelSize: vmin(3),\n        currentStepLabelColor: \"black\"\n      };\n\n      if (this.state.exercises[this.state.currentExercise] === undefined || this.state.loading) {\n        return React.createElement(View, {\n          style: {\n            justifyContent: \"center\",\n            height: \"100%\",\n            marginTop: \"5%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 9\n          }\n        }, React.createElement(this.LoadingModal, {\n          moment: this.state.modalText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return React.createElement(View, {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 9\n          }\n        }, React.createElement(this.LoadingModal, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 11\n          }\n        }), React.createElement(View, {\n          style: {\n            height: \"5%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }\n        }, \"\")), React.createElement(View, {\n          style: {\n            width: \"100%\",\n            height: \"8%\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            borderBottomColor: \"rgba(214, 212, 210,1)\",\n            borderBottomWidth: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 11\n          }\n        }, React.createElement(Logo, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }\n        }), React.createElement(Text, {\n          style: {\n            marginLeft: \"5%\",\n            fontSize: vmin(5),\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }\n        }, \"Rutina\"), React.createElement(TouchableOpacity, {\n          style: [styles.button2, {\n            marginLeft: \"20%\"\n          }],\n          onPress: function onPress() {\n            Alert.alert(\"Abandonar rutina\", \"¬øEsta segur@ que quiere abandonar la rutina? Se va a perder todo el progreso que lleva hasta el momento.\", [{\n              text: \"Cancelar\"\n            }, {\n              text: \"ABANDONAR\",\n              onPress: function onPress() {\n                return _this2.props.navigation.navigate(\"EndRoutine\", {\n                  routineIsNotOver: true\n                });\n              }\n            }], {\n              cancelable: false\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }\n        }, \"Abandonar Rutina\"))), React.createElement(View, {\n          style: {\n            width: \"100%\",\n            height: \"90%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.screenContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.containerSteps,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }\n        }, React.createElement(StepIndicator, {\n          customStyles: customStyles,\n          currentPosition: this.state.currentPosition,\n          labels: labels,\n          stepCount: 5,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 17\n          }\n        })), React.createElement(View, {\n          style: styles.containerCard,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }\n        }, React.createElement(EjercicioInactivo, {\n          key: \"ejercicio\" + this.state.currentExercise,\n          indicator: this.state.currentExercise + 1 + \" de \" + this.state.exercises.length,\n          setup: this.state.setup,\n          exercise: this.state.exercises[this.state.currentExercise],\n          changeCurrentExercise: this.changeCurrentExercise,\n          alertChange: this.alertChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }\n        })))));\n      }\n    }\n  }]);\n\n  return Ejercicios;\n}(React.Component);\n\nvar MapStateToProps = function MapStateToProps(store) {\n  return {\n    user: store.User.user,\n    connection: store.User.connection,\n    ExerciseRoutine: store.DownloadReducer.ExerciseRoutine\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {};\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Ejercicios);\nvar styles = StyleSheet.create({\n  screenContainer: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"white\"\n  },\n  containerSteps: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    height: \"12%\",\n    justifyContent: \"center\"\n  },\n  containerCard: {\n    height: \"88%\"\n  },\n  containerButton: {\n    height: \"10%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: vmin(2)\n  },\n  button: {\n    backgroundColor: \"#6979F8\",\n    margin: vmin(2),\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button2: {\n    backgroundColor: \"rgba(199, 0, 57,1)\",\n    width: \"40%\",\n    height: \"70%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.29,\n    shadowRadius: 4.65,\n    elevation: 7\n  },\n  modalView: {\n    flex: 1,\n    justifyContent: \"center\",\n    height: \"100%\",\n    minHeight: \"100%\",\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  innermodalView: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  imageModalView: {\n    height: 150,\n    width: 150,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/screens/Ejercicios.tsx"],"names":["React","connect","EjercicioInactivo","require","vmin","StepIndicator","firebase","Logo","Ejercicios","props","state","currentPosition","routineIDs","exercises","defaultSetups","values","setup","currentExercise","loading","showModal","modalText","alertChange","text","console","warn","setState","setTimeout","getRoutineList","level","user","information","medical","amputationPhase","userActiveWeek","control","activeWeek","parseInt","replace","db","collection","doc","get","then","element","data","undefined","promises","Object","map","faseElement","index","log","order","title","listInfo","idsList","refs","setupsList","push","length","sort","a","b","parseFloat","Promise","all","catch","error","finished","filter","info","position","promises2","ref","res","finished2","updateSetup","getPhaseList","phase","getExerciseOffline","exerciseList","downloadedExercises","ExerciseRoutine","exercisess","currentList","current","temp","routinePhase","gif","description","voz","activeTime","componentDidMount","BackHandler","addEventListener","handleBackButton","connection","changeCurrentExercise","changeCurrentPhase","navigation","navigate","routineIsNotOver","confirmationFinishRoutine","Alert","alert","onPress","style","cancelable","LoadingModal","moment","styles","modalView","innermodalView","imageModalView","width","height","borderRadius","textAlign","fontSize","color","marginTop","removeEventListener","ToastAndroid","show","SHORT","params","repetitionAmount","restTimeMin","restTimeSec","newSetup","aux","repeticiones","repetitions","Math","round","series","labels","customStyles","stepIndicatorSize","currentStepIndicatorSize","separatorStrokeWidth","currentStepStrokeWidth","stepStrokeCurrentColor","stepStrokeWidth","stepStrokeFinishedColor","stepStrokeUnFinishedColor","separatorFinishedColor","separatorUnFinishedColor","stepIndicatorFinishedColor","stepIndicatorUnFinishedColor","stepIndicatorCurrentColor","stepIndicatorLabelFontSize","currentStepIndicatorLabelFontSize","stepIndicatorLabelCurrentColor","stepIndicatorLabelFinishedColor","stepIndicatorLabelUnFinishedColor","labelColor","labelSize","currentStepLabelColor","justifyContent","backgroundColor","flexDirection","alignItems","borderBottomColor","borderBottomWidth","marginLeft","fontWeight","button2","screenContainer","containerSteps","containerCard","Component","MapStateToProps","store","User","DownloadReducer","MapDispatchToProps","dispatch","StyleSheet","create","containerButton","padding","button","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","flex","minHeight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ScrollView,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Button,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  Alert,\r\n  BackHandler,\r\n  ToastAndroid,\r\n  Modal,\r\n  Image,\r\n} from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Dispatch } from \"redux\";\r\nimport EjercicioInactivo from \"../cards/EjercicioInactivo\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\n\r\ninterface Props {}\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\n\r\nimport StepIndicator from \"react-native-step-indicator\";\r\nimport firebase from \"../../../database/firebase\";\r\nimport Logo from \"../Simple/Logo\";\r\nimport ChargeScreen from \"../Simple/ChargeScreen\";\r\n\r\nclass Ejercicios extends React.Component<Props> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    currentPosition: 0,\r\n    routineIDs: [],\r\n    exercises: [],\r\n    defaultSetups: {},\r\n    values: [],\r\n    setup: {},\r\n    currentExercise: 0,\r\n    loading: false,\r\n    showModal: false,\r\n    modalText: \"\",\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    BackHandler.removeEventListener(\"hardwareBackPress\", this.handleBackButton);\r\n  }\r\n\r\n  handleBackButton() {\r\n    ToastAndroid.show(\r\n      \"Est√°s en una rutina por favor utiliza el bot√≥n rojo de Abandonar Rutina si quieres salir.\",\r\n      ToastAndroid.SHORT\r\n    );\r\n    return true;\r\n  }\r\n\r\n  alertChange = (text) => {\r\n    console.warn(\"in alert change\", text);\r\n\r\n    this.setState({ showModal: true, modalText: text });\r\n    // if(!this.state.loading){\r\n    setTimeout(() => {\r\n      this.setState({ showModal: false });\r\n    }, 5000);\r\n    // }\r\n  };\r\n\r\n  getRoutineList = async () => {\r\n    let values: any = [];\r\n    const level = this.props.user.information.medical.amputationPhase === \"Prot√©sico\" ? \"protesico\" : \"preprotesico\";\r\n    console.warn(level)\r\n    const userActiveWeek = this.props.user.information.control.activeWeek;\r\n    const activeWeek = parseInt(userActiveWeek.replace(/\\D/g, \"\")) + 2;\r\n    await firebase.db\r\n      .collection(\"protocol\")\r\n      .doc(level)\r\n      .get()\r\n      .then(async (element: any) => {\r\n        if (element.data() !== undefined) {\r\n          const promises = Object.values(element.data()).map(\r\n            (faseElement: any, index) => {\r\n              console.log(\"data in each ----\", faseElement.order, activeWeek);\r\n              if (\r\n                faseElement.title === \"Calentamiento\" ||\r\n                faseElement.title === \"Estiramiento\" ||\r\n                 faseElement.order === activeWeek ||\r\n                faseElement.title === \"Enfriamiento\"\r\n              ) {\r\n                console.log(\"passed  order\", faseElement.setup);\r\n                let listInfo: any = {\r\n                  idsList: faseElement.refs,\r\n                  setupsList: faseElement.setup,\r\n                  order: faseElement.order,\r\n                };\r\n                values.push(listInfo);\r\n                if (values.length === 4) {\r\n                  values.sort(\r\n                    (a, b) => parseFloat(a.order) - parseFloat(b.order)\r\n                  );\r\n                  console.log(\"values====r---\", values);\r\n                  return values;\r\n                }\r\n              }\r\n            }\r\n          );\r\n          let finished: Object = await Promise.all(promises).catch((error)=> console.warn(\"error000 === \", error));\r\n\r\n          finished = Object.values(finished).filter(function (element) {\r\n            return element !== undefined;\r\n          });\r\n\r\n          console.log(\"finished routine----\", finished[0]);\r\n\r\n          this.setState({\r\n            values: finished[0],\r\n          });\r\n          //get first routine phase exercise list...\r\n          let info: any = [];\r\n          const position =\r\n            this.state.currentPosition === 4 ? 3 : this.state.currentPosition;\r\n          const promises2 = finished[0][position].idsList.map(\r\n            async (ref, index) => {\r\n              await ref.get().then((res) => {\r\n                info.push(res.data());\r\n              });\r\n              return info;\r\n            }\r\n          );\r\n          const finished2: Object = await Promise.all(promises2);\r\n          console.log(\"phase list---\", finished2);\r\n          this.setState({\r\n            exercises: finished2[0],\r\n            setup: this.updateSetup(finished[0][position].setupsList),\r\n            loading: false,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  getPhaseList = async (phase) => {\r\n    let info: any = [];\r\n    phase === 3 ? (phase = 1) : phase === 4 ? (phase = 3) : (phase = phase);\r\n    console.log(\"phase number--- \", this.state.values[phase]);\r\n    const promises = this.state.values[phase].idsList.map(\r\n      async (ref, index) => {\r\n        console.log(\"in promise mapp---\", this.state.values[phase]);\r\n        await ref.get().then((res) => {\r\n          info.push(res.data());\r\n        });\r\n        return info;\r\n      }\r\n    );\r\n    const finished: Object = await Promise.all(promises);\r\n    console.log(\"phase list---\", finished);\r\n    this.setState({\r\n      exercises: finished[0],\r\n      setup: this.updateSetup(this.state.values[phase].setupsList),\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  getExerciseOffline = (phase) => {\r\n    phase === 3 ? (phase = 1) : phase === 4 ? (phase = 3) : (phase = phase);\r\n    this.setState({ loading: true });\r\n    console.log(\"offflien phase---\", phase);\r\n    let exerciseList: any = [];\r\n    let setup: any = {};\r\n    let downloadedExercises = this.props.ExerciseRoutine;\r\n    if (downloadedExercises !== undefined) {\r\n      console.warn(\"dowlonad-----\", downloadedExercises);\r\n      downloadedExercises.map((exercisess, index) => {\r\n        if (index === phase) {\r\n          console.warn(\"map resutl----\", exercisess);\r\n          let currentList = exercisess.exercises;\r\n          console.warn(\"ucrueen--\", currentList);\r\n          currentList.map((current, index) => {\r\n            let temp = {\r\n              routinePhase: current.routinePhase,\r\n              gif: current.gif,\r\n              description: current.description,\r\n              voz: current.voz,\r\n              activeTime: current.activeTime,\r\n            };\r\n\r\n            exerciseList.push(temp);\r\n          });\r\n          setup = exercisess.setup;\r\n        }\r\n      });\r\n      console.log(\"exercise list--\", exerciseList, setup);\r\n      this.setState({\r\n        exercises: exerciseList,\r\n        // setup:setup ,\r\n        setup: this.updateSetup(setup),\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  updateSetup(setup) {\r\n    const { repetitionAmount, restTimeMin, restTimeSec } =\r\n      this.props.navigation.state.params;\r\n    let newSetup = {};\r\n    let aux = parseInt(setup.repeticiones);\r\n    if (aux) {\r\n      console.log(\"if------\", repetitionAmount);\r\n      newSetup.repetitions = Math.round((repetitionAmount / 100) * aux);\r\n      console.log(\"after set if------\", repetitionAmount);\r\n    } else {\r\n      console.log(\"else\");\r\n      newSetup.repetitions = Math.round(repetitionAmount / 100);\r\n    }\r\n    newSetup.restTimeMin = restTimeMin;\r\n    newSetup.restTimeSec = restTimeSec;\r\n    newSetup.series = setup.series;\r\n    // console.log(\r\n    //   \"setup---\",\r\n    //   setup.repetitions,\r\n    //   \"  |||| newSetup rep--- \",\r\n    //   newSetup.repetitions\r\n    // );\r\n    return newSetup;\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    BackHandler.addEventListener(\"hardwareBackPress\", this.handleBackButton);\r\n    this.alertChange(\"start\");\r\n    if (this.props.connection) {\r\n      console.warn(\"did mount routine list\");\r\n      this.getRoutineList();\r\n    } else {\r\n      console.warn(\"else---\");\r\n      this.getExerciseOffline(this.state.currentPosition);\r\n    }\r\n  };\r\n\r\n  changeCurrentExercise = () => {\r\n    // console.log(\"oidsj--\", this.state);\r\n    // console.warn(\"currents exercise---\", this.state.currentExercise +1 , this.state.exercises.length - 1)\r\n    if (this.state.currentExercise + 1 > this.state.exercises.length - 1) {\r\n      console.warn(\"in if current exercicse\");\r\n      this.alertChange(\"phase\");\r\n      this.changeCurrentPhase();\r\n    } else if (\r\n      this.state.currentExercise + 1 <=\r\n      this.state.exercises.length - 1\r\n    ) {\r\n      console.warn(\"in else current exercicse\");\r\n      this.alertChange(\"exercise\");\r\n      this.setState({ currentExercise: this.state.currentExercise + 1 });\r\n    }\r\n  };\r\n\r\n  changeCurrentPhase = () => {\r\n    if (this.state.currentPosition > 4) {\r\n      this.props.navigation.navigate(\"EndRoutine\", {\r\n        props: this.props,\r\n        routineIsNotOver: false,\r\n      });\r\n    } else {\r\n      if (this.state.currentPosition + 1 === 5) {\r\n        this.props.navigation.navigate(\"EndRoutine\", {\r\n          routineIsNotOver: false,\r\n        });\r\n      }\r\n      this.setState({\r\n        currentPosition: this.state.currentPosition + 1,\r\n        exercises: [],\r\n        setup: {},\r\n        currentExercise: 0,\r\n        loading: false,\r\n      });\r\n      console.log(\"position  +1---\", this.state.currentPosition + 1);\r\n      this.props.connection\r\n        ? this.getPhaseList(this.state.currentPosition + 1)\r\n        : this.getExerciseOffline(this.state.currentPosition + 1);\r\n    }\r\n  };\r\n\r\n  confirmationFinishRoutine = () => {\r\n    Alert.alert(\r\n      \"Est√°s seguro de que quieres terminar la rutina? \",\r\n      \"Si cancelas la rutina perder√°s el progreso de este d√≠a. \",\r\n      [\r\n        {\r\n          text: \"Regresar\",\r\n          onPress: () => {},\r\n          style: \"cancel\",\r\n        },\r\n        {\r\n          text: \"Cancelar Rutina\",\r\n          onPress: () => {\r\n            this.props.navigation.navigate(\"EndRoutine\", {\r\n              routineIsNotOver: true,\r\n            });\r\n          },\r\n        },\r\n      ],\r\n      { cancelable: false }\r\n    );\r\n  };\r\n\r\n  LoadingModal = () => {\r\n    const moment = this.state.modalText;\r\n    const text =\r\n      moment === \"start\"\r\n        ? \"¬°La rutina est√° por comenzar!\"\r\n        : moment === \"phase\"\r\n        ? \"¬°Prep√°rate para la siguiente etapa!\"\r\n        : moment === \"exercise\"\r\n        ? \"¬°Prep√°rate para el siguiente ejercicio!\"\r\n        : \"¬°Prep√°rate para la siguiente serie!\";\r\n    return (\r\n      <Modal visible={this.state.showModal}>\r\n        <View style={styles.modalView}>\r\n          <View style={styles.innermodalView}>\r\n            <View style={styles.imageModalView}>\r\n              {/* <View style={{marginBottom:\"3%\", marginLeft:\"4%\"}}> */}\r\n              <Image\r\n                source={\r\n                  moment === \"start\"\r\n                    ? require(\"../../assets/images/apptivateLogo.png\")\r\n                    : moment === \"phase\"\r\n                    ? require(\"../../assets/images/success.png\")\r\n                    : moment === \"exercise\"\r\n                    ? require(\"../../assets/images/success.png\")\r\n                    : require(\"../../assets/images/success.png\")\r\n                }\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  borderRadius: 50,\r\n                }}\r\n              />\r\n            </View>\r\n\r\n            <Text\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: vmin(8),\r\n                color: \"rgba(153, 153, 153, 1)\",\r\n                marginTop: \"5%\",\r\n              }}\r\n            >\r\n              {text}\r\n            </Text>\r\n            <ActivityIndicator size=\"large\" color=\"#6979f8\" />\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const labels = [\"Calentar\", \"Estirar\", \"Activar\", \"Estirar\", \"Enfriar\"];\r\n    const customStyles = {\r\n      stepIndicatorSize: vmin(6),\r\n      currentStepIndicatorSize: vmin(7),\r\n      separatorStrokeWidth: 2,\r\n      currentStepStrokeWidth: 3,\r\n      stepStrokeCurrentColor: \"rgba(105,121,248,1)\", //borde seleccionado\r\n      stepStrokeWidth: 3,\r\n      stepStrokeFinishedColor: \"rgba(64,64,64,1)\",\r\n      stepStrokeUnFinishedColor: \"#CDD2FD\", // morado\r\n      separatorFinishedColor: \"rgba(64,64,64,1)\",\r\n      separatorUnFinishedColor: \"#aaaaaa\",\r\n      stepIndicatorFinishedColor: \"rgba(64,64,64,1)\",\r\n      stepIndicatorUnFinishedColor: \"#CDD2FD\", //Gris\r\n      stepIndicatorCurrentColor: \"rgba(105,121,248,1)\", //morado\r\n      stepIndicatorLabelFontSize: vmin(3),\r\n      currentStepIndicatorLabelFontSize: vmin(3),\r\n      stepIndicatorLabelCurrentColor: \"white\", // label dentro de la bolita\r\n      stepIndicatorLabelFinishedColor: \"#CDD2FD\", //Gris\r\n      stepIndicatorLabelUnFinishedColor: \"#aaaaaa\",\r\n      labelColor: \"#999999\",\r\n      labelSize: vmin(3),\r\n      currentStepLabelColor: \"black\", // color de la label de abajo\r\n    };\r\n\r\n    if (\r\n      this.state.exercises[this.state.currentExercise] === undefined ||\r\n      this.state.loading\r\n    ) {\r\n      return (\r\n        <View\r\n          style={{ justifyContent: \"center\", height: \"100%\", marginTop: \"5%\" }}\r\n        >\r\n          <this.LoadingModal moment={this.state.modalText} />\r\n        </View>\r\n      );\r\n    } else {\r\n      // console.log(\"changnee----\", Object.values(this.state.exercises));\r\n      return (\r\n        <View\r\n          style={{ width: \"100%\", height: \"100%\", backgroundColor: \"white\" }}\r\n        >\r\n          <this.LoadingModal />\r\n          <View style={{ height: \"5%\" }}>\r\n            <Text>{\"\"}</Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"8%\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-start\",\r\n              alignItems: \"center\",\r\n              borderBottomColor: \"rgba(214, 212, 210,1)\",\r\n              borderBottomWidth: 1,\r\n            }}\r\n          >\r\n            <Logo />\r\n            <Text\r\n              style={{\r\n                marginLeft: \"5%\",\r\n                fontSize: vmin(5),\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              Rutina\r\n            </Text>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.button2,\r\n                {\r\n                  marginLeft: \"20%\",\r\n                },\r\n              ]}\r\n              onPress={() => {\r\n                //this.confirmationFinishRoutine();\r\n                Alert.alert(\r\n                  \"Abandonar rutina\",\r\n                  \"¬øEsta segur@ que quiere abandonar la rutina? Se va a perder todo el progreso que lleva hasta el momento.\",\r\n                  [\r\n                    {\r\n                      text: \"Cancelar\",\r\n                    },\r\n                    {\r\n                      text: \"ABANDONAR\",\r\n                      onPress: () =>\r\n                        this.props.navigation.navigate(\"EndRoutine\", {\r\n                          routineIsNotOver: true,\r\n                        }),\r\n                    },\r\n                  ],\r\n                  { cancelable: false }\r\n                );\r\n              }}\r\n            >\r\n              <Text style={{ color: \"white\" }}>Abandonar Rutina</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View style={{ width: \"100%\", height: \"90%\" }}>\r\n            <View style={styles.screenContainer}>\r\n              <View style={styles.containerSteps}>\r\n                <StepIndicator\r\n                  customStyles={customStyles}\r\n                  currentPosition={this.state.currentPosition}\r\n                  labels={labels}\r\n                  stepCount={5}\r\n                />\r\n              </View>\r\n\r\n              <View style={styles.containerCard}>\r\n                <EjercicioInactivo\r\n                  key={\"ejercicio\" + this.state.currentExercise}\r\n                  indicator={`${this.state.currentExercise + 1} de ${\r\n                    this.state.exercises.length\r\n                  }`}\r\n                  setup={this.state.setup}\r\n                  exercise={this.state.exercises[this.state.currentExercise]}\r\n                  changeCurrentExercise={this.changeCurrentExercise}\r\n                  alertChange={this.alertChange}\r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  // console.warn(\"exercise [rpos======= \", store.DownloadReducer.ExerciseRoutine);\r\n  // console.warn(\"user [rpos======= \", store.User.user);\r\n  return {\r\n    user: store.User.user,\r\n    connection: store.User.connection,\r\n    ExerciseRoutine: store.DownloadReducer.ExerciseRoutine,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({});\r\nexport default connect(MapStateToProps, MapDispatchToProps)(Ejercicios);\r\n\r\nconst styles = StyleSheet.create({\r\n  screenContainer: { width: \"100%\", height: \"100%\", backgroundColor: \"white\" },\r\n  // header: {\r\n  //   width: \"100%\",\r\n  //   alignItems: \"center\",\r\n  //   backgroundColor: \"peru\",\r\n  //   height: \"7%\",\r\n  //   justifyContent: \"center\",\r\n  // },\r\n  // title: {\r\n  //   textAlign: \"center\",\r\n  //   fontWeight: \"bold\",\r\n  // },\r\n  containerSteps: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    height: \"12%\",\r\n    justifyContent: \"center\",\r\n    // alignItems: \"center\",\r\n  },\r\n  containerCard: {\r\n    height: \"88%\",\r\n  },\r\n  containerButton: {\r\n    height: \"10%\",\r\n    width: \"100%\",\r\n    // backgroundColor: \"red\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: vmin(2),\r\n  },\r\n  button: {\r\n    backgroundColor: \"#6979F8\",\r\n    margin: vmin(2),\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  button2: {\r\n    backgroundColor: \"rgba(199, 0, 57,1)\",\r\n    width: \"40%\",\r\n    height: \"70%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 3,\r\n    },\r\n    shadowOpacity: 0.29,\r\n    shadowRadius: 4.65,\r\n\r\n    elevation: 7,\r\n  },\r\n  modalView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    height: \"100%\",\r\n    minHeight: \"100%\",\r\n    width: \"100%\",\r\n    //backgroundColor: \"salmon\",\r\n    alignItems: \"center\",\r\n  },\r\n  innermodalView: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  imageModalView: {\r\n    height: 150,\r\n    width: 150,\r\n    justifyContent: \"center\",\r\n    // backgroundColor: \"salmon\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}