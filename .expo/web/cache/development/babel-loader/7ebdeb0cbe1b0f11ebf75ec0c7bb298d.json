{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\PublicUser\\\\RecordTrainingData.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nimport firebase from \"../../../database/firebase\";\nimport { Slider } from \"react-native-range-slider-expo\";\nimport RadioButton from \"expo-radio-button\";\nimport LightBulb from \"@expo/vector-icons/FontAwesome\";\nimport { connect } from \"react-redux\";\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\nimport ChargeScreen from \"../Simple/ChargeScreen\";\n\nvar RecordTrainingData = function RecordTrainingData(props) {\n  console.log(\"Las props que llegan son\", props);\n\n  var _useState = useState({\n    perceivedForce: \"\",\n    size: \"\",\n    weight: \"\",\n    age: \"\",\n    evolutionTime: \"\",\n    amputationLevel: \"\",\n    amputationPhase: \"\",\n    medicineList: [],\n    conditionList: [],\n    medicine: \"\",\n    condition: \"\",\n    corporalMass: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      perceivedVal = _useState4[0],\n      setPerceivedVal = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      current = _useState6[0],\n      setCurrent = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      current1 = _useState8[0],\n      setCurrent1 = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  useEffect(function () {\n    console.log(\"Las props que llegan son\", props);\n    firebase.db.collection(\"users\").doc(props.user.uid).get().then(function (user_db) {\n      setData(_objectSpread({}, user_db.data().medical));\n      setCurrent(user_db.data().medical.amputationLevel);\n      setCurrent1(user_db.data().medical.amputationPhase);\n      console.log(\"asdfasdfasdfasdfasdfasdfasdf\", user_db.data().medical);\n      setLoading(false);\n    }).catch(function (e) {\n      console.log(\"El error es \", e);\n    });\n  }, []);\n\n  var saveMedicalData = function saveMedicalData() {\n    return _regeneratorRuntime.async(function saveMedicalData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"users\").doc(props.user.uid).update({\n              medical: {\n                perceivedForce: data.perceivedForce,\n                size: data.size,\n                weight: data.weight,\n                age: data.age,\n                evolutionTime: data.evolutionTime,\n                amputationLevel: data.amputationLevel,\n                amputationPhase: data.amputationPhase,\n                corporalMass: parseInt(data.weight) / parseInt(data.size)\n              }\n            }).then(function (e) {\n              props.setUserMedical({\n                medical: {\n                  perceivedForce: data.perceivedForce,\n                  size: data.size,\n                  weight: data.weight,\n                  age: data.age,\n                  evolutionTime: data.evolutionTime,\n                  amputationLevel: data.amputationLevel,\n                  amputationPhase: data.amputationPhase,\n                  corporalMass: parseInt(data.weight) / parseInt(data.size)\n                },\n                control: {\n                  trainingPhase: \"Inicial\",\n                  activeWeek: \"week1\",\n                  activeDay: 0,\n                  record: []\n                }\n              });\n              props.navigation.state.params.start ? props.navigation.navigate(\"CustomizeRoutine\", {\n                btnText: \"Continuar\"\n              }) : props.navigation.navigate(\"ProfileScreen\");\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (loading) {\n    return React.createElement(View, {\n      style: {\n        backgroundColor: \"#ffffff\",\n        justifyContent: \"center\",\n        height: \"100%\",\n        width: \"100%\",\n        marginTop: \"5%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, React.createElement(ChargeScreen, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: \"#ffffff\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, React.createElement(ScrollView, {\n      style: styles.scroll,\n      contentContainerStyle: styles.scrollContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        height: \"10%\",\n        width: \"80%\",\n        marginLeft: \"10%\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: vmin(5)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"Datos M\\xE9dicos\"), React.createElement(Text, {\n      style: {\n        fontSize: vmin(4),\n        flexWrap: \"wrap\",\n        textAlign: \"left\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, \"Por favor ingrese sus datos m\\xE9dicos para aplicar restricciones de seguridad e iniciar la rutina.\")), React.createElement(View, {\n      style: {\n        height: \"90%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: [updateMedicalDataStyles.containerInput, {\n        marginTop: \"3%\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.sliderTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, \"Estatura (CM)\"), React.createElement(View, {\n      style: styles.resultSlider,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }\n    }, \"Valor: \", data.size))), React.createElement(View, {\n      style: styles.sliderContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, React.createElement(Slider, {\n      min: 120,\n      max: 250,\n      step: 1,\n      valueOnChange: function valueOnChange(value) {\n        setData(_objectSpread(_objectSpread({}, data), {}, {\n          size: value + \"\"\n        }));\n      },\n      initialValue: parseInt(data.size),\n      knobColor: \"#6979F8\",\n      valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n      inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n      outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }))), React.createElement(View, {\n      style: updateMedicalDataStyles.containerInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.sliderTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, \"Peso (KG)\"), React.createElement(View, {\n      style: styles.resultSlider,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }, \"Valor: \", data.weight))), React.createElement(View, {\n      style: styles.sliderContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, React.createElement(Slider, {\n      min: 20,\n      max: 300,\n      step: 1,\n      valueOnChange: function valueOnChange(value) {\n        setData(_objectSpread(_objectSpread({}, data), {}, {\n          weight: value + \"\"\n        }));\n      },\n      initialValue: parseInt(data.weight),\n      knobColor: \"#6979F8\",\n      valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n      inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n      outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }))), React.createElement(View, {\n      style: updateMedicalDataStyles.containerInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.sliderTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, \"Edad\"), React.createElement(View, {\n      style: styles.resultSlider,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }, \"Valor: \", data.age))), React.createElement(View, {\n      style: styles.sliderContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }, React.createElement(Slider, {\n      min: 10,\n      max: 100,\n      step: 1,\n      valueOnChange: function valueOnChange(value) {\n        setData(_objectSpread(_objectSpread({}, data), {}, {\n          age: value + \"\"\n        }));\n      },\n      initialValue: parseInt(data.age),\n      knobColor: \"#6979F8\",\n      valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n      inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n      outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }))), React.createElement(View, {\n      style: updateMedicalDataStyles.containerInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.sliderTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, \"Tiempo con la lesi\\xF3n (Meses)\"), React.createElement(View, {\n      style: styles.resultSlider,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }, \"Valor: \", data.evolutionTime))), React.createElement(View, {\n      style: styles.sliderContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 15\n      }\n    }, React.createElement(Slider, {\n      min: 1,\n      max: 100,\n      step: 1,\n      valueOnChange: function valueOnChange(value) {\n        setData(_objectSpread(_objectSpread({}, data), {}, {\n          evolutionTime: value + \"\"\n        }));\n      },\n      initialValue: parseInt(data.evolutionTime),\n      knobColor: \"#6979F8\",\n      valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n      inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n      outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }\n    }))), React.createElement(View, {\n      style: updateMedicalDataStyles.containerInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.sliderTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        borderColor: \"rgba(255, 231, 35,1)\",\n        paddingBottom: \"1%\",\n        borderBottomWidth: vmin(0.8),\n        height: \"100%\",\n        marginBottom: \"4%\",\n        width: \"55%\",\n        flexDirection: \"row\"\n      },\n      onPress: function onPress() {\n        Alert.alert(\"Esfuerzo Percibido\", \"Es una forma de clasificar la intensidad de las actividades físicas a través de las propias sensaciones que siente el individuo que realiza la actividad en cuestión. Para medir su esfuerzo percibido siéntese y levántese de una silla 10 veces y califique como se siente al finalizar. \");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 19\n      }\n    }, \"Esfuerzo Percibido\"), React.createElement(LightBulb, {\n      name: \"lightbulb-o\",\n      size: vmin(6),\n      color: \"rgba(255, 231, 35,1)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 19\n      }\n    })), React.createElement(View, {\n      style: styles.resultSlider,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 19\n      }\n    }, \"Valor: \", perceivedVal))), React.createElement(View, {\n      style: styles.sliderContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 15\n      }\n    }, React.createElement(Slider, {\n      min: 1,\n      max: 5,\n      step: 1,\n      valueOnChange: function valueOnChange(value) {\n        var stirngVal = \"Liviano\";\n        setPerceivedVal(value);\n\n        switch (value) {\n          case 1:\n            stirngVal = \"Excesivamente Liviano\";\n            break;\n\n          case 2:\n            stirngVal = \"Liviano\";\n            break;\n\n          case 3:\n            stirngVal = \"Ni liviano ni pesado\";\n            break;\n\n          case 4:\n            stirngVal = \"Pesado\";\n            break;\n\n          case 5:\n            stirngVal = \"Excesivamente Pesado\";\n            break;\n\n          default:\n            stirngVal = \"Liviano\";\n            break;\n        }\n\n        setData(_objectSpread(_objectSpread({}, data), {}, {\n          perceivedForce: stirngVal\n        }));\n      },\n      initialValue: data.perceivedForce == \"Excesivamente Liviano\" ? 1 : data.perceivedForce == \"Liviano\" ? 2 : data.perceivedForce == \"Ni liviano ni pesado\" ? 3 : data.perceivedForce == \"Pesado\" ? 4 : 5,\n      knobColor: \"#6979F8\",\n      valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n      inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n      outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }))), React.createElement(View, {\n      style: [updateMedicalDataStyles.containerInput, {\n        height: \"23%\",\n        marginBottom: \"5%\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }\n    }, \"Nivel de Amputaci\\xF3n\"), React.createElement(View, {\n      style: styles.radioOptions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: {\n        width: \"30%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/images/transfemoral.png\"),\n      style: styles.imageContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 19\n      }\n    }), React.createElement(RadioButton, {\n      value: \"Transfemoral\",\n      containerStyle: {\n        flexDirection: \"column-reverse\"\n      },\n      selected: current,\n      onSelected: function onSelected(value) {\n        setCurrent(value), setData(_objectSpread(_objectSpread({}, data), {}, {\n          amputationLevel: value\n        }));\n      },\n      radioBackground: \"#6979F8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }\n    }, \"\\n\", \"Transfemoral\", \"\\n\"))), React.createElement(View, {\n      style: {\n        width: \"30%\",\n        flexDirection: \"column\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/images/desarticulacion.png\"),\n      style: styles.imageContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 19\n      }\n    }), React.createElement(RadioButton, {\n      value: \"Desarticulaci\\xF3n de rodilla\",\n      containerStyle: {\n        flexDirection: \"column-reverse\"\n      },\n      selected: current,\n      onSelected: function onSelected(value) {\n        setCurrent(value), setData(_objectSpread(_objectSpread({}, data), {}, {\n          amputationLevel: value\n        }));\n      },\n      radioBackground: \"#6979F8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: {\n        flexWrap: \"wrap\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 21\n      }\n    }, \"Desarticulaci\\xF3n de rodilla\"))), React.createElement(View, {\n      style: {\n        width: \"30%\",\n        flexDirection: \"column\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/images/transtibial.png\"),\n      style: styles.imageContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 19\n      }\n    }), React.createElement(RadioButton, {\n      value: \"Transtibial\",\n      containerStyle: {\n        flexDirection: \"column-reverse\"\n      },\n      selected: current,\n      onSelected: function onSelected(value) {\n        setCurrent(value), setData(_objectSpread(_objectSpread({}, data), {}, {\n          amputationLevel: value\n        }));\n      },\n      radioBackground: \"#6979F8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }\n    }, \"\\n\", \"Transtibial \", \"\\n\"))))), React.createElement(View, {\n      style: [updateMedicalDataStyles.containerInput, {\n        height: \"18%\",\n        marginBottom: \"5%\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 15\n      }\n    }, \"Fase de rehabilitaci\\xF3n\"), React.createElement(View, {\n      style: styles.radioOptions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: {\n        width: \"30%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/images/desarticulacion.png\"),\n      style: styles.imageContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 19\n      }\n    }), React.createElement(RadioButton, {\n      value: \"Preprot\\xE9sico\",\n      containerStyle: {\n        flexDirection: \"column-reverse\"\n      },\n      selected: current1,\n      onSelected: function onSelected(value) {\n        setCurrent1(value), setData(_objectSpread(_objectSpread({}, data), {}, {\n          amputationPhase: value\n        }));\n      },\n      radioBackground: \"#6979F8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 21\n      }\n    }, \"Preprot\\xE9sico\"))), React.createElement(View, {\n      style: {\n        width: \"30%\",\n        flexDirection: \"column\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/images/protesis.png\"),\n      style: styles.imageContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 19\n      }\n    }), React.createElement(RadioButton, {\n      value: \"Prot\\xE9sico\",\n      containerStyle: {\n        flexDirection: \"column-reverse\"\n      },\n      selected: current1,\n      onSelected: function onSelected(value) {\n        setCurrent1(value), setData(_objectSpread(_objectSpread({}, data), {}, {\n          amputationPhase: value\n        }));\n      },\n      radioBackground: \"#6979F8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: {\n        flexWrap: \"wrap\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 21\n      }\n    }, \"Prot\\xE9sico\"))))), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: updateMedicalDataStyles.button,\n      onPress: function onPress() {\n        return saveMedicalData();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"white\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }\n    }, \"Actualizar Datos M\\xE9dicos\"))), React.createElement(View, {\n      style: {\n        padding: 50\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 13\n      }\n    }))));\n  }\n};\n\nvar MapStateToProps = function MapStateToProps(store) {\n  console.log(\"mapstate patient register-----\", store.User.user);\n  return {\n    user: store.User.user\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {\n    setUser: function setUser(val) {\n      return dispatch(actionsUser.SET_USER(val));\n    },\n    setUserMedical: function setUserMedical(val) {\n      return dispatch(actionsUser.UPDATE_USER_MEDICAL(val));\n    },\n    setUserCompanion: function setUserCompanion(val) {\n      return dispatch(actionsUser.UPDATE_USER_COMPANION(val));\n    },\n    setUserRole: function setUserRole(val) {\n      return dispatch(actionsUser.UPDATE_USER_ROLE(val));\n    }\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(RecordTrainingData);\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#ffffff\"\n  },\n  sliderContainer: {\n    height: vmin(20),\n    width: \"100%\",\n    marginLeft: \"2%\",\n    marginTop: vmin(2),\n    marginBottom: \"8%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  imageContainer: {\n    width: \"100%\",\n    height: vmin(30),\n    resizeMode: \"contain\"\n  },\n  scroll: {\n    height: \"100%\",\n    width: \"100%\"\n  },\n  scrollContent: {\n    paddingBottom: 30,\n    flexGrow: 1\n  },\n  radioOptions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\"\n  },\n  resultSlider: {\n    width: \"30%\",\n    height: \"100%\",\n    backgroundColor: \"rgba(105, 121, 248, 0.5)\",\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  sliderTitle: {\n    height: \"25%\",\n    width: \"90%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  }\n});\nvar updateMedicalDataStyles = StyleSheet.create({\n  screenContainer: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"white\"\n  },\n  containerInput: {\n    height: \"10%\",\n    width: \"90%\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    marginTop: vmin(1),\n    marginBottom: \"0%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  input: {\n    height: \"60%\",\n    width: \"100%\",\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  containerList: {\n    width: \"90%\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    marginTop: vmin(1),\n    marginBottom: vmin(1),\n    justifyContent: \"space-evenly\"\n  },\n  timeContainer: {\n    height: vmin(14),\n    width: \"90%\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    marginTop: vmin(1),\n    marginBottom: vmin(1),\n    justifyContent: \"space-evenly\"\n  },\n  textInput: {\n    width: \"100%\",\n    textAlign: \"center\"\n  },\n  containerButton: {\n    height: \"10%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: vmin(2)\n  },\n  button: {\n    backgroundColor: \"#6979F8\",\n    width: \"90%\",\n    height: \"18%\",\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    marginBottom: \"10%\"\n  },\n  repetitionInputContainer: {\n    height: \"50%\",\n    width: \"100%\",\n    marginTop: \"2%\",\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  groupPickerContainer: {\n    height: vmin(16),\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: vmin(1),\n    marginBottom: vmin(1)\n  },\n  listItemsContainer: {\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5,\n    marginLeft: \"5%\",\n    marginRight: \"15%\",\n    width: \"80%\"\n  },\n  containerFlexRow: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\"\n  },\n  headerInput: {\n    width: \"100%\",\n    textAlign: \"left\",\n    fontSize: vmin(4),\n    fontWeight: \"bold\",\n    left: vmin(1.5)\n  },\n  containerTextHeader: {\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  textHeader: {\n    fontWeight: \"bold\",\n    fontSize: vmin(5),\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/PublicUser/RecordTrainingData.tsx"],"names":["React","useState","useEffect","require","vmin","firebase","Slider","RadioButton","LightBulb","connect","actionsUser","ChargeScreen","RecordTrainingData","props","console","log","perceivedForce","size","weight","age","evolutionTime","amputationLevel","amputationPhase","medicineList","conditionList","medicine","condition","corporalMass","data","setData","perceivedVal","setPerceivedVal","current","setCurrent","current1","setCurrent1","loading","setLoading","db","collection","doc","user","uid","get","then","user_db","medical","catch","e","saveMedicalData","update","parseInt","setUserMedical","control","trainingPhase","activeWeek","activeDay","record","navigation","state","params","start","navigate","btnText","backgroundColor","justifyContent","height","width","marginTop","flex","styles","scroll","scrollContent","marginLeft","alignItems","fontWeight","fontSize","flexWrap","textAlign","updateMedicalDataStyles","containerInput","sliderTitle","resultSlider","sliderContainer","value","borderColor","paddingBottom","borderBottomWidth","marginBottom","flexDirection","Alert","alert","stirngVal","radioOptions","imageContainer","button","color","padding","MapStateToProps","store","User","MapDispatchToProps","dispatch","setUser","val","SET_USER","UPDATE_USER_MEDICAL","setUserCompanion","UPDATE_USER_COMPANION","setUserRole","UPDATE_USER_ROLE","StyleSheet","create","container","resizeMode","flexGrow","borderRadius","screenContainer","marginRight","input","borderWidth","containerList","timeContainer","textInput","containerButton","repetitionInputContainer","groupPickerContainer","listItemsContainer","containerFlexRow","headerInput","left","containerTextHeader","textHeader"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  ScrollView,\r\n  Image,\r\n  Alert,\r\n} from \"react-native\";\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\nimport firebase from \"../../../database/firebase\";\r\nimport { Slider } from \"react-native-range-slider-expo\";\r\nimport StepIndicator from \"react-native-step-indicator\";\r\nimport RadioButton from \"expo-radio-button\";\r\n\r\nimport Add from \"react-native-vector-icons/Ionicons\";\r\n\r\nimport Arrow from \"react-native-vector-icons/MaterialIcons\";\r\n\r\nimport Check from \"react-native-vector-icons/EvilIcons\";\r\nimport LightBulb from \"react-native-vector-icons/FontAwesome\";\r\n\r\n// redux\r\n\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\r\nimport ChargeScreen from \"../Simple/ChargeScreen\";\r\n\r\nconst RecordTrainingData = (props) => {\r\n  console.log(\"Las props que llegan son\", props);\r\n  const [data, setData] = useState({\r\n    perceivedForce: \"\",\r\n    size: \"\",\r\n    weight: \"\",\r\n    age: \"\",\r\n    evolutionTime: \"\",\r\n    amputationLevel: \"\",\r\n    amputationPhase: \"\",\r\n    medicineList: [],\r\n    conditionList: [],\r\n    medicine: \"\",\r\n    condition: \"\",\r\n    corporalMass: 0,\r\n  });\r\n\r\n  const [perceivedVal, setPerceivedVal] = useState(0);\r\n  const [current, setCurrent] = useState(\"\");\r\n  const [current1, setCurrent1] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Las props que llegan son\", props);\r\n\r\n    firebase.db\r\n      .collection(\"users\")\r\n      .doc(props.user.uid)\r\n      .get()\r\n      .then((user_db: any) => {\r\n        setData({ ...user_db.data().medical });\r\n        setCurrent(user_db.data().medical.amputationLevel);\r\n        setCurrent1(user_db.data().medical.amputationPhase);\r\n        console.log(\"asdfasdfasdfasdfasdfasdfasdf\", user_db.data().medical);\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"El error es \", e);\r\n      });\r\n  }, []);\r\n\r\n  const saveMedicalData = async () => {\r\n    await firebase.db\r\n      .collection(\"users\")\r\n      .doc(props.user.uid)\r\n      .update({\r\n        medical: {\r\n          perceivedForce: data.perceivedForce,\r\n          size: data.size,\r\n          weight: data.weight,\r\n          age: data.age,\r\n          evolutionTime: data.evolutionTime,\r\n          amputationLevel: data.amputationLevel,\r\n          amputationPhase: data.amputationPhase,\r\n          corporalMass: parseInt(data.weight) / parseInt(data.size),\r\n        },\r\n        // \"Inicial\",\"Intermedia\",\"Avanzada\"\r\n      })\r\n      .then((e) => {\r\n        props.setUserMedical({\r\n          medical: {\r\n            perceivedForce: data.perceivedForce,\r\n            size: data.size,\r\n            weight: data.weight,\r\n            age: data.age,\r\n            evolutionTime: data.evolutionTime,\r\n            amputationLevel: data.amputationLevel,\r\n            amputationPhase: data.amputationPhase,\r\n            corporalMass: parseInt(data.weight) / parseInt(data.size),\r\n          },\r\n\r\n          control: {\r\n            trainingPhase: \"Inicial\",\r\n            activeWeek: \"week1\",\r\n            activeDay: 0,\r\n            record: [],\r\n          },\r\n        });\r\n        props.navigation.state.params.start\r\n          ? props.navigation.navigate(\"CustomizeRoutine\", {\r\n              btnText: \"Continuar\",\r\n            })\r\n          : props.navigation.navigate(\"ProfileScreen\");\r\n      });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View\r\n        style={{\r\n          backgroundColor: \"#ffffff\",\r\n          justifyContent: \"center\",\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          marginTop: \"5%\",\r\n        }}\r\n      >\r\n        <ChargeScreen />\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={{ flex: 1, backgroundColor: \"#ffffff\" }}>\r\n        <ScrollView\r\n          style={styles.scroll}\r\n          contentContainerStyle={styles.scrollContent}\r\n        >\r\n          <View\r\n            style={{\r\n              height: \"10%\",\r\n              width: \"80%\",\r\n              marginLeft: \"10%\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Text style={{ fontWeight: \"bold\", fontSize: vmin(5) }}>\r\n              Datos Médicos\r\n            </Text>\r\n            <Text\r\n              style={{ fontSize: vmin(4), flexWrap: \"wrap\", textAlign: \"left\" }}\r\n            >\r\n              Por favor ingrese sus datos médicos para aplicar restricciones de\r\n              seguridad e iniciar la rutina.\r\n            </Text>\r\n          </View>\r\n          <View style={{ height: \"90%\" }}>\r\n            <View\r\n              style={[\r\n                updateMedicalDataStyles.containerInput,\r\n                { marginTop: \"3%\" },\r\n              ]}\r\n            >\r\n              <View style={styles.sliderTitle}>\r\n                <Text style={{}}>Estatura (CM)</Text>\r\n                <View style={styles.resultSlider}>\r\n                  <Text style={{}}>Valor: {data.size}</Text>\r\n                </View>\r\n              </View>\r\n\r\n              <View style={styles.sliderContainer}>\r\n                <Slider\r\n                  min={120}\r\n                  max={250}\r\n                  step={1}\r\n                  valueOnChange={(value) => {\r\n                    setData({ ...data, size: value + \"\" });\r\n                  }}\r\n                  initialValue={parseInt(data.size)}\r\n                  knobColor=\"#6979F8\"\r\n                  valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n                  inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n                  outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View style={updateMedicalDataStyles.containerInput}>\r\n              <View style={styles.sliderTitle}>\r\n                <Text style={{}}>Peso (KG)</Text>\r\n                <View style={styles.resultSlider}>\r\n                  <Text style={{}}>Valor: {data.weight}</Text>\r\n                </View>\r\n              </View>\r\n              <View style={styles.sliderContainer}>\r\n                <Slider\r\n                  min={20}\r\n                  max={300}\r\n                  step={1}\r\n                  valueOnChange={(value) => {\r\n                    setData({ ...data, weight: value + \"\" });\r\n                  }}\r\n                  initialValue={parseInt(data.weight)}\r\n                  knobColor=\"#6979F8\"\r\n                  valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n                  inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n                  outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View style={updateMedicalDataStyles.containerInput}>\r\n              <View style={styles.sliderTitle}>\r\n                <Text style={{}}>Edad</Text>\r\n                <View style={styles.resultSlider}>\r\n                  <Text style={{}}>Valor: {data.age}</Text>\r\n                </View>\r\n              </View>\r\n              <View style={styles.sliderContainer}>\r\n                <Slider\r\n                  min={10}\r\n                  max={100}\r\n                  step={1}\r\n                  valueOnChange={(value) => {\r\n                    setData({ ...data, age: value + \"\" });\r\n                  }}\r\n                  initialValue={parseInt(data.age)}\r\n                  knobColor=\"#6979F8\"\r\n                  valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n                  inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n                  outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View style={updateMedicalDataStyles.containerInput}>\r\n              <View style={styles.sliderTitle}>\r\n                <Text style={{}}>Tiempo con la lesión (Meses)</Text>\r\n                <View style={styles.resultSlider}>\r\n                  <Text style={{}}>Valor: {data.evolutionTime}</Text>\r\n                </View>\r\n              </View>\r\n              <View style={styles.sliderContainer}>\r\n                <Slider\r\n                  min={1}\r\n                  max={100}\r\n                  step={1}\r\n                  valueOnChange={(value) => {\r\n                    setData({ ...data, evolutionTime: value + \"\" });\r\n                  }}\r\n                  initialValue={parseInt(data.evolutionTime)}\r\n                  knobColor=\"#6979F8\"\r\n                  valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n                  inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n                  outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n                />\r\n              </View>\r\n            </View>\r\n            <View style={updateMedicalDataStyles.containerInput}>\r\n              <View style={styles.sliderTitle}>\r\n                <TouchableOpacity\r\n                  style={{\r\n                    borderColor: \"rgba(255, 231, 35,1)\",\r\n                    paddingBottom: \"1%\",\r\n                    borderBottomWidth: vmin(0.8),\r\n                    height: \"100%\",\r\n                    marginBottom: \"4%\",\r\n                    width: \"55%\",\r\n                    flexDirection: \"row\",\r\n                  }}\r\n                  onPress={() => {\r\n                    Alert.alert(\r\n                      \"Esfuerzo Percibido\",\r\n                      \"Es una forma de clasificar la intensidad de las actividades físicas a través de las propias sensaciones que siente el individuo que realiza la actividad en cuestión. Para medir su esfuerzo percibido siéntese y levántese de una silla 10 veces y califique como se siente al finalizar. \"\r\n                    );\r\n                  }}\r\n                >\r\n                  <Text style={{}}>Esfuerzo Percibido</Text>\r\n\r\n                  <LightBulb\r\n                    name=\"lightbulb-o\"\r\n                    size={vmin(6)}\r\n                    color=\"rgba(255, 231, 35,1)\"\r\n                  />\r\n                  {/* <FontAwesomeIcon icon=\"fa-solid fa-lightbulb\" /> */}\r\n                </TouchableOpacity>\r\n                <View style={styles.resultSlider}>\r\n                  <Text style={{}}>Valor: {perceivedVal}</Text>\r\n                </View>\r\n              </View>\r\n              <View style={styles.sliderContainer}>\r\n                <Slider\r\n                  min={1}\r\n                  max={5}\r\n                  step={1}\r\n                  valueOnChange={(value) => {\r\n                    let stirngVal = \"Liviano\";\r\n                    setPerceivedVal(value);\r\n                    switch (value) {\r\n                      case 1:\r\n                        stirngVal = \"Excesivamente Liviano\";\r\n                        break;\r\n                      case 2:\r\n                        stirngVal = \"Liviano\";\r\n                        break;\r\n                      case 3:\r\n                        stirngVal = \"Ni liviano ni pesado\";\r\n                        break;\r\n                      case 4:\r\n                        stirngVal = \"Pesado\";\r\n                        break;\r\n                      case 5:\r\n                        stirngVal = \"Excesivamente Pesado\";\r\n                        break;\r\n                      default:\r\n                        stirngVal = \"Liviano\";\r\n                        break;\r\n                    }\r\n                    setData({ ...data, perceivedForce: stirngVal });\r\n                  }}\r\n                  initialValue={\r\n                    data.perceivedForce == \"Excesivamente Liviano\"\r\n                      ? 1\r\n                      : data.perceivedForce == \"Liviano\"\r\n                      ? 2\r\n                      : data.perceivedForce == \"Ni liviano ni pesado\"\r\n                      ? 3\r\n                      : data.perceivedForce == \"Pesado\"\r\n                      ? 4\r\n                      : 5\r\n                  }\r\n                  knobColor=\"#6979F8\"\r\n                  valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n                  inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n                  outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n                />\r\n              </View>\r\n            </View>\r\n            <View\r\n              style={[\r\n                updateMedicalDataStyles.containerInput,\r\n                { height: \"23%\", marginBottom: \"5%\" },\r\n              ]}\r\n            >\r\n              <Text style={{}}>Nivel de Amputación</Text>\r\n\r\n              <View style={styles.radioOptions}>\r\n                <View style={{ width: \"30%\" }}>\r\n                  <Image\r\n                    source={require(\"../../assets/images/transfemoral.png\")}\r\n                    style={styles.imageContainer}\r\n                  />\r\n                  <RadioButton\r\n                    value=\"Transfemoral\"\r\n                    containerStyle={{ flexDirection: \"column-reverse\" }}\r\n                    selected={current}\r\n                    onSelected={(value) => {\r\n                      setCurrent(value),\r\n                        setData({ ...data, amputationLevel: value });\r\n                    }}\r\n                    radioBackground=\"#6979F8\"\r\n                  >\r\n                    <Text style={{ textAlign: \"center\" }}>\r\n                      {\"\\n\"}Transfemoral{\"\\n\"}\r\n                    </Text>\r\n                  </RadioButton>\r\n                </View>\r\n                <View style={{ width: \"30%\", flexDirection: \"column\" }}>\r\n                  <Image\r\n                    source={require(\"../../assets/images/desarticulacion.png\")}\r\n                    style={styles.imageContainer}\r\n                  />\r\n                  <RadioButton\r\n                    value=\"Desarticulación de rodilla\"\r\n                    containerStyle={{ flexDirection: \"column-reverse\" }}\r\n                    selected={current}\r\n                    onSelected={(value) => {\r\n                      setCurrent(value),\r\n                        setData({ ...data, amputationLevel: value });\r\n                    }}\r\n                    radioBackground=\"#6979F8\"\r\n                  >\r\n                    <Text style={{ flexWrap: \"wrap\", textAlign: \"center\" }}>\r\n                      Desarticulación de rodilla\r\n                    </Text>\r\n                  </RadioButton>\r\n                </View>\r\n                <View style={{ width: \"30%\", flexDirection: \"column\" }}>\r\n                  <Image\r\n                    source={require(\"../../assets/images/transtibial.png\")}\r\n                    style={styles.imageContainer}\r\n                  />\r\n                  <RadioButton\r\n                    value=\"Transtibial\"\r\n                    containerStyle={{ flexDirection: \"column-reverse\" }}\r\n                    selected={current}\r\n                    onSelected={(value) => {\r\n                      setCurrent(value),\r\n                        setData({ ...data, amputationLevel: value });\r\n                    }}\r\n                    radioBackground=\"#6979F8\"\r\n                  >\r\n                    <Text style={{ textAlign: \"center\" }}>\r\n                      {\"\\n\"}Transtibial {\"\\n\"}\r\n                    </Text>\r\n                  </RadioButton>\r\n                </View>\r\n              </View>\r\n            </View>\r\n\r\n            <View\r\n              style={[\r\n                updateMedicalDataStyles.containerInput,\r\n                { height: \"18%\", marginBottom: \"5%\" },\r\n              ]}\r\n            >\r\n              <Text style={{}}>Fase de rehabilitación</Text>\r\n              <View style={styles.radioOptions}>\r\n                <View style={{ width: \"30%\" }}>\r\n                  <Image\r\n                    source={require(\"../../assets/images/desarticulacion.png\")}\r\n                    style={styles.imageContainer}\r\n                  />\r\n                  <RadioButton\r\n                    value=\"Preprotésico\"\r\n                    containerStyle={{ flexDirection: \"column-reverse\" }}\r\n                    selected={current1}\r\n                    onSelected={(value) => {\r\n                      setCurrent1(value),\r\n                        setData({ ...data, amputationPhase: value });\r\n                    }}\r\n                    radioBackground=\"#6979F8\"\r\n                  >\r\n                    <Text style={{ textAlign: \"center\" }}>Preprotésico</Text>\r\n                  </RadioButton>\r\n                </View>\r\n                <View style={{ width: \"30%\", flexDirection: \"column\" }}>\r\n                  <Image\r\n                    source={require(\"../../assets/images/protesis.png\")}\r\n                    style={styles.imageContainer}\r\n                  />\r\n                  <RadioButton\r\n                    value=\"Protésico\"\r\n                    containerStyle={{ flexDirection: \"column-reverse\" }}\r\n                    selected={current1}\r\n                    onSelected={(value) => {\r\n                      setCurrent1(value),\r\n                        setData({ ...data, amputationPhase: value });\r\n                    }}\r\n                    radioBackground=\"#6979F8\"\r\n                  >\r\n                    <Text style={{ flexWrap: \"wrap\", textAlign: \"center\" }}>\r\n                      Protésico\r\n                    </Text>\r\n                  </RadioButton>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View\r\n            // style={{ height: \"12%\", width: \"100%\", marginBottom: \"100%\" }}\r\n            >\r\n              <TouchableOpacity\r\n                style={updateMedicalDataStyles.button}\r\n                onPress={() => saveMedicalData()}\r\n              >\r\n                <Text style={{ color: \"white\" }}>Actualizar Datos Médicos</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View style={{ padding: 50 }} />\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  console.log(\"mapstate patient register-----\", store.User.user);\r\n  return {\r\n    user: store.User.user,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({\r\n  setUser: (val) => dispatch(actionsUser.SET_USER(val)),\r\n  setUserMedical: (val) => dispatch(actionsUser.UPDATE_USER_MEDICAL(val)),\r\n  setUserCompanion: (val) => dispatch(actionsUser.UPDATE_USER_COMPANION(val)),\r\n  setUserRole: (val) => dispatch(actionsUser.UPDATE_USER_ROLE(val)),\r\n});\r\nexport default connect(MapStateToProps, MapDispatchToProps)(RecordTrainingData);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  sliderContainer: {\r\n    height: vmin(20),\r\n    width: \"100%\",\r\n    marginLeft: \"2%\",\r\n    marginTop: vmin(2),\r\n    marginBottom: \"8%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // backgroundColor: \"salmon\",\r\n  },\r\n  imageContainer: {\r\n    width: \"100%\",\r\n    height: vmin(30),\r\n    resizeMode: \"contain\",\r\n  },\r\n\r\n  scroll: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  scrollContent: {\r\n    paddingBottom: 30,\r\n    flexGrow: 1,\r\n  },\r\n  radioOptions: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  resultSlider: {\r\n    width: \"30%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"rgba(105, 121, 248, 0.5)\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  sliderTitle: {\r\n    height: \"25%\",\r\n    width: \"90%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n\r\nconst updateMedicalDataStyles = StyleSheet.create({\r\n  screenContainer: { width: \"100%\", height: \"100%\", backgroundColor: \"white\" },\r\n  containerInput: {\r\n    height: \"10%\",\r\n    width: \"90%\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginTop: vmin(1),\r\n    marginBottom: \"0%\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    // backgroundColor: \"green\",\r\n  },\r\n  input: {\r\n    height: \"60%\",\r\n    width: \"100%\",\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n  },\r\n  containerList: {\r\n    width: \"90%\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginTop: vmin(1),\r\n    marginBottom: vmin(1),\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n\r\n  timeContainer: {\r\n    height: vmin(14),\r\n    width: \"90%\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginTop: vmin(1),\r\n    marginBottom: vmin(1),\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  textInput: {\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  containerButton: {\r\n    height: \"10%\",\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: vmin(2),\r\n    // backgroundColor: \"red\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#6979F8\",\r\n    width: \"90%\",\r\n    height: \"18%\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginBottom: \"10%\",\r\n  },\r\n\r\n  repetitionInputContainer: {\r\n    height: \"50%\",\r\n    width: \"100%\",\r\n    marginTop: \"2%\",\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    // backgroundColor: \"salmon\",\r\n  },\r\n\r\n  groupPickerContainer: {\r\n    height: vmin(16),\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    marginTop: vmin(1),\r\n    marginBottom: vmin(1),\r\n    // backgroundColor: \"green\",\r\n  },\r\n\r\n  listItemsContainer: {\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    marginLeft: \"5%\",\r\n    marginRight: \"15%\",\r\n    width: \"80%\",\r\n  },\r\n\r\n  containerFlexRow: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  headerInput: {\r\n    width: \"100%\",\r\n    textAlign: \"left\",\r\n    fontSize: vmin(4),\r\n    fontWeight: \"bold\",\r\n    left: vmin(1.5),\r\n  },\r\n\r\n  containerTextHeader: {\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  textHeader: {\r\n    fontWeight: \"bold\",\r\n    fontSize: vmin(5),\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}