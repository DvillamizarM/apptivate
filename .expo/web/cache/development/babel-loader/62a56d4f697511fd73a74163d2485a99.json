{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\screens\\\\EndRoutine.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\nimport { actionsNotifications } from \"../../redux/actions/actionsNotifications\";\nimport firebase from \"../../../database/firebase\";\nimport Picker from \"../Simple/Picker\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nimport * as Notifications from \"expo-notifications\";\nimport { Slider } from \"react-native-range-slider-expo\";\nimport { actionsDownload } from \"../../redux/actions/actionsDownload\";\nimport LightBulb from \"@expo/vector-icons/FontAwesome\";\nimport ChargeScreen from \"../Simple/ChargeScreen\";\n\nfunction EndRoutine(props) {\n  var _this = this;\n\n  var _useState = useState(\"80\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _React$useState = React.useState({\n    endRoutine: \"Seleccionar\",\n    why: \"\",\n    commentary: \"\",\n    percivedEffort: props.user.information.medical.perceivedForce\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      form = _React$useState2[0],\n      setForm = _React$useState2[1];\n\n  useEffect(function () {\n    var backHandler = BackHandler.addEventListener(\"hardwareBackPress\", function () {\n      return true;\n    });\n    return function () {\n      return backHandler.remove();\n    };\n  }, []);\n  useEffect(function () {\n    var end = props.navigation.state.params.routineIsNotOver;\n    end ? setForm(_objectSpread(_objectSpread({}, form), {}, {\n      endRoutine: \"No\"\n    })) : setForm(_objectSpread(_objectSpread({}, form), {}, {\n      endRoutine: \"Si\"\n    }));\n  }, []);\n\n  function sendPushNotification(expoPushToken) {\n    var message;\n    return _regeneratorRuntime.async(function sendPushNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            message = {\n              to: expoPushToken,\n              sound: \"default\",\n              title: \"Rutina Finalizada!\" + props.user.information.personal.name,\n              data: {\n                someData: \"goes here\"\n              }\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://exp.host/--/api/v2/push/send\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Accept-encoding\": \"gzip, deflate\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(message)\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var sendCompletion = function sendCompletion() {\n    return _regeneratorRuntime.async(function sendCompletion$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"users\").where(\"personal.email\", \"in\", [props.user.information.companionEmail, props.user.information.physioEmail]).get().then(function (querySnapshot) {\n              querySnapshot.forEach(function (doc) {\n                sendPushNotification(doc.data().token);\n              });\n            }).catch(function (error) {\n              console.log(\"Error getting documents: \", error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var saveFormEndRoutine = function saveFormEndRoutine() {\n    var idRecord, force, res;\n    return _regeneratorRuntime.async(function saveFormEndRoutine$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            idRecord = \"\";\n            force = form.percivedEffort;\n\n            if (props.connection) {\n              _context3.next = 8;\n              break;\n            }\n\n            props.saveEndRoutine(form);\n            props.navigation.navigate(\"ProfileScreen\");\n            setLoading(false);\n            _context3.next = 21;\n            break;\n\n          case 8:\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"users\").doc(props.user.uid).update(_defineProperty({}, \"medical.perceivedForce\", force)));\n\n          case 10:\n            _context3.next = 12;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"endRoutine\").add(_objectSpread(_objectSpread({}, form), {}, {\n              day: props.user.information.control.activeDay,\n              week: props.user.information.control.activeWeek,\n              reportTime: new Date().getTime(),\n              uid: props.user.uid\n            })).catch(function (error) {\n              props.saveEndRoutine(form);\n              props.navigation.navigate(\"ProfileScreen\");\n            }));\n\n          case 12:\n            res = _context3.sent;\n            idRecord = res.id;\n            console.log(\"El id es \", idRecord);\n\n            if (!(form.endRoutine === \"Si\")) {\n              _context3.next = 19;\n              break;\n            }\n\n            console.warn(\"in eyes\");\n            _context3.next = 19;\n            return _regeneratorRuntime.awrap(updateControl(idRecord));\n\n          case 19:\n            props.navigation.navigate(\"ProfileScreen\");\n            setLoading(false);\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var cacheEndRoutine = function cacheEndRoutine() {};\n\n  var updateControl = function updateControl(idRecord) {\n    var trainingPhase, activeWeek, activeDay, old_record, new_trainingPhase, new_activeWeek, new_activeDay, list, aux;\n    return _regeneratorRuntime.async(function updateControl$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            trainingPhase = props.user.information.control.trainingPhase;\n            activeWeek = props.user.information.control.activeWeek;\n            activeDay = props.user.information.control.activeDay;\n            old_record = props.user.information.control.record || [];\n            console.log(\"Los antiguos cambios son trainingPhase\", trainingPhase, \" activeWeek ,\", activeWeek, \"activeDay\", activeDay, old_record);\n            new_trainingPhase = \"\";\n            new_activeWeek = \"\";\n            new_activeDay = 0;\n\n            if (!(form.endRoutine == \"Si\")) {\n              _context4.next = 31;\n              break;\n            }\n\n            console.warn(\"entro a si\");\n\n            if (!(activeDay + 1 == 5)) {\n              _context4.next = 24;\n              break;\n            }\n\n            new_activeDay = 0;\n            new_activeWeek = \"week\" + (parseInt(activeWeek.replace(\"week\", \"\"), 10) - -1);\n\n            if (!(new_activeWeek == \"week11\")) {\n              _context4.next = 21;\n              break;\n            }\n\n            _context4.next = 16;\n            return _regeneratorRuntime.awrap(sendCompletion());\n\n          case 16:\n            list = _context4.sent;\n            console.log(\"Finalizacion\");\n            new_trainingPhase = \"Finalizada\";\n            _context4.next = 22;\n            break;\n\n          case 21:\n            if (parseInt(new_activeWeek.replace(\"week\", \"\"), 10) <= 3) {\n              new_trainingPhase = \"Inicial\";\n            } else if (parseInt(new_activeWeek.replace(\"week\", \"\"), 10) <= 7) {\n              new_trainingPhase = \"Intermedia\";\n            } else {\n              new_trainingPhase = \"Avanzada\";\n            }\n\n          case 22:\n            _context4.next = 27;\n            break;\n\n          case 24:\n            new_activeDay = activeDay + 1;\n            new_trainingPhase = trainingPhase;\n            new_activeWeek = activeWeek;\n\n          case 27:\n            aux = old_record.push(idRecord);\n            console.log(idRecord, \"Los nuevos cambios son\", {\n              trainingPhase: new_trainingPhase,\n              activeDay: new_activeDay,\n              activeWeek: new_activeWeek,\n              record: old_record\n            });\n            _context4.next = 31;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"users\").doc(props.user.uid).update({\n              control: {\n                trainingPhase: new_trainingPhase,\n                activeDay: new_activeDay,\n                activeWeek: new_activeWeek,\n                record: old_record\n              }\n            }).then(function (e) {\n              props.updateUserControl({\n                trainingPhase: new_trainingPhase,\n                activeDay: new_activeDay,\n                activeWeek: new_activeWeek,\n                record: old_record\n              });\n              console.warn(\"new active week---\", new_activeWeek);\n            }));\n\n          case 31:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleLocalNotification = function handleLocalNotification() {\n    return _regeneratorRuntime.async(function handleLocalNotification$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            try {\n              Notifications.setNotificationHandler({\n                handleNotification: function handleNotification() {\n                  return _regeneratorRuntime.async(function handleNotification$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          return _context5.abrupt(\"return\", {\n                            shouldShowAlert: true,\n                            shouldPlaySound: false,\n                            shouldSetBadge: false\n                          });\n\n                        case 1:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                }\n              });\n            } catch (error) {\n              console.warn(\"handler error ---\", error);\n            }\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var cancelLocalNotification = function cancelLocalNotification(notificationId) {\n    return _regeneratorRuntime.async(function cancelLocalNotification$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return _regeneratorRuntime.awrap(Notifications.cancelScheduledNotificationAsync(notificationId));\n\n          case 3:\n            _context7.next = 8;\n            break;\n\n          case 5:\n            _context7.prev = 5;\n            _context7.t0 = _context7[\"catch\"](0);\n            console.warn(\"cancelationError---------\", _context7.t0);\n\n          case 8:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var scheduleActivityControl = function scheduleActivityControl() {\n    var activityControlNotificationId, date, trigger2, trigger;\n    return _regeneratorRuntime.async(function scheduleActivityControl$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            date = new Date(Date.now());\n            trigger2 = new Date(Date.now() + 168 * 3600 * 1000 - 60 * 60 * 1000);\n            trigger = new Date(Date.now() + 3 * 60 * 1000);\n\n            if (props.activityControlNotificationId != \"\") {\n              cancelLocalNotification(props.activityControlNotificationId);\n            }\n\n            handleLocalNotification();\n            _context8.prev = 5;\n            _context8.next = 8;\n            return _regeneratorRuntime.awrap(Notifications.scheduleNotificationAsync({\n              content: {\n                title: \"ALERTA: Inactividad\",\n                body: \"Esta recibiendo esta notificación porque lleva una semana de inactividad en la plataforma. Por favor ingrese a la app para continuar con su proceso de rehabilitación.\",\n                data: {\n                  data: \"goes here\"\n                }\n              },\n              trigger: trigger2\n            }));\n\n          case 8:\n            activityControlNotificationId = _context8.sent;\n            props.setActivityControlNotificationId(activityControlNotificationId);\n            _context8.next = 15;\n            break;\n\n          case 12:\n            _context8.prev = 12;\n            _context8.t0 = _context8[\"catch\"](5);\n            console.warn(\"schedulerError-----\", _context8.t0);\n\n          case 15:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, [[5, 12]], Promise);\n  };\n\n  var askIfCompleted = function askIfCompleted() {\n    var routineIsNotOver = props.navigation.state.params.routineIsNotOver;\n    console.warn(\"routine is not over---\", routineIsNotOver);\n\n    if (loading) {\n      return React.createElement(View, {\n        style: {\n          backgroundColor: \"#ffffff\",\n          justifyContent: \"center\",\n          height: \"100%\",\n          width: \"100%\",\n          marginTop: \"5%\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }\n      }, React.createElement(ChargeScreen, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return React.createElement(View, {\n        style: styles.repetitionInputContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }\n      }, React.createElement(Picker, {\n        width: \"100%\",\n        height: 40,\n        placeholder: \"Seleccionar\",\n        setData: function setData(itemValue, itemIndex) {\n          console.warn(\"itenn====\", itemValue);\n          setForm(_objectSpread(_objectSpread({}, form), {}, {\n            endRoutine: itemValue\n          }));\n        },\n        initialIndex: !routineIsNotOver ? 1 : 2,\n        list: [\"Seleccionar\", \"Si\", \"No\"],\n        disabled: routineIsNotOver,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }\n      }));\n    }\n  };\n\n  var questionWhy = function questionWhy() {\n    return React.createElement(View, {\n      style: styles.repetitionInputContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }\n    }, React.createElement(Picker, {\n      width: \"100%\",\n      height: 40,\n      placeholder: \"Seleccionar\",\n      setData: function setData(itemValue, itemIndex) {\n        return setForm(_objectSpread(_objectSpread({}, form), {}, {\n          why: itemValue\n        }));\n      },\n      initialIndex: form.why,\n      list: [\"Seleccionar\", \"No entendí\", \"Estaba muy cansado\", \"Sentia dolor\", \"Estaba muy complicado\", \"No entiendo como usar la app\", \"No me alcanzó el tiempo\", \"Están muy avanzados\", \"Esto era una prueba\"],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, \"Por favor registre el progreso que obtuve en la rutina.\")), React.createElement(View, {\n    style: styles.configurationContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.containerInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, \"\\xBFFinalizo la Rutina?\"), askIfCompleted()), form.endRoutine === \"No\" ? React.createElement(View, {\n    style: styles.containerInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, \"\\xBFPor qu\\xE9 no termin\\xF3 la rutina completa?\"), questionWhy()) : React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.containerInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      borderColor: \"rgba(255, 231, 35,1)\",\n      paddingBottom: \"1%\",\n      borderBottomWidth: vmin(0.8),\n      marginBottom: \"8%\",\n      marginTop: \"5%\",\n      width: \"55%\",\n      flexDirection: \"row\"\n    },\n    onPress: function onPress() {\n      Alert.alert(\"Esfuerzo Percibido\", \"Es una forma de clasificar la intensidad de las actividades físicas a través de las propias sensaciones que siente el individuo que realiza la actividad en cuestión. Para medir su esfuerzo percibido siéntese y levántese de una silla 10 veces y califique como se siente al finalizar. \");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, \"Esfuerzo Percibido\"), React.createElement(LightBulb, {\n    name: \"lightbulb-o\",\n    size: vmin(6),\n    color: \"rgba(255, 231, 35,1)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.sliderContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 11\n    }\n  }, React.createElement(Slider, {\n    min: 1,\n    max: 5,\n    step: 1,\n    valueOnChange: function valueOnChange(value) {\n      var stirngVal = \"Liviano\";\n\n      switch (value) {\n        case 1:\n          stirngVal = \"Excesivamente Liviano\";\n          break;\n\n        case 2:\n          stirngVal = \"Liviano\";\n          break;\n\n        case 3:\n          stirngVal = \"Ni liviano ni pesado\";\n          break;\n\n        case 4:\n          stirngVal = \"Pesado\";\n          break;\n\n        case 5:\n          stirngVal = \"Excesivamente Pesado\";\n          break;\n\n        default:\n          stirngVal = \"Liviano\";\n          break;\n      }\n\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        percivedEffort: stirngVal\n      }));\n    },\n    initialValue: form.percivedEffort == \"Excesivamente Liviano\" ? 1 : form.percivedEffort == \"Liviano\" ? 2 : form.percivedEffort == \"Ni liviano ni pesado\" ? 3 : form.percivedEffort == \"Pesado\" ? 4 : 5,\n    knobColor: \"#6979F8\",\n    valueLabelsBackgroundColor: \"rgba(65,65,65)\",\n    inRangeBarColor: \"rgba(65,65,65, 0.7)\",\n    outOfRangeBarColor: \"rgba(228, 228, 228, 0.5)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.containerInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 11\n    }\n  }, \"Comentario\"), React.createElement(TextInput, {\n    multiline: true,\n    style: [styles.repetitionInputContainer, {\n      marginTop: \"4%\",\n      height: \"80%\",\n      borderWidth: 1,\n      flexWrap: \"wrap\"\n    }],\n    onChangeText: function onChangeText(value) {\n      return setForm(_objectSpread(_objectSpread({}, form), {}, {\n        commentary: value\n      }));\n    },\n    value: form.commentary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.containerButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      if (form.endRoutine === \"Si\") {\n        if (form.commentary !== \"\") {\n          setLoading(true);\n          saveFormEndRoutine();\n\n          if (props.user.information.control.activeWeek !== \"week11\") {\n            scheduleActivityControl();\n          }\n        } else {\n          Alert.alert(\"Por favor ingrese toda la información.\");\n        }\n      }\n\n      if (form.endRoutine === \"No\") {\n        if (form.commentary !== \"\" && form.why !== \"\") {\n          setLoading(true);\n          saveFormEndRoutine();\n\n          if (props.user.information.control.activeWeek !== \"week11\") {\n            scheduleActivityControl();\n          }\n        } else {\n          Alert.alert(\"Por favor ingrese toda la información.\");\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 11\n    }\n  }, \"Registrar Finalizaci\\xF3n\"))));\n}\n\nvar MapStateToProps = function MapStateToProps(store) {\n  console.log(store.User.user.information.medical.perceivedForce);\n  return {\n    activityControlNotificationId: store.NotificationReducer.activityControlNotificationId,\n    connection: store.User.connection,\n    user: store.User.user\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {\n    updateUserControl: function updateUserControl(data) {\n      return dispatch(actionsUser.UPDATE_USER_CONTROL(data));\n    },\n    setUserMedical: function setUserMedical(val) {\n      return dispatch(actionsUser.UPDATE_USER_MEDICAL(val));\n    },\n    saveEndRoutine: function saveEndRoutine(val) {\n      return dispatch(actionsDownload.ADD_END_ROUTINE(val));\n    },\n    setActivityControlNotificationId: function setActivityControlNotificationId(val) {\n      return dispatch(actionsNotifications.NOTIFICATION_ACTIVITY_CONTROL(val));\n    }\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(EndRoutine);\nvar styles = StyleSheet.create({\n  header: {\n    height: \"15%\",\n    width: \"80%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderBottomColor: \"#151522\",\n    borderBottomWidth: 1,\n    marginLeft: \"10%\",\n    marginRight: \"10%\"\n  },\n  textHeader: {\n    fontSize: vmin(5)\n  },\n  titleText: {\n    fontWeight: \"bold\",\n    fontSize: vmin(4),\n    marginRight: \"4%\"\n  },\n  container: {\n    backgroundColor: \"white\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  configurationContainer: {\n    width: \"100%\",\n    height: \"70%\",\n    alignItems: \"center\"\n  },\n  containerPercentajes: {\n    width: \"100%\",\n    height: \"20%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  containerInput: {\n    height: \"20%\",\n    width: \"90%\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    marginBottom: \"8%\",\n    justifyContent: \"space-evenly\"\n  },\n  sliderContainer: {\n    height: vmin(16),\n    width: \"100%\",\n    marginLeft: \"2%\",\n    marginTop: vmin(2),\n    marginBottom: \"8%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  timeContainer: {\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5,\n    height: \"100%\",\n    width: \"45%\"\n  },\n  textInput: {\n    width: \"100%\",\n    textAlign: \"center\"\n  },\n  containerButton: {\n    height: \"15%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: vmin(2)\n  },\n  button: {\n    backgroundColor: \"#6979F8\",\n    margin: vmin(2),\n    width: \"80%\",\n    borderRadius: 10,\n    height: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  repetitionInputContainer: {\n    height: \"35%\",\n    width: \"100%\",\n    marginBottom: \"5%\",\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderRadius: 5\n  },\n  timeInputContainer: {\n    height: \"50%\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/screens/EndRoutine.tsx"],"names":["React","useEffect","useState","connect","actionsUser","actionsNotifications","firebase","Picker","require","vmin","Notifications","Slider","actionsDownload","LightBulb","ChargeScreen","EndRoutine","props","selectedValue","setSelectedValue","loading","setLoading","endRoutine","why","commentary","percivedEffort","user","information","medical","perceivedForce","form","setForm","backHandler","BackHandler","addEventListener","remove","end","navigation","state","params","routineIsNotOver","sendPushNotification","expoPushToken","message","to","sound","title","personal","name","data","someData","fetch","method","headers","Accept","body","JSON","stringify","sendCompletion","db","collection","where","companionEmail","physioEmail","get","then","querySnapshot","forEach","doc","token","catch","error","console","log","saveFormEndRoutine","idRecord","force","connection","saveEndRoutine","navigate","uid","update","add","day","control","activeDay","week","activeWeek","reportTime","Date","getTime","res","id","warn","updateControl","cacheEndRoutine","trainingPhase","old_record","record","new_trainingPhase","new_activeWeek","new_activeDay","parseInt","replace","list","aux","push","e","updateUserControl","handleLocalNotification","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","cancelLocalNotification","notificationId","cancelScheduledNotificationAsync","scheduleActivityControl","date","now","trigger2","trigger","activityControlNotificationId","scheduleNotificationAsync","content","setActivityControlNotificationId","askIfCompleted","backgroundColor","justifyContent","height","width","marginTop","styles","repetitionInputContainer","itemValue","itemIndex","questionWhy","container","header","textHeader","configurationContainer","containerInput","titleText","borderColor","paddingBottom","borderBottomWidth","marginBottom","flexDirection","Alert","alert","sliderContainer","value","stirngVal","borderWidth","flexWrap","containerButton","button","color","MapStateToProps","store","User","NotificationReducer","MapDispatchToProps","dispatch","UPDATE_USER_CONTROL","setUserMedical","val","UPDATE_USER_MEDICAL","ADD_END_ROUTINE","NOTIFICATION_ACTIVITY_CONTROL","StyleSheet","create","alignItems","borderBottomColor","marginLeft","marginRight","fontSize","fontWeight","containerPercentajes","timeContainer","borderRadius","textInput","textAlign","padding","margin","timeInputContainer","input"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\r\nimport { actionsNotifications } from \"../../redux/actions/actionsNotifications\";\r\nimport firebase from \"../../../database/firebase\";\r\nimport Picker from \"../Simple/Picker\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Alert,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  BackHandler,\r\n} from \"react-native\";\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\nimport * as Notifications from \"expo-notifications\";\r\nimport { Slider } from \"react-native-range-slider-expo\";\r\nimport { actionsDownload } from \"../../redux/actions/actionsDownload\";\r\nimport LightBulb from \"react-native-vector-icons/FontAwesome\";\r\nimport ChargeScreen from \"../Simple/ChargeScreen\";\r\n\r\nfunction EndRoutine(props) {\r\n  //\r\n  const [selectedValue, setSelectedValue] = useState(\"80\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [form, setForm] = React.useState({\r\n    endRoutine: \"Seleccionar\",\r\n    why: \"\",\r\n    commentary: \"\",\r\n    percivedEffort: props.user.information.medical.perceivedForce,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const backHandler = BackHandler.addEventListener(\r\n      \"hardwareBackPress\",\r\n      () => true\r\n    );\r\n    return () => backHandler.remove();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let end = props.navigation.state.params.routineIsNotOver;\r\n    end\r\n      ? setForm({ ...form, endRoutine: \"No\" })\r\n      : setForm({ ...form, endRoutine: \"Si\" });\r\n  }, []);\r\n\r\n  async function sendPushNotification(expoPushToken) {\r\n    const message = {\r\n      to: expoPushToken,\r\n      sound: \"default\",\r\n      title: \"Rutina Finalizada!\" + props.user.information.personal.name,\r\n      data: { someData: \"goes here\" },\r\n    };\r\n\r\n    await fetch(\"https://exp.host/--/api/v2/push/send\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Accept-encoding\": \"gzip, deflate\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(message),\r\n    });\r\n  }\r\n\r\n  // useEffect(()=>{\r\n  //   setForm({ ...form, percivedEffort: props.user.information.medical.perceivedForce });\r\n  // }, []);\r\n\r\n  const sendCompletion = async () => {\r\n    await firebase.db\r\n      .collection(\"users\")\r\n      .where(\"personal.email\", \"in\", [\r\n        props.user.information.companionEmail,\r\n        props.user.information.physioEmail,\r\n      ])\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          sendPushNotification(doc.data().token);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting documents: \", error);\r\n      });\r\n  };\r\n\r\n  const saveFormEndRoutine = async () => {\r\n    let idRecord = \"\";\r\n    const force = form.percivedEffort;\r\n    if (!props.connection) {\r\n      props.saveEndRoutine(form);\r\n      props.navigation.navigate(\"ProfileScreen\");\r\n      setLoading(false);\r\n    } else {\r\n      await firebase.db\r\n        .collection(\"users\")\r\n        .doc(props.user.uid)\r\n        .update({\r\n          [\"medical.perceivedForce\"]: force,\r\n        });\r\n      let res = await firebase.db\r\n        .collection(\"endRoutine\")\r\n        .add({\r\n          ...form,\r\n          day: props.user.information.control.activeDay,\r\n          week: props.user.information.control.activeWeek,\r\n          reportTime: new Date().getTime(),\r\n          uid: props.user.uid,\r\n        })\r\n        .catch((error) => {\r\n          props.saveEndRoutine(form);\r\n          props.navigation.navigate(\"ProfileScreen\");\r\n        });\r\n      idRecord = res.id;\r\n      console.log(\"El id es \", idRecord);\r\n      if (form.endRoutine === \"Si\") {\r\n        console.warn(\"in eyes\");\r\n        await updateControl(idRecord);\r\n      }\r\n      props.navigation.navigate(\"ProfileScreen\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const cacheEndRoutine = () => {};\r\n\r\n  const updateControl = async (idRecord) => {\r\n    let trainingPhase = props.user.information.control.trainingPhase;\r\n    let activeWeek = props.user.information.control.activeWeek;\r\n    let activeDay = props.user.information.control.activeDay;\r\n\r\n    let old_record = props.user.information.control.record || [];\r\n\r\n    console.log(\r\n      \"Los antiguos cambios son trainingPhase\",\r\n      trainingPhase,\r\n      \" activeWeek ,\",\r\n      activeWeek,\r\n      \"activeDay\",\r\n      activeDay,\r\n      old_record\r\n    );\r\n    // Inicial\",\"Intermedia\",\"Avanzada\"\r\n\r\n    let new_trainingPhase = \"\";\r\n    let new_activeWeek = \"\";\r\n    let new_activeDay = 0;\r\n\r\n    if (form.endRoutine == \"Si\") {\r\n      console.warn(\"entro a si\");\r\n      if (activeDay + 1 == 5) {\r\n        new_activeDay = 0;\r\n        new_activeWeek =\r\n          \"week\" + (parseInt(activeWeek.replace(\"week\", \"\"), 10) - -1);\r\n\r\n        if (new_activeWeek == \"week11\") {\r\n          const list = await sendCompletion();\r\n          console.log(\"Finalizacion\");\r\n          new_trainingPhase = \"Finalizada\";\r\n        } else if (parseInt(new_activeWeek.replace(\"week\", \"\"), 10) <= 3) {\r\n          new_trainingPhase = \"Inicial\";\r\n        } else if (parseInt(new_activeWeek.replace(\"week\", \"\"), 10) <= 7) {\r\n          new_trainingPhase = \"Intermedia\";\r\n        } else {\r\n          new_trainingPhase = \"Avanzada\";\r\n        }\r\n      } else {\r\n        new_activeDay = activeDay + 1;\r\n        new_trainingPhase = trainingPhase;\r\n        new_activeWeek = activeWeek;\r\n      }\r\n\r\n      const aux = old_record.push(idRecord);\r\n\r\n      console.log(idRecord, \"Los nuevos cambios son\", {\r\n        trainingPhase: new_trainingPhase,\r\n        activeDay: new_activeDay,\r\n        activeWeek: new_activeWeek,\r\n        record: old_record,\r\n      });\r\n\r\n      await firebase.db\r\n        .collection(\"users\")\r\n        .doc(props.user.uid)\r\n        .update({\r\n          control: {\r\n            trainingPhase: new_trainingPhase,\r\n            activeDay: new_activeDay,\r\n            activeWeek: new_activeWeek,\r\n            record: old_record,\r\n          },\r\n        })\r\n        .then((e) => {\r\n          props.updateUserControl({\r\n            trainingPhase: new_trainingPhase,\r\n            activeDay: new_activeDay,\r\n            activeWeek: new_activeWeek,\r\n            record: old_record,\r\n          });\r\n          console.warn(\"new active week---\", new_activeWeek);\r\n        });\r\n\r\n      // Cuando se termina la semana 10 el contador aumneta y queda \"week11\" esto siginifica que acabo el protocolo\r\n    }\r\n  };\r\n\r\n  const handleLocalNotification = async () => {\r\n    try {\r\n      Notifications.setNotificationHandler({\r\n        handleNotification: async () => ({\r\n          shouldShowAlert: true,\r\n          shouldPlaySound: false,\r\n          shouldSetBadge: false,\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      console.warn(\"handler error ---\", error);\r\n    }\r\n  };\r\n  const cancelLocalNotification = async (notificationId) => {\r\n    try {\r\n      await Notifications.cancelScheduledNotificationAsync(notificationId);\r\n    } catch (error) {\r\n      console.warn(\"cancelationError---------\", error);\r\n    }\r\n  };\r\n  const scheduleActivityControl = async () => {\r\n    let activityControlNotificationId;\r\n    const date = new Date(Date.now()); //temp\r\n    const trigger2 = new Date(Date.now() + 168 * 3600 * 1000 - 60 * 60 * 1000); //una semana después y una hora antes de fecha actual\r\n    const trigger = new Date(Date.now() + 3 * 60 * 1000);\r\n    if (props.activityControlNotificationId != \"\") {\r\n      cancelLocalNotification(props.activityControlNotificationId);\r\n    }\r\n    handleLocalNotification();\r\n    try {\r\n      activityControlNotificationId =\r\n        await Notifications.scheduleNotificationAsync({\r\n          content: {\r\n            title: \"ALERTA: Inactividad\",\r\n            body: \"Esta recibiendo esta notificación porque lleva una semana de inactividad en la plataforma. Por favor ingrese a la app para continuar con su proceso de rehabilitación.\",\r\n            data: { data: \"goes here\" },\r\n          },\r\n          trigger: trigger2,\r\n        });\r\n      props.setActivityControlNotificationId(activityControlNotificationId);\r\n    } catch (error) {\r\n      console.warn(\"schedulerError-----\", error);\r\n    }\r\n  };\r\n\r\n  const askIfCompleted = () => {\r\n    let routineIsNotOver = props.navigation.state.params.routineIsNotOver;\r\n    console.warn(\"routine is not over---\", routineIsNotOver);\r\n    if (loading) {\r\n      return (\r\n        <View\r\n          style={{\r\n            backgroundColor: \"#ffffff\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            marginTop: \"5%\",\r\n          }}\r\n        >\r\n          <ChargeScreen />\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={styles.repetitionInputContainer}>\r\n          <Picker\r\n            width={\"100%\"}\r\n            height={40}\r\n            placeholder={\"Seleccionar\"}\r\n            setData={(itemValue, itemIndex) => {\r\n              console.warn(\"itenn====\", itemValue);\r\n              setForm({ ...form, endRoutine: itemValue });\r\n            }}\r\n            initialIndex={!routineIsNotOver ? 1 : 2}\r\n            list={[\"Seleccionar\", \"Si\", \"No\"]}\r\n            disabled={routineIsNotOver}\r\n          />\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n\r\n  const questionWhy = () => {\r\n    return (\r\n      <View style={styles.repetitionInputContainer}>\r\n        <Picker\r\n          width={\"100%\"}\r\n          height={40}\r\n          placeholder={\"Seleccionar\"}\r\n          setData={(itemValue, itemIndex) =>\r\n            setForm({ ...form, why: itemValue })\r\n          }\r\n          initialIndex={form.why}\r\n          list={[\r\n            \"Seleccionar\",\r\n            \"No entendí\",\r\n            \"Estaba muy cansado\",\r\n            \"Sentia dolor\",\r\n            \"Estaba muy complicado\",\r\n            \"No entiendo como usar la app\",\r\n            \"No me alcanzó el tiempo\",\r\n            \"Están muy avanzados\",\r\n            \"Esto era una prueba\",\r\n          ]}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.textHeader}>\r\n          Por favor registre el progreso que obtuve en la rutina.\r\n        </Text>\r\n      </View>\r\n      <View style={styles.configurationContainer}>\r\n        <View style={styles.containerInput}>\r\n          <Text style={styles.titleText}>¿Finalizo la Rutina?</Text>\r\n\r\n          {askIfCompleted()}\r\n        </View>\r\n        {form.endRoutine === \"No\" ? (\r\n          <View style={styles.containerInput}>\r\n            <Text style={styles.titleText}>\r\n              ¿Por qué no terminó la rutina completa?\r\n            </Text>\r\n            {questionWhy()}\r\n          </View>\r\n        ) : (\r\n          <View></View>\r\n        )}\r\n\r\n        <View style={styles.containerInput}>\r\n          <TouchableOpacity\r\n            style={{\r\n              borderColor: \"rgba(255, 231, 35,1)\",\r\n              paddingBottom: \"1%\",\r\n              borderBottomWidth: vmin(0.8),\r\n              marginBottom: \"8%\",\r\n              marginTop: \"5%\",\r\n              width: \"55%\",\r\n              flexDirection: \"row\",\r\n            }}\r\n            onPress={() => {\r\n              Alert.alert(\r\n                \"Esfuerzo Percibido\",\r\n                \"Es una forma de clasificar la intensidad de las actividades físicas a través de las propias sensaciones que siente el individuo que realiza la actividad en cuestión. Para medir su esfuerzo percibido siéntese y levántese de una silla 10 veces y califique como se siente al finalizar. \"\r\n              );\r\n            }}\r\n          >\r\n            <Text style={styles.titleText}>Esfuerzo Percibido</Text>\r\n            <LightBulb\r\n              name=\"lightbulb-o\"\r\n              size={vmin(6)}\r\n              color=\"rgba(255, 231, 35,1)\"\r\n            />\r\n          </TouchableOpacity>\r\n          <View style={styles.sliderContainer}>\r\n            <Slider\r\n              min={1}\r\n              max={5}\r\n              step={1}\r\n              valueOnChange={(value) => {\r\n                let stirngVal = \"Liviano\";\r\n                switch (value) {\r\n                  case 1:\r\n                    stirngVal = \"Excesivamente Liviano\";\r\n                    break;\r\n                  case 2:\r\n                    stirngVal = \"Liviano\";\r\n                    break;\r\n                  case 3:\r\n                    stirngVal = \"Ni liviano ni pesado\";\r\n                    break;\r\n                  case 4:\r\n                    stirngVal = \"Pesado\";\r\n                    break;\r\n                  case 5:\r\n                    stirngVal = \"Excesivamente Pesado\";\r\n                    break;\r\n                  default:\r\n                    stirngVal = \"Liviano\";\r\n                    break;\r\n                }\r\n                setForm({ ...form, percivedEffort: stirngVal });\r\n              }}\r\n              initialValue={\r\n                form.percivedEffort == \"Excesivamente Liviano\"\r\n                  ? 1\r\n                  : form.percivedEffort == \"Liviano\"\r\n                  ? 2\r\n                  : form.percivedEffort == \"Ni liviano ni pesado\"\r\n                  ? 3\r\n                  : form.percivedEffort == \"Pesado\"\r\n                  ? 4\r\n                  : 5\r\n              }\r\n              knobColor=\"#6979F8\"\r\n              valueLabelsBackgroundColor=\"rgba(65,65,65)\"\r\n              inRangeBarColor=\"rgba(65,65,65, 0.7)\"\r\n              outOfRangeBarColor=\"rgba(228, 228, 228, 0.5)\"\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.containerInput}>\r\n          <Text style={styles.titleText}>Comentario</Text>\r\n          <TextInput\r\n            multiline={true}\r\n            style={[\r\n              styles.repetitionInputContainer,\r\n              {\r\n                marginTop: \"4%\",\r\n                height: \"80%\",\r\n                borderWidth: 1,\r\n                flexWrap: \"wrap\",\r\n              },\r\n            ]}\r\n            onChangeText={(value) => setForm({ ...form, commentary: value })}\r\n            value={form.commentary}\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.containerButton}>\r\n        <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={() => {\r\n            if (form.endRoutine === \"Si\") {\r\n              if (form.commentary !== \"\") {\r\n                setLoading(true);\r\n                saveFormEndRoutine();\r\n                if (props.user.information.control.activeWeek !== \"week11\") {\r\n                  scheduleActivityControl();\r\n                }\r\n              } else {\r\n                Alert.alert(\"Por favor ingrese toda la información.\");\r\n              }\r\n            }\r\n            if (form.endRoutine === \"No\") {\r\n              if (form.commentary !== \"\" && form.why !== \"\") {\r\n                setLoading(true);\r\n                saveFormEndRoutine();\r\n                if (props.user.information.control.activeWeek !== \"week11\") {\r\n                  scheduleActivityControl();\r\n                }\r\n              } else {\r\n                Alert.alert(\"Por favor ingrese toda la información.\");\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          <Text style={{ color: \"white\" }}>Registrar Finalización</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  console.log(store.User.user.information.medical.perceivedForce);\r\n  return {\r\n    activityControlNotificationId:\r\n      store.NotificationReducer.activityControlNotificationId,\r\n    connection: store.User.connection,\r\n    user: store.User.user,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({\r\n  updateUserControl: (data) => dispatch(actionsUser.UPDATE_USER_CONTROL(data)),\r\n  setUserMedical: (val) => dispatch(actionsUser.UPDATE_USER_MEDICAL(val)),\r\n  saveEndRoutine: (val) => dispatch(actionsDownload.ADD_END_ROUTINE(val)),\r\n  setActivityControlNotificationId: (val) =>\r\n    dispatch(actionsNotifications.NOTIFICATION_ACTIVITY_CONTROL(val)),\r\n});\r\n\r\nexport default connect(MapStateToProps, MapDispatchToProps)(EndRoutine);\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    height: \"15%\",\r\n    width: \"80%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderBottomColor: \"#151522\",\r\n    borderBottomWidth: 1,\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\",\r\n  },\r\n  textHeader: {\r\n    fontSize: vmin(5),\r\n  },\r\n  titleText: {\r\n    fontWeight: \"bold\",\r\n    fontSize: vmin(4),\r\n    marginRight: \"4%\",\r\n  },\r\n\r\n  container: { backgroundColor: \"white\", width: \"100%\", height: \"100%\" },\r\n\r\n  configurationContainer: {\r\n    // backgroundColor: \"peru\",\r\n    width: \"100%\",\r\n    height: \"70%\",\r\n\r\n    // justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  containerPercentajes: {\r\n    // backgroundColor: \"peru\",\r\n    width: \"100%\",\r\n    height: \"20%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  containerInput: {\r\n    height: \"20%\",\r\n    width: \"90%\",\r\n    // backgroundColor: \"tomato\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginBottom: \"8%\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n\r\n  sliderContainer: {\r\n    height: vmin(16),\r\n    width: \"100%\",\r\n    marginLeft: \"2%\",\r\n    marginTop: vmin(2),\r\n    marginBottom: \"8%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // backgroundColor: \"salmon\",\r\n  },\r\n  timeContainer: {\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    height: \"100%\",\r\n    width: \"45%\",\r\n  },\r\n  textInput: {\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  containerButton: {\r\n    height: \"15%\",\r\n    width: \"100%\",\r\n    // backgroundColor: \"red\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: vmin(2),\r\n  },\r\n  button: {\r\n    backgroundColor: \"#6979F8\",\r\n    margin: vmin(2),\r\n    width: \"80%\",\r\n    borderRadius: 10,\r\n    height: \"60%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  repetitionInputContainer: {\r\n    height: \"35%\",\r\n    width: \"100%\",\r\n    marginBottom: \"5%\",\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    // borderWidth: 1,\r\n    borderRadius: 5,\r\n  },\r\n\r\n  timeInputContainer: {\r\n    height: \"50%\",\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}