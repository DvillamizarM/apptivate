{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\dani1\\\\Desktop\\\\apptivate\\\\src\\\\components\\\\screens\\\\CustomizeRoutine.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Picker from \"../Simple/Picker\";\n\nvar _require = require(\"react-native-expo-viewport-units\"),\n    vmin = _require.vmin;\n\nimport firebase from \"../../../database/firebase\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from \"react-native-responsive-screen\";\nimport { connect } from \"react-redux\";\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\nimport ChargeScreen from \"../Simple/ChargeScreen\";\n\nfunction CustomizeRoutine(props) {\n  var _useState = useState({\n    min: 0,\n    max: 0,\n    repetitionAmount: 0,\n    range: [],\n    imcCategory: \"\",\n    perceivedForce: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      seconds = _React$useState2[0],\n      setSeconds = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      minutes = _React$useState4[0],\n      setMinutes = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      time = _React$useState6[0],\n      setTime = _React$useState6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loading = _React$useState8[0],\n      setLoading = _React$useState8[1];\n\n  var values = [\"Excesivamente Liviano\", \"Liviano\", \"Ni liviano ni pesado\", \"Pesado\", \"Excesivamente Pesado\"];\n\n  var calculatePerceivedEffort = function calculatePerceivedEffort(category) {\n    console.log(\"Parametro de fueza percivida\", category);\n    var min = 0;\n    var max = 0;\n\n    switch (category) {\n      case values[0]:\n        min = 100;\n        max = 100;\n        break;\n\n      case values[1]:\n        min = 90;\n        max = 100;\n        break;\n\n      case values[2]:\n        min = 80;\n        max = 100;\n        break;\n\n      case values[3]:\n        min = 70;\n        max = 90;\n        break;\n\n      case values[4]:\n        min = 60;\n        max = 80;\n        break;\n\n      case values[5]:\n        min = 50;\n        max = 70;\n        break;\n\n      default:\n        min = 0;\n        max = 0;\n        break;\n    }\n\n    return {\n      min: min,\n      max: max\n    };\n  };\n\n  var imcPercentaje = function imcPercentaje(imc) {\n    console.log(\"El imc que llega como parametro es ;\", imc);\n    var min = 0;\n    var max = 0;\n    var category = \"\";\n\n    if (imc < 18.5) {\n      category = \"Delgadez\";\n      min = 100;\n      max = 100;\n    } else if (imc < 25) {\n      category = \"Normal\";\n      min = 100;\n      max = 100;\n    } else if (imc < 30) {\n      category = \"Sobrepeso\";\n      min = 70;\n      max = 90;\n    } else if (imc < 35) {\n      category = \"Obesidad I\";\n      min = 60;\n      max = 70;\n    } else if (imc < 40) {\n      category = \"Obesidad II\";\n      min = 50;\n      max = 60;\n    } else {\n      category = \"Obesidad III\";\n      min = 50;\n      max = 50;\n    }\n\n    return {\n      min: min,\n      max: max,\n      category: category\n    };\n  };\n\n  var calculatePercentajes = function calculatePercentajes(user) {\n    console.log(\"peso: \", user.medical.weight, \"tama;o: \", user.medical.size);\n    var imc = imcPercentaje(user.medical.weight / (user.medical.size / 100 * (user.medical.size / 100)));\n    var perceivedEffort = calculatePerceivedEffort(user.medical.perceivedForce);\n    var minimunAverage = (imc.min + perceivedEffort.min) / 2;\n    var maximunAverage = (imc.max + perceivedEffort.max) / 2;\n    minimunAverage % 10 == 5 ? minimunAverage -= 5 : minimunAverage = minimunAverage;\n    maximunAverage % 10 == 5 ? maximunAverage -= 5 : maximunAverage = maximunAverage;\n    var range = [\"Seleccionar\"];\n\n    for (var index = minimunAverage; index <= maximunAverage; index += 10) {\n      range.push(index);\n    }\n\n    console.log(\"category----\", imc.category);\n    setSelectedValue({\n      min: minimunAverage,\n      max: maximunAverage,\n      repetitionAmount: user.configuration.repetitionAmount,\n      range: range,\n      imcCategory: imc.category,\n      perceivedForce: user.medical.perceivedForce\n    });\n    var sec = \"\";\n    user.configuration.restTimeSec === 0 ? sec = 0 + \"\" + user.configuration.restTimeSec : sec = user.configuration.restTimeSec;\n    setSeconds(user.configuration.restTimeSec);\n    setMinutes(user.configuration.restTimeMin);\n    console.warn(\"setting time--\", user.configuration.restTimeMin + \":\" + sec);\n    setTime(user.configuration.restTimeMin + \":\" + sec);\n    setLoading(false);\n    console.log(\"LLLLLLLLLLLLLLLLLLLos resultados son:\", imc, perceivedEffort, {\n      min: minimunAverage,\n      max: maximunAverage,\n      repetitionAmount: user.configuration.repetitionAmount\n    });\n  };\n\n  var titleText = function titleText(user) {\n    if (user.information.role == \"paciente\") {\n      return \"\";\n    }\n  };\n\n  var pull_repData = function pull_repData(data) {\n    setSelectedValue(_objectSpread(_objectSpread({}, selectedValue), {}, {\n      repetitionAmount: data\n    }));\n    console.warn(\"rep data pulled==========\", data);\n  };\n\n  var pull_timeData = function pull_timeData(data) {\n    console.warn(\"time data pulled==========\", data);\n    setTime(data);\n    var timeSelected = data.split(\":\");\n    setMinutes(parseInt(timeSelected[0]));\n    setSeconds(parseInt(timeSelected[1]));\n  };\n\n  useEffect(function () {\n    if (props.connection) {\n      var _firebase$auth$curren;\n\n      firebase.db.collection(\"users\").doc((_firebase$auth$curren = firebase.auth.currentUser) == null ? void 0 : _firebase$auth$curren.uid).get().then(function (user) {\n        calculatePercentajes(user.data());\n      }).catch(function (e) {\n        setLoading(false);\n      });\n    } else {\n      calculatePercentajes(props.user.information);\n      setLoading(false);\n    }\n\n    console.warn(\"time----\", time);\n  }, []);\n  useEffect(function () {\n    var sec = \"\";\n    props.configuration.restTimeSec === 0 ? sec = 0 + \"\" + props.configuration.restTimeSec : sec = props.configuration.restTimeSec;\n    props.configuration.restTimeMin + \":\" + sec;\n    props.configuration.restTimeSec === 0 ? sec = 0 + \"\" + props.configuration.restTimeSec : sec = props.configuration.restTimeSec;\n\n    if (props.navigation.state.params.btnText == \"Continuar\") {\n      Alert.alert(\"Antes de comenzar: \", \"¿Quiere configurar la intensidad de repeticiones o tiempo de reposo? \\n\\nActualmente la configuración es: \\nIntensidad - \" + props.configuration.repetitionAmount + \"% \\nReposo - \" + time, [{\n        text: \"Editar intensidad y reposo \",\n        onPress: function onPress() {}\n      }, {\n        text: \"Iniciar rutina\",\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Ejercicios\", {\n            repetitionAmount: parseInt(props.user.information.configuration.repetitionAmount),\n            restTimeMin: parseInt(props.user.information.configuration.restTimeMin),\n            restTimeSec: parseInt(props.user.information.configuration.restTimeSec)\n          });\n        }\n      }], {\n        cancelable: false\n      });\n    }\n  }, []);\n\n  var updateConfig = function updateConfig() {\n    var _firebase$auth$curren2;\n\n    return _regeneratorRuntime.async(function updateConfig$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!props.connection) {\n              _context.next = 6;\n              break;\n            }\n\n            console.warn(\"inside updateconfig\");\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.db.collection(\"users\").doc((_firebase$auth$curren2 = firebase.auth.currentUser) == null ? void 0 : _firebase$auth$curren2.uid).update({\n              configuration: {\n                repetitionAmount: selectedValue.repetitionAmount,\n                restTimeMin: minutes,\n                restTimeSec: seconds\n              }\n            }).then(function () {\n              props.updateConfiguration({\n                repetitionAmount: selectedValue.repetitionAmount,\n                restTimeMin: minutes,\n                restTimeSec: seconds\n              });\n            }));\n\n          case 4:\n            _context.next = 6;\n            break;\n\n          case 6:\n            if (props.navigation.state.params.btnText == \"Continuar\") {\n              props.navigation.navigate(\"Ejercicios\", {\n                repetitionAmount: selectedValue.repetitionAmount,\n                restTimeMin: minutes,\n                restTimeSec: seconds\n              });\n            } else {\n              setLoading(false);\n              props.navigation.navigate(\"ProfileScreen\");\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (loading) {\n    return React.createElement(View, {\n      style: {\n        justifyContent: \"center\",\n        height: \"100%\",\n        marginTop: \"5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }\n    }, React.createElement(ChargeScreen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.textHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }\n    }, \"Su esfuerzo percibido es \", selectedValue.perceivedForce, \", y su IMC es\", \" \", selectedValue.imcCategory, \" por ende usted puede hacer entre el\", \" \", selectedValue.min, \"% y \", selectedValue.max, \"% de las repeticiones.\")), React.createElement(View, {\n      style: styles.configurationContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.containerPercentajes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }\n    }, \"Config. Actual \", selectedValue.repetitionAmount, \"%\")), React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, \"Repeticiones \"), React.createElement(Picker, {\n      width: \"100%\",\n      setData: pull_repData,\n      placeholder: \"Seleccionar\",\n      height: 40,\n      initialValue: selectedValue.repetitionAmount,\n      list: selectedValue.range,\n      percentajes: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }\n    })), React.createElement(View, {\n      style: styles.containerInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }\n    }, \"Tiempo de Reposo entre series\"), React.createElement(Picker, {\n      width: \"100%\",\n      height: 40,\n      placeholder: \"00:00\",\n      setData: pull_timeData,\n      initialValue: time,\n      list: [\"0:00\", \"0:30\", \"1:00\", \"1:30\", \"2:00\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }))), React.createElement(View, {\n      style: styles.containerButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        setLoading(true);\n        console.warn(\"reps----\", selectedValue.repetitionAmount);\n\n        if (selectedValue.repetitionAmount && selectedValue.repetitionAmount != \"Seleccionar\") {\n          updateConfig();\n        } else {\n          Alert.alert(\"Por favor seleccione el porcentaje de repeticiones.\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }\n    }, props.navigation.state.params.btnText))));\n  }\n}\n\nvar MapStateToProps = function MapStateToProps(store) {\n  console.warn(\"configu---\", store.User.user.information.configuration);\n  return {\n    user: store.User.user,\n    connection: store.User.connection,\n    configuration: store.User.user.information.configuration\n  };\n};\n\nvar MapDispatchToProps = function MapDispatchToProps(dispatch, store) {\n  return {\n    setUser: function setUser(val) {\n      return dispatch(actionsUser.SET_USER(val));\n    },\n    updateConfiguration: function updateConfiguration(val) {\n      return dispatch(actionsUser.UPDATE_USER_CONFIGURATION(val));\n    }\n  };\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(CustomizeRoutine);\nvar styles = StyleSheet.create({\n  header: {\n    height: \"25%\",\n    width: \"80%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderBottomColor: \"#151522\",\n    borderBottomWidth: 1,\n    marginLeft: \"10%\",\n    marginRight: \"10%\"\n  },\n  textHeader: {\n    fontSize: vmin(5)\n  },\n  container: {\n    backgroundColor: \"white\",\n    maxWidth: wp(\"100%\"),\n    maxHeight: hp(\"100%\")\n  },\n  configurationContainer: {\n    width: \"100%\",\n    height: \"60%\",\n    borderBottomColor: \"#151522\",\n    alignItems: \"center\"\n  },\n  containerPercentajes: {\n    width: \"100%\",\n    height: \"20%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  containerInput: {\n    height: \"30%\",\n    width: \"90%\",\n    marginLeft: \"5%\",\n    marginRight: \"5%\",\n    marginBottom: \"10%\",\n    justifyContent: \"space-evenly\"\n  },\n  timeContainer: {\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5,\n    height: \"100%\",\n    width: \"45%\"\n  },\n  textInput: {\n    width: \"100%\",\n    textAlign: \"center\"\n  },\n  containerButton: {\n    height: \"10%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: vmin(2)\n  },\n  button: {\n    backgroundColor: \"#6979F8\",\n    margin: vmin(2),\n    width: \"80%\",\n    height: \"100%\",\n    borderRadius: 15,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  repetitionInputContainer: {\n    height: \"50%\",\n    width: \"100%\",\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  timeInputContainer: {\n    height: \"50%\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  }\n});","map":{"version":3,"sources":["C:/Users/dani1/Desktop/apptivate/src/components/screens/CustomizeRoutine.tsx"],"names":["React","useState","useEffect","Picker","require","vmin","firebase","widthPercentageToDP","wp","heightPercentageToDP","hp","connect","actionsUser","ChargeScreen","CustomizeRoutine","props","min","max","repetitionAmount","range","imcCategory","perceivedForce","selectedValue","setSelectedValue","seconds","setSeconds","minutes","setMinutes","time","setTime","loading","setLoading","values","calculatePerceivedEffort","category","console","log","imcPercentaje","imc","calculatePercentajes","user","medical","weight","size","perceivedEffort","minimunAverage","maximunAverage","index","push","configuration","sec","restTimeSec","restTimeMin","warn","titleText","information","role","pull_repData","data","pull_timeData","timeSelected","split","parseInt","connection","db","collection","doc","auth","currentUser","uid","get","then","catch","e","navigation","state","params","btnText","Alert","alert","text","onPress","navigate","cancelable","updateConfig","update","updateConfiguration","justifyContent","height","marginTop","styles","container","header","textHeader","configurationContainer","containerPercentajes","containerInput","containerButton","button","color","MapStateToProps","store","User","MapDispatchToProps","dispatch","setUser","val","SET_USER","UPDATE_USER_CONFIGURATION","StyleSheet","create","width","alignItems","borderBottomColor","borderBottomWidth","marginLeft","marginRight","fontSize","backgroundColor","maxWidth","maxHeight","flexDirection","marginBottom","timeContainer","borderColor","borderWidth","borderRadius","textInput","textAlign","padding","margin","repetitionInputContainer","timeInputContainer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Alert,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { State } from \"react-native-gesture-handler\";\r\n//import { Picker } from \"@react-native-picker/picker\";\r\nimport Picker from \"../Simple/Picker\";\r\nvar { vmin } = require(\"react-native-expo-viewport-units\");\r\nimport firebase from \"../../../database/firebase\";\r\nimport {\r\n  widthPercentageToDP as wp,\r\n  heightPercentageToDP as hp,\r\n} from \"react-native-responsive-screen\";\r\n\r\n// redux\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as MyTypes from \"../../redux/types/types\";\r\nimport { actionsUser } from \"../../redux/actions/actionsUser\";\r\nimport ChargeScreen from \"../Simple/ChargeScreen\";\r\n\r\nfunction CustomizeRoutine(props) {\r\n  const [selectedValue, setSelectedValue] = useState({\r\n    min: 0,\r\n    max: 0,\r\n    repetitionAmount: 0,\r\n    range: [],\r\n    imcCategory: \"\",\r\n    perceivedForce: \"\",\r\n  });\r\n  const [seconds, setSeconds] = React.useState(0);\r\n  const [minutes, setMinutes] = React.useState(0);\r\n  const [time, setTime] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const values = [\r\n    \"Excesivamente Liviano\",\r\n    \"Liviano\",\r\n    \"Ni liviano ni pesado\",\r\n    \"Pesado\",\r\n    \"Excesivamente Pesado\",\r\n  ];\r\n  const calculatePerceivedEffort = (category) => {\r\n    console.log(\"Parametro de fueza percivida\", category);\r\n    let min = 0;\r\n    let max = 0;\r\n\r\n    switch (category) {\r\n      case values[0]:\r\n        min = 100;\r\n        max = 100;\r\n        break;\r\n\r\n      case values[1]:\r\n        min = 90;\r\n        max = 100;\r\n        break;\r\n\r\n      case values[2]:\r\n        min = 80;\r\n        max = 100;\r\n        break;\r\n\r\n      case values[3]:\r\n        min = 70;\r\n        max = 90;\r\n        break;\r\n\r\n      case values[4]:\r\n        min = 60;\r\n        max = 80;\r\n        break;\r\n\r\n      case values[5]:\r\n        min = 50;\r\n        max = 70;\r\n        break;\r\n\r\n      default:\r\n        min = 0;\r\n        max = 0;\r\n        break;\r\n    }\r\n\r\n    return { min, max };\r\n  };\r\n\r\n  const imcPercentaje = (imc) => {\r\n    console.log(\"El imc que llega como parametro es ;\", imc);\r\n    let min = 0;\r\n    let max = 0;\r\n    let category = \"\";\r\n\r\n    if (imc < 18.5) {\r\n      category = \"Delgadez\";\r\n      min = 100;\r\n      max = 100;\r\n    } else if (imc < 25) {\r\n      category = \"Normal\";\r\n      min = 100;\r\n      max = 100;\r\n    } else if (imc < 30) {\r\n      category = \"Sobrepeso\";\r\n      min = 70;\r\n      max = 90;\r\n    } else if (imc < 35) {\r\n      category = \"Obesidad I\";\r\n      min = 60;\r\n      max = 70;\r\n    } else if (imc < 40) {\r\n      category = \"Obesidad II\";\r\n      min = 50;\r\n      max = 60;\r\n    } else {\r\n      category = \"Obesidad III\";\r\n      min = 50;\r\n      max = 50;\r\n    }\r\n    return { min, max, category };\r\n  };\r\n\r\n  const calculatePercentajes = (user) => {\r\n    console.log(\"peso: \", user.medical.weight, \"tama;o: \", user.medical.size);\r\n    const imc = imcPercentaje(\r\n      user.medical.weight /\r\n        ((user.medical.size / 100) * (user.medical.size / 100))\r\n    );\r\n\r\n    const perceivedEffort = calculatePerceivedEffort(\r\n      user.medical.perceivedForce\r\n    );\r\n\r\n    let minimunAverage = (imc.min + perceivedEffort.min) / 2;\r\n    let maximunAverage = (imc.max + perceivedEffort.max) / 2;\r\n\r\n    minimunAverage % 10 == 5\r\n      ? (minimunAverage -= 5)\r\n      : (minimunAverage = minimunAverage);\r\n    maximunAverage % 10 == 5\r\n      ? (maximunAverage -= 5)\r\n      : (maximunAverage = maximunAverage);\r\n    let range: any = [\"Seleccionar\"];\r\n\r\n    for (let index = minimunAverage; index <= maximunAverage; index += 10) {\r\n      range.push(index);\r\n    }\r\n    console.log(\"category----\", imc.category);\r\n    setSelectedValue({\r\n      min: minimunAverage,\r\n      max: maximunAverage,\r\n      repetitionAmount: user.configuration.repetitionAmount,\r\n      range,\r\n      imcCategory: imc.category,\r\n      perceivedForce: user.medical.perceivedForce,\r\n    });\r\n    let sec = \"\";\r\n    user.configuration.restTimeSec === 0\r\n      ? (sec = 0 + \"\" + user.configuration.restTimeSec)\r\n      : (sec = user.configuration.restTimeSec);\r\n\r\n    setSeconds(user.configuration.restTimeSec);\r\n    setMinutes(user.configuration.restTimeMin);\r\n    console.warn(\"setting time--\", user.configuration.restTimeMin + \":\" + sec);\r\n    setTime(user.configuration.restTimeMin + \":\" + sec);\r\n    setLoading(false);\r\n\r\n    console.log(\"LLLLLLLLLLLLLLLLLLLos resultados son:\", imc, perceivedEffort, {\r\n      min: minimunAverage,\r\n      max: maximunAverage,\r\n      repetitionAmount: user.configuration.repetitionAmount,\r\n    });\r\n  };\r\n\r\n\r\n  const titleText = (user) => {\r\n    if (user.information.role == \"paciente\") {\r\n      return \"\";\r\n    }\r\n  };\r\n  const pull_repData = (data) => {\r\n    \r\n    setSelectedValue({ ...selectedValue, repetitionAmount: data })\r\n    console.warn(\"rep data pulled==========\", data); // LOGS DATA FROM CHILD (My name is Dean Winchester... &)\r\n  };\r\n\r\n  const pull_timeData = (data) => {\r\n    console.warn(\"time data pulled==========\", data); //\r\n    setTime(data);\r\n    let timeSelected = data.split(\":\");\r\n    setMinutes(parseInt(timeSelected[0]));\r\n    setSeconds(parseInt(timeSelected[1]));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.connection) {\r\n      firebase.db\r\n        .collection(\"users\")\r\n        .doc(firebase.auth.currentUser?.uid)\r\n        .get()\r\n        .then((user) => {\r\n          calculatePercentajes(user.data());\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      calculatePercentajes(props.user.information);\r\n      setLoading(false);\r\n    }\r\n    console.warn(\"time----\", time);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let sec = \"\";\r\n    props.configuration.restTimeSec === 0\r\n      ? (sec = 0 + \"\" + props.configuration.restTimeSec)\r\n      : (sec = props.configuration.restTimeSec);\r\n    props.configuration.restTimeMin + \":\" + sec;\r\n    props.configuration.restTimeSec === 0\r\n      ? (sec = 0 + \"\" + props.configuration.restTimeSec)\r\n      : (sec = props.configuration.restTimeSec);\r\n    if (props.navigation.state.params.btnText == \"Continuar\") {\r\n      Alert.alert(\r\n        \"Antes de comenzar: \",\r\n        \"¿Quiere configurar la intensidad de repeticiones o tiempo de reposo? \\n\\nActualmente la configuración es: \\nIntensidad - \" +\r\n          props.configuration.repetitionAmount +\r\n          \"% \\nReposo - \" +\r\n          time,\r\n        [\r\n          {\r\n            text: \"Editar intensidad y reposo \",\r\n            onPress: () => {},\r\n          },\r\n          {\r\n            text: \"Iniciar rutina\",\r\n            onPress: () =>\r\n              props.navigation.navigate(\"Ejercicios\", {\r\n                repetitionAmount: parseInt(\r\n                  props.user.information.configuration.repetitionAmount\r\n                ),\r\n                restTimeMin: parseInt(\r\n                  props.user.information.configuration.restTimeMin\r\n                ),\r\n                restTimeSec: parseInt(\r\n                  props.user.information.configuration.restTimeSec\r\n                ),\r\n              }),\r\n          },\r\n        ],\r\n        { cancelable: false }\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const updateConfig = async () => {\r\n    if (props.connection) {\r\n      console.warn(\"inside updateconfig\");\r\n      await firebase.db\r\n        .collection(\"users\")\r\n        .doc(firebase.auth.currentUser?.uid)\r\n        .update({\r\n          configuration: {\r\n            repetitionAmount: selectedValue.repetitionAmount,\r\n            restTimeMin: minutes,\r\n            restTimeSec: seconds,\r\n          },\r\n        })\r\n        .then(() => {\r\n          props.updateConfiguration({\r\n            repetitionAmount: selectedValue.repetitionAmount,\r\n            restTimeMin: minutes,\r\n            restTimeSec: seconds,\r\n          });\r\n        });\r\n    } else {\r\n    }\r\n    if (props.navigation.state.params.btnText == \"Continuar\") {\r\n      props.navigation.navigate(\"Ejercicios\", {\r\n        repetitionAmount: selectedValue.repetitionAmount,\r\n        restTimeMin: minutes,\r\n        restTimeSec: seconds,\r\n      });\r\n    } else {\r\n      setLoading(false);\r\n      props.navigation.navigate(\"ProfileScreen\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View\r\n        style={{ justifyContent: \"center\", height: \"100%\", marginTop: \"5%\" }}\r\n      >\r\n        <ChargeScreen />\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.textHeader}>\r\n            Su esfuerzo percibido es {selectedValue.perceivedForce}, y su IMC es{\" \"}\r\n            {selectedValue.imcCategory} por ende usted puede hacer entre el{\" \"}\r\n            {selectedValue.min}% y {selectedValue.max}% de las repeticiones.\r\n          </Text>\r\n        </View>\r\n        <View style={styles.configurationContainer}>\r\n          <View style={styles.containerPercentajes}>\r\n\r\n            <Text>Config. Actual {selectedValue.repetitionAmount}%</Text>\r\n          </View>\r\n\r\n          <View style={styles.containerInput}>\r\n            <Text style={{}}>Repeticiones </Text>\r\n            <Picker\r\n              width={\"100%\"}\r\n              setData={pull_repData}\r\n              placeholder={\"Seleccionar\"}\r\n              height={40}\r\n              initialValue={selectedValue.repetitionAmount}\r\n              list={selectedValue.range}\r\n              percentajes={true}\r\n            />\r\n            {/* {repetitionSelector()} */}\r\n          </View>\r\n\r\n          <View style={styles.containerInput}>\r\n            <Text style={{}}>Tiempo de Reposo entre series</Text>\r\n            <Picker\r\n              width={\"100%\"}\r\n              height={40}\r\n              placeholder={\"00:00\"}\r\n              setData={pull_timeData}\r\n              initialValue={time}\r\n              list={[\"0:00\", \"0:30\", \"1:00\", \"1:30\", \"2:00\"]}\r\n            />\r\n            {/* {unifiedTimeSlector()} */}\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.containerButton}>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {\r\n              setLoading(true);\r\n              console.warn(\"reps----\", selectedValue.repetitionAmount);\r\n              if (\r\n                selectedValue.repetitionAmount &&\r\n                selectedValue.repetitionAmount != \"Seleccionar\"\r\n              ) {\r\n                updateConfig();\r\n              } else {\r\n                Alert.alert(\r\n                  \"Por favor seleccione el porcentaje de repeticiones.\"\r\n                );\r\n              }\r\n            }}\r\n          >\r\n            <Text style={{ color: \"white\" }}>\r\n              {props.navigation.state.params.btnText}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst MapStateToProps = (store: MyTypes.ReducerState) => {\r\n  console.warn(\"configu---\", store.User.user.information.configuration);\r\n  return {\r\n    user: store.User.user,\r\n    connection: store.User.connection,\r\n    configuration: store.User.user.information.configuration,\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch: Dispatch, store: any) => ({\r\n  setUser: (val) => dispatch(actionsUser.SET_USER(val)),\r\n  updateConfiguration: (val) =>\r\n    dispatch(actionsUser.UPDATE_USER_CONFIGURATION(val)),\r\n});\r\nexport default connect(MapStateToProps, MapDispatchToProps)(CustomizeRoutine);\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    height: \"25%\",\r\n    width: \"80%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderBottomColor: \"#151522\",\r\n    borderBottomWidth: 1,\r\n    marginLeft: \"10%\",\r\n    marginRight: \"10%\",\r\n  },\r\n  textHeader: {\r\n    fontSize: vmin(5),\r\n  },\r\n\r\n  container: {\r\n    backgroundColor: \"white\",\r\n    maxWidth: wp(\"100%\"),\r\n    maxHeight: hp(\"100%\"),\r\n  },\r\n\r\n  configurationContainer: {\r\n    // backgroundColor: \"peru\",\r\n    width: \"100%\",\r\n    height: \"60%\",\r\n    //borderBottomWidth: 1,\r\n    borderBottomColor: \"#151522\",\r\n    alignItems: \"center\",\r\n\r\n    // justifyContent: \"center\",\r\n  },\r\n  containerPercentajes: {\r\n    width: \"100%\",\r\n    height: \"20%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    // backgroundColor: \"peru\",\r\n  },\r\n\r\n  containerInput: {\r\n    height: \"30%\",\r\n    width: \"90%\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginBottom: \"10%\",\r\n    justifyContent: \"space-evenly\",\r\n    // backgroundColor: \"tomato\",\r\n  },\r\n\r\n  timeContainer: {\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    height: \"100%\",\r\n    width: \"45%\",\r\n  },\r\n  textInput: {\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  containerButton: {\r\n    height: \"10%\",\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: vmin(2),\r\n    // backgroundColor: \"red\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#6979F8\",\r\n    margin: vmin(2),\r\n    width: \"80%\",\r\n    height: \"100%\",\r\n    borderRadius: 15,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  repetitionInputContainer: {\r\n    height: \"50%\",\r\n    width: \"100%\",\r\n    borderColor: \"rgba(228, 228, 228, 0.6)\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n  },\r\n\r\n  timeInputContainer: {\r\n    height: \"50%\",\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}